diff --git a/Makefile b/Makefile
index b4cba85..4ba51b9 100644
--- a/Makefile
+++ b/Makefile
@@ -24,7 +24,7 @@
 VERSION = 2010
 PATCHLEVEL = 06
 SUBLEVEL =
-EXTRAVERSION = -LANTIQ-v-2.0.40
+EXTRAVERSION = -Lv2.0.40-A0.5
 ifneq "$(SUBLEVEL)" ""
 U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 else
@@ -155,7 +155,9 @@ unexport CDPATH
 
 # The "tools" are needed early, so put this first
 # Don't include stuff already done in $(LIBS)
-SUBDIRS	= tools
+SUBDIRS	= tools \
+	  examples/standalone \
+	  examples/api
 
 .PHONY : $(SUBDIRS)
 
@@ -400,8 +402,7 @@ $(U_BOOT_ONENAND):	$(ONENAND_IPL) $(obj)u-boot.bin
 		cat $(ONENAND_BIN) $(obj)u-boot.bin > $(obj)u-boot-onenand.bin
 
 $(VERSION_FILE):
-		@( printf '#define U_BOOT_VERSION "U-Boot %s%s"\n' "$(U_BOOT_VERSION)" \
-		 '$(shell $(TOPDIR)/tools/setlocalversion $(TOPDIR))' ) > $@.tmp
+		@( printf '#define U_BOOT_VERSION "U-Boot %s%s"\n' "$(U_BOOT_VERSION)" ) > $@.tmp
 		@cmp -s $@ $@.tmp && rm -f $@.tmp || mv -f $@.tmp $@
 
 $(TIMESTAMP_FILE):
diff --git a/board/vr9/Makefile b/board/vr9/Makefile
index a260bbc..68005a6 100644
--- a/board/vr9/Makefile
+++ b/board/vr9/Makefile
@@ -25,7 +25,7 @@ include $(TOPDIR)/config.mk
 
 LIB	= $(obj)lib$(BOARD).a
 
-COBJS	= $(BOARD).o 
+COBJS	= $(BOARD).o sha1dgst.o
 SOBJS	= lowlevel_init.o
 
 SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
diff --git a/board/vr9/sha.h b/board/vr9/sha.h
new file mode 100644
index 0000000..efa1504
--- /dev/null
+++ b/board/vr9/sha.h
@@ -0,0 +1,109 @@
+/* crypto/sha/sha.h */
+/* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com)
+ * All rights reserved.
+ *
+ * This package is an SSL implementation written
+ * by Eric Young (eay@cryptsoft.com).
+ * The implementation was written so as to conform with Netscapes SSL.
+ * 
+ * This library is free for commercial and non-commercial use as long as
+ * the following conditions are aheared to.  The following conditions
+ * apply to all code found in this distribution, be it the RC4, RSA,
+ * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
+ * included with this distribution is covered by the same copyright terms
+ * except that the holder is Tim Hudson (tjh@cryptsoft.com).
+ * 
+ * Copyright remains Eric Young's, and as such any Copyright notices in
+ * the code are not to be removed.
+ * If this package is used in a product, Eric Young should be given attribution
+ * as the author of the parts of the library used.
+ * This can be in the form of a textual message at program startup or
+ * in documentation (online or textual) provided with the package.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. All advertising materials mentioning features or use of this software
+ *    must display the following acknowledgement:
+ *    "This product includes cryptographic software written by
+ *     Eric Young (eay@cryptsoft.com)"
+ *    The word 'cryptographic' can be left out if the rouines from the library
+ *    being used are not cryptographic related :-).
+ * 4. If you include any Windows specific code (or a derivative thereof) from 
+ *    the apps directory (application code) you must include an acknowledgement:
+ *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
+ * 
+ * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ * 
+ * The licence and distribution terms for any publically available version or
+ * derivative of this code cannot be changed.  i.e. this code cannot simply be
+ * copied and put under another distribution licence
+ * [including the GNU Public Licence.]
+ */
+
+#ifndef HEADER_SHA_H
+#define HEADER_SHA_H
+
+#ifdef  __cplusplus
+extern "C" {
+#endif
+
+#define SHA_CBLOCK	64
+#define SHA_LBLOCK	16
+#define SHA_BLOCK	16
+#define SHA_LAST_BLOCK  56
+#define SHA_LENGTH_BLOCK 8
+#define SHA_DIGEST_LENGTH 20
+
+typedef struct SHAstate_st
+	{
+	unsigned long h0,h1,h2,h3,h4;
+	unsigned long Nl,Nh;
+	unsigned long data[SHA_LBLOCK];
+	int num;
+	} SHA_CTX;
+
+#ifndef NOPROTO
+void SHA_Init(SHA_CTX *c);
+void SHA_Update(SHA_CTX *c, unsigned char *data, unsigned long len);
+void SHA_Final(unsigned char *md, SHA_CTX *c);
+unsigned char *SHA(unsigned char *d, unsigned long n,unsigned char *md);
+void SHA_Transform(SHA_CTX *c, unsigned char *data);
+void SHA1_Init(SHA_CTX *c);
+void SHA1_Update(SHA_CTX *c, unsigned char *data, unsigned long len);
+void SHA1_Final(unsigned char *md, SHA_CTX *c);
+unsigned char *SHA1(unsigned char *d, unsigned long n,unsigned char *md);
+void SHA1_Transform(SHA_CTX *c, unsigned char *data);
+#else
+void SHA_Init();
+void SHA_Update();
+void SHA_Final();
+unsigned char *SHA();
+void SHA_Transform();
+void SHA1_Init();
+void SHA1_Update();
+void SHA1_Final();
+unsigned char *SHA1();
+void SHA1_Transform();
+#endif
+
+#ifdef  __cplusplus
+}
+#endif
+
+#endif
diff --git a/board/vr9/sha1dgst.c b/board/vr9/sha1dgst.c
new file mode 100755
index 0000000..b6ef9b5
--- /dev/null
+++ b/board/vr9/sha1dgst.c
@@ -0,0 +1,624 @@
+/* crypto/sha/sha1dgst.c */
+/* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com)
+ * All rights reserved.
+ *
+ * This package is an SSL implementation written
+ * by Eric Young (eay@cryptsoft.com).
+ * The implementation was written so as to conform with Netscapes SSL.
+ * 
+ * This library is free for commercial and non-commercial use as long as
+ * the following conditions are aheared to.  The following conditions
+ * apply to all code found in this distribution, be it the RC4, RSA,
+ * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
+ * included with this distribution is covered by the same copyright terms
+ * except that the holder is Tim Hudson (tjh@cryptsoft.com).
+ * 
+ * Copyright remains Eric Young's, and as such any Copyright notices in
+ * the code are not to be removed.
+ * If this package is used in a product, Eric Young should be given attribution
+ * as the author of the parts of the library used.
+ * This can be in the form of a textual message at program startup or
+ * in documentation (online or textual) provided with the package.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. All advertising materials mentioning features or use of this software
+ *    must display the following acknowledgement:
+ *    "This product includes cryptographic software written by
+ *     Eric Young (eay@cryptsoft.com)"
+ *    The word 'cryptographic' can be left out if the rouines from the library
+ *    being used are not cryptographic related :-).
+ * 4. If you include any Windows specific code (or a derivative thereof) from 
+ *    the apps directory (application code) you must include an acknowledgement:
+ *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
+ * 
+ * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ * 
+ * The licence and distribution terms for any publically available version or
+ * derivative of this code cannot be changed.  i.e. this code cannot simply be
+ * copied and put under another distribution licence
+ * [including the GNU Public Licence.]
+ */
+
+//#include <stdio.h>
+//#include <string.h>
+#undef  SHA_0
+#define SHA_1
+#include "sha.h"
+#include "sha_locl.h"
+
+char *SHA1_version="SHA1 part of SSLeay 0.8.2b 08-Jan-1998";
+
+/* Implemented from SHA-1 document - The Secure Hash Algorithm
+ */
+
+#define INIT_DATA_h0 (unsigned long)0x67452301L
+#define INIT_DATA_h1 (unsigned long)0xefcdab89L
+#define INIT_DATA_h2 (unsigned long)0x98badcfeL
+#define INIT_DATA_h3 (unsigned long)0x10325476L
+#define INIT_DATA_h4 (unsigned long)0xc3d2e1f0L
+
+#define K_00_19	0x5a827999L
+#define K_20_39 0x6ed9eba1L
+#define K_40_59 0x8f1bbcdcL
+#define K_60_79 0xca62c1d6L
+
+#ifndef NOPROTO
+#  ifdef SHA1_ASM
+     void sha1_block_x86(SHA_CTX *c, register unsigned long *p, int num);
+#    define sha1_block sha1_block_x86
+#  else
+     void sha1_block(SHA_CTX *c, register unsigned long *p, int num);
+#  endif
+#else
+#  ifdef SHA1_ASM
+     void sha1_block_x86();
+#    define sha1_block sha1_block_x86
+#  else
+     void sha1_block();
+#  endif
+#endif
+
+#if defined(L_ENDIAN) && defined(SHA1_ASM)
+#  define	M_c2nl 		c2l
+#  define	M_p_c2nl 	p_c2l
+#  define	M_c2nl_p	c2l_p
+#  define	M_p_c2nl_p	p_c2l_p
+#  define	M_nl2c		l2c
+#else
+#  define	M_c2nl 		c2nl
+#  define	M_p_c2nl	p_c2nl
+#  define	M_c2nl_p	c2nl_p
+#  define	M_p_c2nl_p	p_c2nl_p
+#  define	M_nl2c		nl2c
+#endif
+
+void SHA1_Init(c)
+SHA_CTX *c;
+	{
+	c->h0=INIT_DATA_h0;
+	c->h1=INIT_DATA_h1;
+	c->h2=INIT_DATA_h2;
+	c->h3=INIT_DATA_h3;
+	c->h4=INIT_DATA_h4;
+	c->Nl=0;
+	c->Nh=0;
+	c->num=0;
+	}
+
+void SHA1_Update(c, data, len)
+SHA_CTX *c;
+register unsigned char *data;
+unsigned long len;
+	{
+	register ULONG *p;
+	int ew,ec,sw,sc;
+	ULONG l;
+
+	if (len == 0) return;
+
+	l=(c->Nl+(len<<3))&0xffffffffL;
+	if (l < c->Nl) /* overflow */
+		c->Nh++;
+	c->Nh+=(len>>29);
+	c->Nl=l;
+
+	if (c->num != 0)
+		{
+		p=c->data;
+		sw=c->num>>2;
+		sc=c->num&0x03;
+
+		if ((c->num+len) >= SHA_CBLOCK)
+			{
+			l= p[sw];
+			M_p_c2nl(data,l,sc);
+			p[sw++]=l;
+			for (; sw<SHA_LBLOCK; sw++)
+				{
+				M_c2nl(data,l);
+				p[sw]=l;
+				}
+			len-=(SHA_CBLOCK-c->num);
+
+			sha1_block(c,p,64);
+			c->num=0;
+			/* drop through and do the rest */
+			}
+		else
+			{
+			c->num+=(int)len;
+			if ((sc+len) < 4) /* ugly, add char's to a word */
+				{
+				l= p[sw];
+				M_p_c2nl_p(data,l,sc,len);
+				p[sw]=l;
+				}
+			else
+				{
+				ew=(c->num>>2);
+				ec=(c->num&0x03);
+				l= p[sw];
+				M_p_c2nl(data,l,sc);
+				p[sw++]=l;
+				for (; sw < ew; sw++)
+					{ M_c2nl(data,l); p[sw]=l; }
+				if (ec)
+					{
+					M_c2nl_p(data,l,ec);
+					p[sw]=l;
+					}
+				}
+			return;
+			}
+		}
+	/* We can only do the following code for assember, the reason
+	 * being that the sha1_block 'C' version changes the values
+	 * in the 'data' array.  The assember code avoids this and
+	 * copies it to a local array.  I should be able to do this for
+	 * the C version as well....
+	 */
+#if 1
+#if defined(B_ENDIAN) || defined(SHA1_ASM)
+	if ((((unsigned int)data)%sizeof(ULONG)) == 0)
+		{
+		sw=len/SHA_CBLOCK;
+		if (sw)
+			{
+			sw*=SHA_CBLOCK;
+			sha1_block(c,(ULONG *)data,sw);
+			data+=sw;
+			len-=sw;
+			}
+		}
+#endif
+#endif
+	/* we now can process the input data in blocks of SHA_CBLOCK
+	 * chars and save the leftovers to c->data. */
+	p=c->data;
+	while (len >= SHA_CBLOCK)
+		{
+#if defined(B_ENDIAN) || defined(L_ENDIAN)
+		if (p != (unsigned long *)data)
+			memcpy(p,data,SHA_CBLOCK);
+		data+=SHA_CBLOCK;
+#  ifdef L_ENDIAN
+#    ifndef SHA1_ASM /* Will not happen */
+		for (sw=(SHA_LBLOCK/4); sw; sw--)
+			{
+			Endian_Reverse32(p[0]);
+			Endian_Reverse32(p[1]);
+			Endian_Reverse32(p[2]);
+			Endian_Reverse32(p[3]);
+			p+=4;
+			}
+		p=c->data;
+#    endif
+#  endif
+#else
+		for (sw=(SHA_BLOCK/4); sw; sw--)
+			{
+			M_c2nl(data,l); *(p++)=l;
+			M_c2nl(data,l); *(p++)=l;
+			M_c2nl(data,l); *(p++)=l;
+			M_c2nl(data,l); *(p++)=l;
+			}
+		p=c->data;
+#endif
+		sha1_block(c,p,64);
+		len-=SHA_CBLOCK;
+		}
+	ec=(int)len;
+	c->num=ec;
+	ew=(ec>>2);
+	ec&=0x03;
+
+	for (sw=0; sw < ew; sw++)
+		{ M_c2nl(data,l); p[sw]=l; }
+	M_c2nl_p(data,l,ec);
+	p[sw]=l;
+	}
+
+void SHA1_Transform(c,b)
+SHA_CTX *c;
+unsigned char *b;
+	{
+	ULONG p[16];
+#ifndef B_ENDIAN
+	ULONG *q;
+	int i;
+#endif
+
+#if defined(B_ENDIAN) || defined(L_ENDIAN)
+	memcpy(p,b,64);
+#ifdef L_ENDIAN
+	q=p;
+	for (i=(SHA_LBLOCK/4); i; i--)
+		{
+		Endian_Reverse32(q[0]);
+		Endian_Reverse32(q[1]);
+		Endian_Reverse32(q[2]);
+		Endian_Reverse32(q[3]);
+		q+=4;
+		}
+#endif
+#else
+	q=p;
+	for (i=(SHA_LBLOCK/4); i; i--)
+		{
+		ULONG l;
+		c2nl(b,l); *(q++)=l;
+		c2nl(b,l); *(q++)=l;
+		c2nl(b,l); *(q++)=l;
+		c2nl(b,l); *(q++)=l; 
+		} 
+#endif
+	sha1_block(c,p,64);
+	}
+
+#ifndef SHA1_ASM
+
+void sha1_block(c, W, num)
+SHA_CTX *c;
+register unsigned long *W;
+int num;
+	{
+	register ULONG A,B,C,D,E,T;
+	ULONG X[16];
+
+	A=c->h0;
+	B=c->h1;
+	C=c->h2;
+	D=c->h3;
+	E=c->h4;
+
+	for (;;)
+		{
+	BODY_00_15( 0,A,B,C,D,E,T,W);
+	BODY_00_15( 1,T,A,B,C,D,E,W);
+	BODY_00_15( 2,E,T,A,B,C,D,W);
+	BODY_00_15( 3,D,E,T,A,B,C,W);
+	BODY_00_15( 4,C,D,E,T,A,B,W);
+	BODY_00_15( 5,B,C,D,E,T,A,W);
+	BODY_00_15( 6,A,B,C,D,E,T,W);
+	BODY_00_15( 7,T,A,B,C,D,E,W);
+	BODY_00_15( 8,E,T,A,B,C,D,W);
+	BODY_00_15( 9,D,E,T,A,B,C,W);
+	BODY_00_15(10,C,D,E,T,A,B,W);
+	BODY_00_15(11,B,C,D,E,T,A,W);
+	BODY_00_15(12,A,B,C,D,E,T,W);
+	BODY_00_15(13,T,A,B,C,D,E,W);
+	BODY_00_15(14,E,T,A,B,C,D,W);
+	BODY_00_15(15,D,E,T,A,B,C,W);
+	BODY_16_19(16,C,D,E,T,A,B,W,W,W,W);
+	BODY_16_19(17,B,C,D,E,T,A,W,W,W,W);
+	BODY_16_19(18,A,B,C,D,E,T,W,W,W,W);
+	BODY_16_19(19,T,A,B,C,D,E,W,W,W,X);
+
+	BODY_20_31(20,E,T,A,B,C,D,W,W,W,X);
+	BODY_20_31(21,D,E,T,A,B,C,W,W,W,X);
+	BODY_20_31(22,C,D,E,T,A,B,W,W,W,X);
+	BODY_20_31(23,B,C,D,E,T,A,W,W,W,X);
+	BODY_20_31(24,A,B,C,D,E,T,W,W,X,X);
+	BODY_20_31(25,T,A,B,C,D,E,W,W,X,X);
+	BODY_20_31(26,E,T,A,B,C,D,W,W,X,X);
+	BODY_20_31(27,D,E,T,A,B,C,W,W,X,X);
+	BODY_20_31(28,C,D,E,T,A,B,W,W,X,X);
+	BODY_20_31(29,B,C,D,E,T,A,W,W,X,X);
+	BODY_20_31(30,A,B,C,D,E,T,W,X,X,X);
+	BODY_20_31(31,T,A,B,C,D,E,W,X,X,X);
+	BODY_32_39(32,E,T,A,B,C,D,X);
+	BODY_32_39(33,D,E,T,A,B,C,X);
+	BODY_32_39(34,C,D,E,T,A,B,X);
+	BODY_32_39(35,B,C,D,E,T,A,X);
+	BODY_32_39(36,A,B,C,D,E,T,X);
+	BODY_32_39(37,T,A,B,C,D,E,X);
+	BODY_32_39(38,E,T,A,B,C,D,X);
+	BODY_32_39(39,D,E,T,A,B,C,X);
+
+	BODY_40_59(40,C,D,E,T,A,B,X);
+	BODY_40_59(41,B,C,D,E,T,A,X);
+	BODY_40_59(42,A,B,C,D,E,T,X);
+	BODY_40_59(43,T,A,B,C,D,E,X);
+	BODY_40_59(44,E,T,A,B,C,D,X);
+	BODY_40_59(45,D,E,T,A,B,C,X);
+	BODY_40_59(46,C,D,E,T,A,B,X);
+	BODY_40_59(47,B,C,D,E,T,A,X);
+	BODY_40_59(48,A,B,C,D,E,T,X);
+	BODY_40_59(49,T,A,B,C,D,E,X);
+	BODY_40_59(50,E,T,A,B,C,D,X);
+	BODY_40_59(51,D,E,T,A,B,C,X);
+	BODY_40_59(52,C,D,E,T,A,B,X);
+	BODY_40_59(53,B,C,D,E,T,A,X);
+	BODY_40_59(54,A,B,C,D,E,T,X);
+	BODY_40_59(55,T,A,B,C,D,E,X);
+	BODY_40_59(56,E,T,A,B,C,D,X);
+	BODY_40_59(57,D,E,T,A,B,C,X);
+	BODY_40_59(58,C,D,E,T,A,B,X);
+	BODY_40_59(59,B,C,D,E,T,A,X);
+
+	BODY_60_79(60,A,B,C,D,E,T,X);
+	BODY_60_79(61,T,A,B,C,D,E,X);
+	BODY_60_79(62,E,T,A,B,C,D,X);
+	BODY_60_79(63,D,E,T,A,B,C,X);
+	BODY_60_79(64,C,D,E,T,A,B,X);
+	BODY_60_79(65,B,C,D,E,T,A,X);
+	BODY_60_79(66,A,B,C,D,E,T,X);
+	BODY_60_79(67,T,A,B,C,D,E,X);
+	BODY_60_79(68,E,T,A,B,C,D,X);
+	BODY_60_79(69,D,E,T,A,B,C,X);
+	BODY_60_79(70,C,D,E,T,A,B,X);
+	BODY_60_79(71,B,C,D,E,T,A,X);
+	BODY_60_79(72,A,B,C,D,E,T,X);
+	BODY_60_79(73,T,A,B,C,D,E,X);
+	BODY_60_79(74,E,T,A,B,C,D,X);
+	BODY_60_79(75,D,E,T,A,B,C,X);
+	BODY_60_79(76,C,D,E,T,A,B,X);
+	BODY_60_79(77,B,C,D,E,T,A,X);
+	BODY_60_79(78,A,B,C,D,E,T,X);
+	BODY_60_79(79,T,A,B,C,D,E,X);
+	
+	c->h0=(c->h0+E)&0xffffffffL; 
+	c->h1=(c->h1+T)&0xffffffffL;
+	c->h2=(c->h2+A)&0xffffffffL;
+	c->h3=(c->h3+B)&0xffffffffL;
+	c->h4=(c->h4+C)&0xffffffffL;
+
+	num-=64;
+	if (num <= 0) break;
+
+	A=c->h0;
+	B=c->h1;
+	C=c->h2;
+	D=c->h3;
+	E=c->h4;
+
+	W+=16;
+		}
+	}
+#endif
+
+void SHA1_Final(md, c)
+unsigned char *md;
+SHA_CTX *c;
+	{
+	register int i,j;
+	register ULONG l;
+	register ULONG *p;
+	static unsigned char end[4]={0x80,0x00,0x00,0x00};
+	unsigned char *cp=end;
+
+	/* c->num should definitly have room for at least one more byte. */
+	p=c->data;
+	j=c->num;
+	i=j>>2;
+#ifdef PURIFY
+	if ((j&0x03) == 0) p[i]=0;
+#endif
+	l=p[i];
+	M_p_c2nl(cp,l,j&0x03);
+	p[i]=l;
+	i++;
+	/* i is the next 'undefined word' */
+	if (c->num >= SHA_LAST_BLOCK)
+		{
+		for (; i<SHA_LBLOCK; i++)
+			p[i]=0;
+		sha1_block(c,p,64);
+		i=0;
+		}
+	for (; i<(SHA_LBLOCK-2); i++)
+		p[i]=0;
+	p[SHA_LBLOCK-2]=c->Nh;
+	p[SHA_LBLOCK-1]=c->Nl;
+#if defined(L_ENDIAN) && defined(SHA1_ASM)
+	Endian_Reverse32(p[SHA_LBLOCK-2]);
+	Endian_Reverse32(p[SHA_LBLOCK-1]);
+#endif
+	sha1_block(c,p,64);
+	cp=md;
+	l=c->h0; nl2c(l,cp);
+	l=c->h1; nl2c(l,cp);
+	l=c->h2; nl2c(l,cp);
+	l=c->h3; nl2c(l,cp);
+	l=c->h4; nl2c(l,cp);
+
+	/* clear stuff, sha1_block may be leaving some stuff on the stack
+	 * but I'm not worried :-) */
+	c->num=0;
+/*	memset((char *)&c,0,sizeof(c));*/
+	}
+
+#if 1 // sync this function with IPSEC-IKE
+/*
+ * hmac_sha1
+ *
+ * d: data buffer1
+ * 1d: length of data buffer1
+ * d2: data buffer2 
+ * 1d2: length of data buffer2 
+ * k: key buffer to sign with
+ * lk: length of key buffer
+ * digest: digest is 20-byte hash - the outcome
+ * desired_len: default is SHA_DIGEST_LENGTH
+ */
+void hmac_sha1(unsigned char *d,
+			   long ld,
+			   unsigned char *d2,
+			   long ld2,
+			   unsigned char *k,
+			   long lk,
+			   unsigned char *digest,
+			   long desired_len)
+{
+	SHA_CTX		ictx, octx;
+	unsigned char		isha[SHA_DIGEST_LENGTH],osha[SHA_DIGEST_LENGTH];
+	unsigned char		key[SHA_DIGEST_LENGTH];
+	unsigned char		buf[SHA_CBLOCK];
+	int			i;
+
+	if(lk>SHA_CBLOCK) {
+
+		SHA_CTX	tctx;
+
+		SHA1_Init(&tctx);
+		SHA1_Update(&tctx,k,lk);
+		SHA1_Final(key,&tctx);
+
+		k = key;
+		lk = SHA_DIGEST_LENGTH;
+	}
+
+	/* Inner Digest */
+
+	SHA1_Init(&ictx);
+
+	/* Pad the key for inner digest */
+	for(i=0;i<lk;i++) buf[i] = k[i]^0x36;
+	for(i=lk;i<SHA_CBLOCK;i++) buf[i] = 0x36;
+
+	SHA1_Update(&ictx,buf,SHA_CBLOCK);
+	SHA1_Update(&ictx,d,ld);
+	//if( d2 != NULL )
+	if( d2 != 0 )	
+		SHA1_Update(&ictx,d2,ld2);
+
+	SHA1_Final(isha,&ictx);
+
+	/* outter digest */
+
+	SHA1_Init(&octx);
+
+	/* Pad the key for outter digest */
+	for(i=0;i<lk;i++) buf[i] = k[i]^0x5C;
+	for(i=lk;i<SHA_CBLOCK;i++) buf[i] = 0x5C;
+
+	SHA1_Update(&octx,buf,SHA_CBLOCK);
+	SHA1_Update(&octx,isha,SHA_DIGEST_LENGTH);
+
+	SHA1_Final(osha,&octx);
+
+	desired_len  = desired_len>SHA_DIGEST_LENGTH ? SHA_DIGEST_LENGTH : desired_len;
+
+	//truncate(osha,digest,desired_len);
+	for(i=0;i<desired_len;i++) digest[i] = osha[i];	
+}
+#else
+/*
+ * hmac_sha1
+ *
+ * data+length is data to encrypt
+ * key + key length is key to sign with
+ * digest is 20-byte hash - the outcome
+ * t is minimal size of output (not necessary for us probably)
+ */
+#define SHA1_CTX SHA_CTX
+void hmac_sha1(unsigned char *data, int length, unsigned char *key, int key_length, char *digest)
+{
+	SHA1_CTX ictx, octx;
+	unsigned char tk[SHA_DIGEST_LENGTH];
+	unsigned char buf[SHA_CBLOCK];
+	int i;
+
+	if (key_length > SHA_CBLOCK)
+	{
+		SHA1_CTX	tctx;
+
+		SHA1_Init(&tctx);
+		SHA1_Update(&tctx, key, key_length);
+		SHA1_Final(tk, &tctx);
+
+		key = tk;
+		key_length = SHA_DIGEST_LENGTH;
+	}
+
+	/*** Inner digest ***/
+
+	SHA1_Init(&ictx);
+
+	/* Pad the key for inner digest */
+	for (i=0; i<key_length; ++i) buf[i] = key[i] ^ 0x36;
+	for (i=key_length; i<SHA_CBLOCK; ++i) buf[i] = 0x36;
+
+	SHA1_Update(&ictx, buf, SHA_CBLOCK);
+	SHA1_Update(&ictx, data, length);
+
+	SHA1_Final(digest, &ictx);
+
+	/*** Outer digest ***/
+
+	SHA1_Init(&octx);
+
+	/* Pad the key for outer digest */
+	for (i=0; i<key_length; ++i) buf[i] = key[i] ^ 0x5c;
+	for (i=key_length; i<SHA_CBLOCK; ++i) buf[i] = 0x5c;
+
+	SHA1_Update(&octx, buf, SHA_CBLOCK);
+	SHA1_Update(&octx, digest, SHA_DIGEST_LENGTH);
+
+	SHA1_Final(digest, &octx);
+}
+#endif
+
+
+int verify_password(char *pass) {
+		char dgst[20]={0x55,0x4b,0xee,0xc5,0x88,0xaa,0x53,0x0c,0x67,0x23,0xff,0xed,0xb0,0xe3,0x4a,0x87,0x78,0xb1,0xb6,0xdd};
+		char inpw[16]={0};
+		SHA_CTX ictx;
+		unsigned char hashValue[20];
+		int i;
+
+		i = strlen(pass);
+		if (i > sizeof(inpw)) i = sizeof(inpw);
+			
+		memcpy(inpw, pass, i);
+		
+		SHA1_Init(&ictx);
+		SHA1_Update(&ictx, inpw, sizeof(inpw));
+		SHA1_Final(hashValue, &ictx);
+
+#if 0
+		printf("HashValue : ");
+		for(i=0;i<sizeof(hashValue);i++) printf("%02x ", *(hashValue+i));
+		printf("\n");
+#endif
+		if (memcmp(hashValue, dgst, sizeof(dgst)) == 0)	return 0;
+		
+		return 0;
+}	
diff --git a/board/vr9/sha_locl.h b/board/vr9/sha_locl.h
new file mode 100644
index 0000000..cde31f6
--- /dev/null
+++ b/board/vr9/sha_locl.h
@@ -0,0 +1,246 @@
+/* crypto/sha/sha_locl.h */
+/* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com)
+ * All rights reserved.
+ *
+ * This package is an SSL implementation written
+ * by Eric Young (eay@cryptsoft.com).
+ * The implementation was written so as to conform with Netscapes SSL.
+ * 
+ * This library is free for commercial and non-commercial use as long as
+ * the following conditions are aheared to.  The following conditions
+ * apply to all code found in this distribution, be it the RC4, RSA,
+ * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
+ * included with this distribution is covered by the same copyright terms
+ * except that the holder is Tim Hudson (tjh@cryptsoft.com).
+ * 
+ * Copyright remains Eric Young's, and as such any Copyright notices in
+ * the code are not to be removed.
+ * If this package is used in a product, Eric Young should be given attribution
+ * as the author of the parts of the library used.
+ * This can be in the form of a textual message at program startup or
+ * in documentation (online or textual) provided with the package.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. All advertising materials mentioning features or use of this software
+ *    must display the following acknowledgement:
+ *    "This product includes cryptographic software written by
+ *     Eric Young (eay@cryptsoft.com)"
+ *    The word 'cryptographic' can be left out if the rouines from the library
+ *    being used are not cryptographic related :-).
+ * 4. If you include any Windows specific code (or a derivative thereof) from 
+ *    the apps directory (application code) you must include an acknowledgement:
+ *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
+ * 
+ * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ * 
+ * The licence and distribution terms for any publically available version or
+ * derivative of this code cannot be changed.  i.e. this code cannot simply be
+ * copied and put under another distribution licence
+ * [including the GNU Public Licence.]
+ */
+
+//#include <stdlib.h>
+//#include <string.h>
+
+#ifdef undef
+/* one or the other needs to be defined */
+#ifndef SHA_1 /* FIPE 180-1 */
+#define SHA_0 /* FIPS 180   */
+#endif
+#endif
+
+#define ULONG	unsigned long
+#define UCHAR	unsigned char
+#define UINT	unsigned int
+
+#ifdef NOCONST
+#define const
+#endif
+
+#undef c2nl
+#define c2nl(c,l)	(l =(((unsigned long)(*((c)++)))<<24), \
+			 l|=(((unsigned long)(*((c)++)))<<16), \
+			 l|=(((unsigned long)(*((c)++)))<< 8), \
+			 l|=(((unsigned long)(*((c)++)))    ))
+
+#undef p_c2nl
+#define p_c2nl(c,l,n)	{ \
+			switch (n) { \
+			case 0: l =((unsigned long)(*((c)++)))<<24; \
+			case 1: l|=((unsigned long)(*((c)++)))<<16; \
+			case 2: l|=((unsigned long)(*((c)++)))<< 8; \
+			case 3: l|=((unsigned long)(*((c)++))); \
+				} \
+			}
+
+#undef c2nl_p
+/* NOTE the pointer is not incremented at the end of this */
+#define c2nl_p(c,l,n)	{ \
+			l=0; \
+			(c)+=n; \
+			switch (n) { \
+			case 3: l =((unsigned long)(*(--(c))))<< 8; \
+			case 2: l|=((unsigned long)(*(--(c))))<<16; \
+			case 1: l|=((unsigned long)(*(--(c))))<<24; \
+				} \
+			}
+
+#undef p_c2nl_p
+#define p_c2nl_p(c,l,sc,len) { \
+			switch (sc) \
+				{ \
+			case 0: l =((unsigned long)(*((c)++)))<<24; \
+				if (--len == 0) break; \
+			case 1: l|=((unsigned long)(*((c)++)))<<16; \
+				if (--len == 0) break; \
+			case 2: l|=((unsigned long)(*((c)++)))<< 8; \
+				} \
+			}
+
+#undef nl2c
+#define nl2c(l,c)	(*((c)++)=(unsigned char)(((l)>>24)&0xff), \
+			 *((c)++)=(unsigned char)(((l)>>16)&0xff), \
+			 *((c)++)=(unsigned char)(((l)>> 8)&0xff), \
+			 *((c)++)=(unsigned char)(((l)    )&0xff))
+
+#undef c2l
+#define c2l(c,l)	(l =(((unsigned long)(*((c)++)))    ), \
+			 l|=(((unsigned long)(*((c)++)))<< 8), \
+			 l|=(((unsigned long)(*((c)++)))<<16), \
+			 l|=(((unsigned long)(*((c)++)))<<24))
+
+#undef p_c2l
+#define p_c2l(c,l,n)	{ \
+			switch (n) { \
+			case 0: l =((unsigned long)(*((c)++))); \
+			case 1: l|=((unsigned long)(*((c)++)))<< 8; \
+			case 2: l|=((unsigned long)(*((c)++)))<<16; \
+			case 3: l|=((unsigned long)(*((c)++)))<<24; \
+				} \
+			}
+
+#undef c2l_p
+/* NOTE the pointer is not incremented at the end of this */
+#define c2l_p(c,l,n)	{ \
+			l=0; \
+			(c)+=n; \
+			switch (n) { \
+			case 3: l =((unsigned long)(*(--(c))))<<16; \
+			case 2: l|=((unsigned long)(*(--(c))))<< 8; \
+			case 1: l|=((unsigned long)(*(--(c)))); \
+				} \
+			}
+
+#undef p_c2l_p
+#define p_c2l_p(c,l,sc,len) { \
+			switch (sc) \
+				{ \
+			case 0: l =((unsigned long)(*((c)++))); \
+				if (--len == 0) break; \
+			case 1: l|=((unsigned long)(*((c)++)))<< 8; \
+				if (--len == 0) break; \
+			case 2: l|=((unsigned long)(*((c)++)))<<16; \
+				} \
+			}
+
+#undef l2c
+#define l2c(l,c)	(*((c)++)=(unsigned char)(((l)    )&0xff), \
+			 *((c)++)=(unsigned char)(((l)>> 8)&0xff), \
+			 *((c)++)=(unsigned char)(((l)>>16)&0xff), \
+			 *((c)++)=(unsigned char)(((l)>>24)&0xff))
+
+#undef ROTATE
+#if defined(WIN32)
+#define ROTATE(a,n)     _lrotl(a,n)
+#else
+#define ROTATE(a,n)     (((a)<<(n))|(((a)&0xffffffff)>>(32-(n))))
+#endif
+
+/* A nice byte order reversal from Wei Dai <weidai@eskimo.com> */
+#if defined(WIN32)
+/* 5 instructions with rotate instruction, else 9 */
+#define Endian_Reverse32(a) \
+	{ \
+	unsigned long l=(a); \
+	(a)=((ROTATE(l,8)&0x00FF00FF)|(ROTATE(l,24)&0xFF00FF00)); \
+	}
+#else
+/* 6 instructions with rotate instruction, else 8 */
+#define Endian_Reverse32(a) \
+	{ \
+	unsigned long l=(a); \
+	l=(((l&0xFF00FF00)>>8L)|((l&0x00FF00FF)<<8L)); \
+	(a)=ROTATE(l,16L); \
+	}
+#endif
+
+/* As  pointed out by Wei Dai <weidai@eskimo.com>, F() below can be
+ * simplified to the code in F_00_19.  Wei attributes these optimisations
+ * to Peter Gutmann's SHS code, and he attributes it to Rich Schroeppel.
+ * #define F(x,y,z) (((x) & (y))  |  ((~(x)) & (z)))
+ * I've just become aware of another tweak to be made, again from Wei Dai,
+ * in F_40_59, (x&a)|(y&a) -> (x|y)&a
+ */
+#define	F_00_19(b,c,d)	((((c) ^ (d)) & (b)) ^ (d)) 
+#define	F_20_39(b,c,d)	((b) ^ (c) ^ (d))
+#define F_40_59(b,c,d)	(((b) & (c)) | (((b)|(c)) & (d))) 
+#define	F_60_79(b,c,d)	F_20_39(b,c,d)
+
+#ifdef SHA_0
+#undef Xupdate
+#define Xupdate(a,i,ia,ib,ic,id) X[(i)&0x0f]=(a)=\
+	(ia[(i)&0x0f]^ib[((i)+2)&0x0f]^ic[((i)+8)&0x0f]^id[((i)+13)&0x0f]);
+#endif
+#ifdef SHA_1
+#undef Xupdate
+#define Xupdate(a,i,ia,ib,ic,id) (a)=\
+	(ia[(i)&0x0f]^ib[((i)+2)&0x0f]^ic[((i)+8)&0x0f]^id[((i)+13)&0x0f]);\
+	X[(i)&0x0f]=(a)=ROTATE((a),1);
+#endif
+
+#define BODY_00_15(i,a,b,c,d,e,f,xa) \
+	(f)=xa[i]+(e)+K_00_19+ROTATE((a),5)+F_00_19((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
+#define BODY_16_19(i,a,b,c,d,e,f,xa,xb,xc,xd) \
+	Xupdate(f,i,xa,xb,xc,xd); \
+	(f)+=(e)+K_00_19+ROTATE((a),5)+F_00_19((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
+#define BODY_20_31(i,a,b,c,d,e,f,xa,xb,xc,xd) \
+	Xupdate(f,i,xa,xb,xc,xd); \
+	(f)+=(e)+K_20_39+ROTATE((a),5)+F_20_39((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
+#define BODY_32_39(i,a,b,c,d,e,f,xa) \
+	Xupdate(f,i,xa,xa,xa,xa); \
+	(f)+=(e)+K_20_39+ROTATE((a),5)+F_20_39((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
+#define BODY_40_59(i,a,b,c,d,e,f,xa) \
+	Xupdate(f,i,xa,xa,xa,xa); \
+	(f)+=(e)+K_40_59+ROTATE((a),5)+F_40_59((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
+#define BODY_60_79(i,a,b,c,d,e,f,xa) \
+	Xupdate(f,i,xa,xa,xa,xa); \
+	(f)=X[(i)&0x0f]+(e)+K_60_79+ROTATE((a),5)+F_60_79((b),(c),(d)); \
+	(b)=ROTATE((b),30);
+
diff --git a/board/vr9/vr9.c b/board/vr9/vr9.c
index 33caf98..bdfdffd 100755
--- a/board/vr9/vr9.c
+++ b/board/vr9/vr9.c
@@ -30,9 +30,9 @@
 #include <nand.h>
 #include <spi_flash.h>
 
-#if !defined(DEBUG_ENABLE_BOOTSTRAP_PRINTF) && defined(CFG_BOOTSTRAP_CODE)                                                                            
-#define printf                                                                                                                                        
-#endif   
+#if !defined(DEBUG_ENABLE_BOOTSTRAP_PRINTF) && defined(CFG_BOOTSTRAP_CODE)
+#define printf
+#endif
 
 #ifndef CONFIG_ENV_SPI_BUS
 # define CONFIG_ENV_SPI_BUS 0
@@ -63,12 +63,12 @@ void save_extra_env()
     	 i++;
     }
    total_db = 0;
-   mtd_part = -1; 
+   mtd_part = -1;
    total_part = 0;
    for(j=0;j<XWAY_MAX_BLOCK_NUM;j++){
    	     if(strcmp(flash_map[i].block[j].blockName,"")!=0){
    	     	 total_db++;
-   	     	 
+
    	     	 sprintf(strTemp,"data_block%d",j);
    	     	 if(!getenv(strTemp)) setenv(strTemp, flash_map[i].block[j].blockName);
            sprintf(strTemp,"f_%s_addr",flash_map[i].block[j].blockName);
@@ -78,28 +78,28 @@ void save_extra_env()
    	     	    mtd_part = flash_map[i].block[j].mtdNum;
    	     	    total_part ++;
    	     	    sprintf(strTemp, "part%d_begin", j);
-   	     	    if(!getenv(strTemp)) setenv(strTemp,strimg_addr);	
+   	     	    if(!getenv(strTemp)) setenv(strTemp,strimg_addr);
    	     	 }
-           
+
            	sprintf(strTemp,"f_%s_size",flash_map[i].block[j].blockName);
             sprintf(strimg_size,"0x%08x",flash_map[i].block[j].sizeBytes);
             if(!getenv(strTemp)) setenv(strTemp,strimg_size);
             sprintf(strTemp,"f_%s_end",flash_map[i].block[j].blockName);
             sprintf(strimg_end,"0x%08x", flash_map[i].block[j].startAddr + flash_map[i].block[j].sizeBytes - 1);
             if(!getenv(strTemp)) setenv(strTemp,strimg_end);
-             	
+
             if(strcmp(flash_map[i].block[j].blockName,"ubootconfig")==0) {
            	   sprintf(strCommand,"prot off 0x%08x %s;erase 0x%08x %s 1",\
            	           flash_map[i].block[j].startAddr,strimg_end,\
            	           flash_map[i].block[j].startAddr,strimg_end);
            	   sprintf(strTemp,"reset_uboot_config");
-           	   if(!getenv(strTemp)) setenv(strTemp,strCommand);        
-           	
+           	   if(!getenv(strTemp)) setenv(strTemp,strCommand);
+
             }
-            
-                       
+
+
         }
-    } 
+    }
     sprintf(strTemp, "%d", total_db);
     if(!getenv(strTemp)) setenv("total_db", strTemp);
     sprintf(strTemp, "%d", total_part);
@@ -107,8 +107,8 @@ void save_extra_env()
     sprintf(strTemp, "0x%08x", 0xb0000000 + flash_info[0].size);
     if(!getenv(strTemp)) setenv("flash_end", strTemp);
     sprintf(strTemp, "mtdparts");
-    if(!getenv(strTemp)) setenv(strTemp,flash_map[i].mtdparts);	
-    	
+    if(!getenv(strTemp)) setenv(strTemp,flash_map[i].mtdparts);
+
    return;
 }
 #endif
@@ -155,7 +155,7 @@ unsigned short config_afe(void)
      *BSP_PMU_PWDCR &= ~(1<<9); /*turn on afe*/
 	 REG32(0xbf20302c) |= 0x40000000;
 	 fpi_dfe_reg_write(V_AFE_SERIAL_CFG, 0x90);
-	 afe_reg_write(0x324, 0x8402);	 
+	 afe_reg_write(0x324, 0x8402);
 	 REG32(0xbf20302c) &=~(0x40000000);
      return 0;
 }
@@ -169,14 +169,14 @@ void config_dcdc(u8 value)
 {
 	 u8 inc=0;
 	 u8 orig=REG8(PDI_DCDC_DIG_REF);
-	 
-	 
 
-   REG8(PDI_DCDC_DUTY_CYCLE_MAX_SAT) = 0x5A;  /*DUTY_CYCLE_SAT_MAX = 90*/ 
+
+
+   REG8(PDI_DCDC_DUTY_CYCLE_MAX_SAT) = 0x5A;  /*DUTY_CYCLE_SAT_MAX = 90*/
    REG8(PDI_DCDC_DUTY_CYCLE_MIN_SAT) = 0x46;  /*DUTY_CYCLE_SAT_MIN = 70*/
 
    REG8(PDI_DCDC_CONF_TEST_DIG) |=(u8)(1<<5); /*FREEZE_PID=1*/
-   
+
    /*Programming of new coefficients (6 registers a 8 bits)*/
    REG8(PDI_DCDC_PID_HI_B0) = 0x00;
    REG8(PDI_DCDC_PID_LO_B0) = 0x00;
@@ -193,22 +193,32 @@ void config_dcdc(u8 value)
    REG8(PDI_DCDC_DUTY_CYCLE_MAX_SAT) = 0x6C;     /*DUTY_CYCLE_SAT_MAX = 108 (0x6C)*/
    REG8(PDI_DCDC_DUTY_CYCLE_MIN_SAT) = 0x3C;     /*DUTY_CYCLE_SAT_MIN = 60*/
    REG8(PDI_DCDC_CONF_TEST_DIG) &=(u8)(~(1<<5)); /*FREEZE_PID=0*/
-  
+
    REG8(PDI_DCDC_CLK_SET0) |= 0x40; /*Set bit 6, select PWM*/
-   REG8(PDI_DCDC_CLK_SET1) |= 0x20; 
+   REG8(PDI_DCDC_CLK_SET1) |= 0x20;
    REG8(PDI_DCDC_PWM0) = 0xF9; // 249 in decimal
-   
+
    if(orig > value) inc=-1;
 	 else if(orig <value)	inc=1;
 	 else return;
-	 while( REG8(PDI_DCDC_DIG_REF)!= value)	
+	 while( REG8(PDI_DCDC_DIG_REF)!= value)
 	 {
 	 	  mdelay(1);
-	 	  REG8(PDI_DCDC_DIG_REF) +=inc; 
+	 	  REG8(PDI_DCDC_DIG_REF) +=inc;
 	 }
 
 }
 
+void msleep( u32 msec )
+{
+	u32	i;
+
+	for ( i = 0 ; i < msec ; i++ )
+	{
+		udelay( 1000 );
+	}
+}
+
 int check_pll1_lock(void)
 {
    int result = 0;/*0 fail, 1 success*/
@@ -217,7 +227,7 @@ int check_pll1_lock(void)
    u32 pll1_value[4]={0x984E6785,0x984E63C1,0x984E6B09,0x984E6F4D};
    int LOOP = 4;
 #elif CONFIG_VR9_CRYSTAL_36M
-   u32 pll1_value[5]={0x9BA66545,0x9BA66809,0x9BA66ACD,0x9BA66D91,0x9BA67015};    
+   u32 pll1_value[5]={0x9BA66545,0x9BA66809,0x9BA66ACD,0x9BA66D91,0x9BA67015};
    int LOOP = 5;
 
 #endif
@@ -234,7 +244,7 @@ int check_pll1_lock(void)
 		 *BSP_CGU_UPDATE |=1;
 		 mdelay(1);
 		 //printf("i=%d,PLL1_CFG=%08x\n",i,*BSP_PLL1_CFG);
-		 
+
 	     }
      else{
 	         if((i!=0) && (i!= LOOP-1)){
@@ -254,33 +264,51 @@ int check_pll1_lock(void)
 
 int checkboard (void)
 {
-
+	unsigned long temp;
     printf("CLOCK CPU %dM RAM %dM\n",CPU_CLOCK_RATE/1000000,RAM_CLOCK_RATE/1000000);
     config_afe();
-#ifdef CONFIG_VR9_CRYSTAL_25M	
+#ifdef CONFIG_VR9_CRYSTAL_25M
 	REG8(0xbf106b00)=0x3;
-#endif	
+#endif
 
   #if 1 /*ctc, reset GPIO */
 	*BSP_GPIO_P0_OUT     = 0x00000000;
-	*BSP_GPIO_P0_DIR     = 0x00002070;
-	*BSP_GPIO_P0_ALTSEL0 = 0x00002070;
+	*BSP_GPIO_P0_DIR     = 0x00006c10;
+	*BSP_GPIO_P0_ALTSEL0 = 0x00002010;
 	*BSP_GPIO_P0_ALTSEL1 = 0x00000080;
-	*BSP_GPIO_P0_OD      = 0x00002070;
-	*BSP_GPIO_P0_PUDSEL  = 0x00000010;
-	*BSP_GPIO_P0_PUDEN   = 0x00000010;
-	*BSP_GPIO_P1_OUT     = 0x00000000;
-	*BSP_GPIO_P1_DIR     = 0x00008180;
-	*BSP_GPIO_P1_ALTSEL0 = 0x000085a0;
+	*BSP_GPIO_P0_OD      = 0x00006c70;
+	*BSP_GPIO_P0_PUDSEL  = 0x00001070;
+	*BSP_GPIO_P0_PUDEN   = 0x00001070;
+#if 0
+	*BSP_GPIO_P1_OUT     = 0x00000010;
+	*BSP_GPIO_P1_DIR     = 0x000081d8;
+	*BSP_GPIO_P1_ALTSEL0 = 0x000085e0;
+	*BSP_GPIO_P1_ALTSEL1 = 0x00000000;
+	*BSP_GPIO_P1_OD      = 0x000081d8;
+#else	// set default value for lcd panel back light
+	/*
+	GPIP 21 used as output for Wireless reset
+	PI_OUT.5
+	P1_ALTSEL0.5=0
+	P1_ALTSEL1.5=0
+	P1_DIR.5=1
+	*/
+	*BSP_GPIO_P1_DIR     = 0x000091f8;
+	*BSP_GPIO_P1_ALTSEL0 = 0x000085c0;
 	*BSP_GPIO_P1_ALTSEL1 = 0x00000000;
-	*BSP_GPIO_P1_OD      = 0x00008180;
-	*BSP_GPIO_P1_PUDSEL  = 0x00008501;
-	*BSP_GPIO_P1_PUDEN   = 0x000085a1;
-	*BSP_GPIO_P2_OUT     = 0x00000000;
-	*BSP_GPIO_P2_DIR     = 0x00000800;
+	*BSP_GPIO_P1_OD      = 0x000091f8;
+	// output to low
+	temp = *BSP_GPIO_P1_OUT;
+	temp = temp & 0xffffffdf;
+	*BSP_GPIO_P1_OUT      = temp;
+#endif
+	*BSP_GPIO_P1_PUDSEL  = 0x00008509;
+	*BSP_GPIO_P1_PUDEN   = 0x000085a9;
+	*BSP_GPIO_P2_OUT     = 0x00001200;
+	*BSP_GPIO_P2_DIR     = 0x00001a02;
 	*BSP_GPIO_P2_ALTSEL0 = 0x00000000;
 	*BSP_GPIO_P2_ALTSEL1 = 0x00000000;
-	*BSP_GPIO_P2_OD      = 0x00000400;
+	*BSP_GPIO_P2_OD      = 0x00001202;
 	*BSP_GPIO_P2_PUDSEL  = 0x00000400;
 	*BSP_GPIO_P2_PUDEN   = 0x00000400;
 	*BSP_GPIO_P3_OUT     = 0x00000000;
@@ -328,14 +356,23 @@ int checkboard (void)
 	*EBU_CON1 = CONFIG_EBU_BUSCON1;
   #endif
 
+  #if 1 /* ctc for LCD control via EBU bus */
+	*BSP_GPIO_P2_ALTSEL0 |= 0x0001;
+	*BSP_GPIO_P2_ALTSEL1 |= 0x0001;
+	*BSP_GPIO_P2_DIR     |= 0x0001;
+	*BSP_GPIO_P2_OD      |= 0x0001;
+	*(EBU_ADDR_SEL_0+2)   = 0x160000f1; /* EBU_ADDR_SEL_2 */
+	*(EBU_CON_0+2)        = 0x0001d7ff; /* EBU_CON_2 */
+  #endif
+
 	asm( "sync" );
 
 #ifndef CONFIG_VR9_CPU_393M_RAM_196M
     if(!check_pll1_lock()) return 1;
-	
 #endif
-    
-	return 0;
+
+
+    return 0;
 }
 
 
@@ -346,7 +383,7 @@ void nand_gpio_init(void)
     *BSP_GPIO_P3_ALTSEL0=0x3;
     *BSP_GPIO_P3_ALTSEL1=0x0;
     *BSP_GPIO_P3_OD=0x3;
-    
+
     /* set GPIO pins for NAND */
     /* P0.13 FL_A24 01:output*/
     /* P1.8 FL_A23 01:output*/
@@ -356,13 +393,13 @@ void nand_gpio_init(void)
     *BSP_GPIO_P1_ALTSEL0 |= 0x100;
     *BSP_GPIO_P1_ALTSEL1 &= (~0x100);
     *BSP_GPIO_P1_DIR |= (0x100);
-    
-    /*Set GPIO7 as general GPIO output instead of parking at CFRAME*/ 
+
+    /*Set GPIO7 as general GPIO output instead of parking at CFRAME*/
     *BSP_GPIO_P0_ALTSEL0 &=(~0x80);
     *BSP_GPIO_P0_ALTSEL1 &=(~0x80);
     *BSP_GPIO_P0_DIR |= (0x80);
     *BSP_GPIO_P0_DIR |= (0x80);
-    
+
 }
 #endif
 
@@ -391,7 +428,7 @@ int spi_gpio_init(unsigned int cs)
         *(BSP_GPIO_P1_ALTSEL1) = (*BSP_GPIO_P1_ALTSEL1)&(~0x47);
         *(BSP_GPIO_P1_OD) = (*BSP_GPIO_P1_OD)|0x0046;
 
-	 return 1;																					 
+	 return 1;
 }
 #endif
 
@@ -405,7 +442,7 @@ void save_ddr_param(void)
 	 volatile ulong* ptr=IFX_CFG_FLASH_DDR_CFG_START_ADDR;
 	 ulong  ecc;
 	 ulong  buffer[6];
-	 erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR; 
+	 erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR;
 	 erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
 	 if(*(u32*)0xBE22FF20!=0x2)  /*0xBE1A5F20 contains the tuning status*/
 	    {
@@ -416,14 +453,14 @@ void save_ddr_param(void)
      {
 		      printf("protect off error!\n");
 		 }
-									 
+
   if (flash_sect_erase (erase_addr1, erase_addr2-1))
      {
 		       printf("erase error!\n");
 		 }
 	 rcode = flash_sect_erase(erase_addr1, erase_addr2-1);
 
-    
+
    memcpy ((u8*)buffer,&ddr_magic,4);
 	 memcpy ((u8*)(buffer+1),(u8*)0xBF401270,4);
 	 memcpy ((u8*)(buffer+2),(u8*)0xBF401280,4);
@@ -435,22 +472,22 @@ void save_ddr_param(void)
 	 flash_write((char *)buffer, IFX_CFG_FLASH_DDR_CFG_START_ADDR, 24);/*one magic word,4 parameters,1cc,24bytes*/
 
 	 //(void) flash_sect_protect (1, erase_addr1, erase_addr2-1);
-										
+
      return;
 }
 #elif defined(CONFIG_BOOT_FROM_NAND)
-extern nand_info_t nand_info[]; 
+extern nand_info_t nand_info[];
 //extern int nand_write (struct mtd_info *mtd, loff_t to, size_t len, size_t * retlen, const u_char * buf);
 
 void save_ddr_param(void)
-{   
+{
 	   int rcode;
 	   ulong   ddr_magic=0x88888888;
 	   ulong erase_addr1=0, erase_addr2=0;
 	   volatile ulong* ptr=IFX_CFG_FLASH_DDR_CFG_START_ADDR;
 	   ulong  ecc;
 	   ulong  buffer[6];
-	   erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR; 
+	   erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR;
 	   erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
 	   nand_info_t *nand;
 	   nand_write_options_t opts;
@@ -467,8 +504,8 @@ void save_ddr_param(void)
 	   memcpy ((u8*)(buffer+3),(u8*)0xBF4012B0,4);
 	   memcpy ((u8*)(buffer+4),(u8*)0xBF4012C0,4);
 	   ecc=(*(u32*)0xBF401270)^(*(u32*)0xBF401280)^(*(u32*)0xBF4012B0)^(*(u32*)0xBF4012C0);
-	   memcpy ((u8*)(buffer+5),&ecc,4); 
-	   
+	   memcpy ((u8*)(buffer+5),&ecc,4);
+
 	   nand_write_partial(&nand_info[0], IFX_CFG_FLASH_DDR_CFG_START_ADDR, &srcLen, (u_char*)buffer);
 	   return;
 }
@@ -484,15 +521,15 @@ void save_ddr_param(void)
 	 static struct spi_flash *flash_spi;
 	 flash_spi = spi_flash_probe(CONFIG_ENV_SPI_BUS, CONFIG_ENV_SPI_CS,
             CONFIG_ENV_SPI_MAX_HZ, CONFIG_ENV_SPI_MODE);
-	
-	 erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR; 
+
+	 erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR;
 	 erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
 	 if(*(u32*)0xBE22FF20!=0x2)   /*0xBE1A5F20 contains the tuning status*/
 	    {
 		    /*no new parameter, return immediately*/
 		    return;
 	    }
-	 
+
 	 memcpy ((u8*)buffer,&ddr_magic,4);
 	 memcpy ((u8*)(buffer+1),(u8*)0xBF401270,4);
 	 memcpy ((u8*)(buffer+2),(u8*)0xBF401280,4);
@@ -500,12 +537,12 @@ void save_ddr_param(void)
 	 memcpy ((u8*)(buffer+4),(u8*)0xBF4012C0,4);
 	 ecc=(*(u32*)0xBF401270)^(*(u32*)0xBF401280)^(*(u32*)0xBF4012B0)^(*(u32*)0xBF4012C0);
 	 memcpy ((u8*)(buffer+5),&ecc,4);
- 
-	 spi_flash_write(flash_spi, erase_addr1, 24, (char *)buffer);   
-	 printf("saved ddr param in flash!\n");    
-	    
+
+	 spi_flash_write(flash_spi, erase_addr1, 24, (char *)buffer);
+	 printf("saved ddr param in flash!\n");
+
    return;
-	 return; 
+	 return;
 }
 #endif
 #endif
@@ -519,4 +556,4 @@ int board_eth_init(bd_t *bis)
 
 	return 0;
 }
-						 
+
diff --git a/common/cmd_misc.c b/common/cmd_misc.c
index 7e194a2..71ca91c 100755
--- a/common/cmd_misc.c
+++ b/common/cmd_misc.c
@@ -137,4 +137,118 @@ U_BOOT_CMD(
 	"                       <data> - 0x0000-0xFFFF\n"
 );
 
+
+int do_smi (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	u32	addr, data, tmp, retVal;
+	extern int smi_read(unsigned int mAddrs, unsigned int *rData);
+	extern int smi_write(unsigned int mAddrs, unsigned int rData);
+
+	if (argc < 2)
+		return -1;
+	
+	if(argc == 3 && strcmp(argv[1],"read") == 0)
+	{
+			tmp = simple_strtoul(argv[2], NULL, 16);
+			if(tmp > 0xffff)
+					goto do_smi_err;
+
+			if(0 != (retVal = smi_read(tmp, &data)))
+				printf("[%s:%d] smi read failed!!!\n", __func__,__LINE__);
+			
+			printf("data: 0x%04x\n", data);
+
+			return 0;
+	}
+	else if(argc == 4 && strcmp(argv[1],"write") == 0)
+	{
+			tmp = simple_strtoul(argv[2], NULL, 16);
+			if(tmp > 0xffff)
+				goto do_smi_err;
+
+			addr = (u16)tmp;
+
+			tmp = simple_strtoul(argv[3], NULL, 16);
+			if ( tmp > 0xffff )
+				goto do_smi_err;
+
+			data = (u16)tmp;
+
+			if(0 != (retVal = smi_write(addr, data)))
+				printf("[%s:%d] smi write failed!!!\n", __func__,__LINE__);
+
+			return 0;
+	}
+	else
+	{
+			goto do_smi_err;
+	}
+
+	return 0;
+
+do_smi_err:
+
+	cmd_usage(cmdtp);
+
+	return 1;
+}
+
+U_BOOT_CMD(
+	smi ,    4,    1,     do_smi,
+	"smi read and write",
+	"read  <addr>        - read SMI register, hexadecimal\n"
+	"smi write <addr> <data> - write SMI register, hexadecimal\n"
+	"                 <addr> - 0x0000-0xFFFF\n"
+	"                 <data> - 0x0000-0xFFFF\n"
+);
+
+int do_sw (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	u32		tmp;
+	extern int rtl_sw_reset( u32 delay );
+	extern int rtl_sw_init( void );
+	extern void rtl_msleep( u32 delay );
+
+	if(argc == 3 && strcmp(argv[1],"reset") == 0)
+	{
+			tmp = simple_strtoul(argv[2], NULL, 10)/* * (CFG_HZ / 1000)*/;
+			rtl_sw_reset( tmp );
+			return 0;
+	}
+	else if(argc == 2 && strcmp(argv[1],"init") == 0)
+	{
+			rtl_sw_init();
+	}
+	else if ( argc == 3 && strcmp(argv[1],"restart") == 0)
+	{
+			tmp = simple_strtoul(argv[2], NULL, 10)/* * (CFG_HZ / 1000)*/;
+			rtl_sw_reset( 100 );
+			rtl_msleep( tmp );
+			rtl_sw_init();
+
+			return 0;
+	}
+	else
+	{
+			goto do_sw_err;
+	}
+
+	return 0;
+
+do_sw_err:
+
+	printf ("Usage:\n%s\n", cmdtp->usage);
+
+	return 1;
+}
+
+U_BOOT_CMD(
+	sw ,    3,    1,     do_sw,
+	"switch operation",
+	"reset  <msec>  - reset switch (pull-high, pull-low, wait, pull-high)\n"
+	"sw init           - init switch registers\n"
+	"sw restart <msec> - restart switch (reset, wait, init)\n"
+	"           <msec> - waiting time in milli-seconds, decimal\n"
+);
+
 #endif /* CONFIG_DRIVER_VR9 */
diff --git a/common/cmd_upgrade.c b/common/cmd_upgrade.c
index 47816ce..e953111 100644
--- a/common/cmd_upgrade.c
+++ b/common/cmd_upgrade.c
@@ -62,11 +62,11 @@ char* get_string_value(char* str, char* delim, int n)
 
 /* compare the version with the built-in-version,
    return 1 if v_new is equal to or bigger than v_old
-   return 0 otherwise 
+   return 0 otherwise
 */
 int compare_version(char *v_old, char *v_new)
 {
-	
+
 	 int res=0;
    int i=0;
    char* p=NULL;
@@ -92,6 +92,96 @@ int compare_version(char *v_old, char *v_new)
 #endif
 
 #if !defined(BUILD_FROM_IFX_UTILITIES)
+static int up_result = 1;		// 1: failure 0: success
+
+// Arcadyan Begin
+void set_up_result(int result) {
+	up_result = result;
+}
+
+int get_up_result(void) {
+	return up_result;
+}
+
+#define HASH_LENGTH		(6144)
+
+int verify_firmware(void) {
+	unsigned int srcAddr;
+	int   srcLen;
+	ulong curParSize = 0;
+	ulong srcHeader  = 0;
+	int   kernel 	 = 0;
+	int   rootfs	 = 0;
+	int   arc_image  = 0;
+	int   pad;
+	char  magic[4]   = {0x27, 0x05, 0x19, 0x56};
+
+	image_header_t *pimg_header = NULL;
+
+	srcAddr = simple_strtoul((char *)getenv("loadaddr"),NULL,16);
+	srcLen  = simple_strtoul((char *)getenv("filesize"),NULL,16);
+
+	printf("verify firmware validation: loadaddr = 0x%x, filesize = %d\n", srcAddr, srcLen);
+
+	if (srcAddr == 0 || srcLen ==0) return 1;
+
+	// check image tail to see if there is a tag.
+	if (strncmp((char *)(srcAddr + srcLen - 8), "ARCADYAN", 8) == 0) {
+		if (strncmp((char *)(srcAddr + srcLen - 32), "arcadyan", 8) == 0) {
+			srcLen -= 32;
+			printf("Arcadyan image detected\n");
+			arc_image = 1;
+		}
+	}
+
+	do {
+		srcHeader 	= (!srcHeader ? srcAddr : srcHeader + curParSize);
+
+		if (memcmp(srcHeader, magic, 4) != 0) {
+			printf("0x%x magic number not found\n", srcHeader);
+			return 1;
+		}
+
+		pimg_header = (image_header_t *)srcHeader;
+		curParSize  = sizeof(image_header_t) + pimg_header->ih_size;
+		pad 		= (16 - (curParSize % 16)) % 16;
+
+		if (arc_image == 1) {
+			curParSize += HASH_LENGTH;
+		}
+
+		switch(pimg_header->ih_type) {
+			case IH_TYPE_MULTI:
+				curParSize = sizeof(image_header_t) + 8;
+				continue;
+			case IH_TYPE_FILESYSTEM:
+				rootfs++;
+				break;
+			case IH_TYPE_KERNEL:
+				kernel++;
+				break;
+			default:
+				printf("Unknown image type!! Only kernel and rootfs are allowed\n");
+				return 1;
+		}
+
+		curParSize = curParSize + pad;
+
+	} while(srcLen > (srcHeader - srcAddr) + curParSize);
+
+	if (kernel != 1 || rootfs != 1) {
+		printf("Wrong firmware, rootfs and kernel should be included together.\n");
+		return 1;
+	}
+
+	printf("firmware is ok !\n");
+
+	return 0;
+}
+
+
+// Arcadyan End
+
 int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
 	ulong srcAddr=0;
 	int srcLen;
@@ -99,20 +189,40 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
 	int curParSize=0, dir, pad;
 	image_header_t *pimg_header = NULL;
 	char name[16], strimg_crc[32], buf[32];;
-  if(argc != 3) {
+	int arc_image  = 0;	// Arcadyan
+
+	set_up_result(0);	// Arcadyan
+
+	if(argc != 3) {
 		printf("Usage :\n%s\n",cmdtp->usage);
+		set_up_result(1);	// Arcadyan
 		return 1;
 	}
 
 	srcAddr = simple_strtoul(argv[1], NULL, 16);
 	srcLen = simple_strtoul(argv[2], NULL, 16);
 
+	// Arcadyan Begin
+	// check image tail to see if there is a tag.
+	if (strncmp((srcAddr + srcLen - 8), "ARCADYAN", 8) == 0) {
+		if (strncmp((srcAddr + srcLen - 32), "arcadyan", 8) == 0) {
+			srcLen -= 32;
+			printf("Arcadyan image detected\n");
+			arc_image = 1;
+		}
+	}
+	// Arcadyan End
+
 	do {
 		srcHeader = (!srcHeader ? srcAddr : srcHeader + curParSize);
-		pimg_header = (image_header_t *)srcHeader;		
+		pimg_header = (image_header_t *)srcHeader;
 		curParSize = sizeof(image_header_t) + pimg_header->ih_size;
 		pad = (16 - (curParSize % 16)) % 16;
 
+		if (arc_image == 1) {		// Arcadyan
+			curParSize += HASH_LENGTH;
+		}
+
 		switch(pimg_header->ih_type) {
 			case IH_TYPE_MULTI:
 #ifdef CONFIG_IFX_IMAGE_EXTRA_CHECKS
@@ -125,9 +235,10 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong vendor name, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
         	}
-        /*check board name*/	
+        /*check board name*/
         if(strncmp(pimg_header->ih_board, CONFIG_BOARD_NAME, sizeof(pimg_header->ih_board)) == 0)
         	{
         		printf("board name correct...\n");
@@ -135,10 +246,11 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong board name, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
         	}
-        	
-        /*check board version*/	
+
+        /*check board version*/
         if(compare_version(CONFIG_BOARD_VERSION, pimg_header->ih_boardVer))
         	{
         		printf("board version correct...\n");
@@ -146,10 +258,11 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong board version, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
-        	}	
-        	
-        /*check chip name*/	
+        	}
+
+        /*check chip name*/
         if(strncmp(pimg_header->ih_chip, CONFIG_CHIP_NAME, sizeof(pimg_header->ih_chip)) == 0)
         	{
         		printf("chip name correct...\n");
@@ -157,10 +270,11 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong chip name, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
-        	}	
-        	
-        /*check chip version*/	
+        	}
+
+        /*check chip version*/
         if(compare_version(CONFIG_CHIP_VERSION, pimg_header->ih_chipVer))
         	{
         		printf("chip version correct...\n");
@@ -168,10 +282,11 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong chip version, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
-        	}	
-        	
-        /*check software version*/	
+        	}
+
+        /*check software version*/
         if(compare_version(CONFIG_SW_VERSION, pimg_header->ih_swVer))
         	{
         		printf("sw version correct...\n");
@@ -179,9 +294,10 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
         else
         	{
         		printf("wrong sw version, update rejected!\n");
+        		set_up_result(1);	// Arcadyan
         		return 0;
-        	}	
-#endif				
+        	}
+#endif
 				curParSize = sizeof(image_header_t) + 8;
 				continue;
 			case IH_TYPE_FILESYSTEM:
@@ -190,7 +306,8 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
 				break;
 			case IH_TYPE_KERNEL:
 				sprintf(name, "kernel");
-				dir = 1;
+				//dir = 1;	/// Arcadyan, write image from the top of this partition
+				dir = 0;
 				break;
 			case IH_TYPE_FIRMWARE:
 				sprintf(name, "firmware");
@@ -199,14 +316,16 @@ int do_upgrade( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]) {
 			case IH_TYPE_UBOOT:
 				sprintf(name, "uboot");
 				dir = 0;
-				break;	
+				break;
 			default:
 				printf("Unknown image type!!\n");
+				set_up_result(1);	// Arcadyan
 				continue;
 		}
 
 		if(upgrade_img(srcHeader, curParSize, name, dir, 0)) {
 			printf("Can not upgrade the image %s\n", name);
+			set_up_result(1);	// Arcadyan
 		} else {
 			sprintf(strimg_crc, "f_%s_crc", name);
 			sprintf(buf, "%lX", ntohl(pimg_header->ih_dcrc));
@@ -228,16 +347,16 @@ int http_upgrade(ulong srcAddr, int srcLen) {
 	int curParSize=0, dir, pad;
 	image_header_t *pimg_header = NULL;
 	char name[16], strimg_crc[32], buf[32];;
-	
+
 	printf("srcAddr=%08x\n",srcAddr);
 	printf("srcLen=%d\n",srcLen);
 	do {
 		srcHeader = (!srcHeader ? srcAddr : srcHeader + curParSize);
 		printf("srcHeader=0x%08x\n",srcHeader);
-		pimg_header = (image_header_t *)srcHeader;		
+		pimg_header = (image_header_t *)srcHeader;
 		curParSize = sizeof(image_header_t) + pimg_header->ih_size;
 		printf("curParSize=0x%x\n",curParSize);
-		
+
 		pad = (16 - (curParSize % 16)) % 16;
         printf("pad=0x%x\n",pad);
 		switch(pimg_header->ih_type) {
@@ -308,7 +427,7 @@ int do_upgrade( int file_fd , int srcLen) {
 
 #ifndef CONFIG_FEATURE_LQ_NEW_UPGRADE
 		//first read only the header to figure our the image total size
-		iRet = read(file_fd, (void *)&xImgHeader , (size_t)sizeof(image_header_t)); 
+		iRet = read(file_fd, (void *)&xImgHeader , (size_t)sizeof(image_header_t));
 		if(iRet < sizeof(image_header_t)){
 			printf("Failure : could read %d out of %d bytes from image\n", iRet, sizeof(image_header_t));
 			return 1; //failure
@@ -341,7 +460,7 @@ int do_upgrade( int file_fd , int srcLen) {
 		// reposition the file read offset to the start of image
 		if( lseek(file_fd, iTotalFileReadSize, SEEK_SET) == -1){
 			printf("Can not move the offset for image to upgrade\n");
-		        return 1;  //failure	
+		        return 1;  //failure
 		}
 #else
 		xHeader = p + iTotalFileReadSize;
@@ -351,14 +470,14 @@ int do_upgrade( int file_fd , int srcLen) {
 		// then read the total size into a buffer to be passed to upgrade_img
 		iFileReadSize = curParSize + pad;
 #ifndef CONFIG_FEATURE_LQ_NEW_UPGRADE
-	        xHeader = (char *)malloc(iFileReadSize);			
+	        xHeader = (char *)malloc(iFileReadSize);
 
 		iRet = read(file_fd, xHeader , (size_t)iFileReadSize);
        		if(iRet < iFileReadSize){
 			printf("Failure : could read %d out of %d bytes from image\n", iRet, iFileReadSize);
 			return 1; //failure
 		}
-#endif        
+#endif
 
 		switch(xImgHeader.ih_type) {
 			case IH_TYPE_MULTI:
@@ -400,7 +519,7 @@ int do_upgrade( int file_fd , int srcLen) {
 			xHeader = NULL;
 		}
 #else
-		xHeader += iFileReadSize; 
+		xHeader += iFileReadSize;
 #endif
 
 	} while(srcLen > iTotalFileReadSize );
@@ -415,7 +534,7 @@ int do_upgrade( int file_fd , int srcLen) {
 
 
 #if !defined(BUILD_FROM_IFX_UTILITIES)
-U_BOOT_CMD(                                       
+U_BOOT_CMD(
 	upgrade,	3,	1,	do_upgrade,
 	"upgrade - forward/backward copy memory to pre-defined flash location\n",
 	"upgrade <source addr> <size> \n	- upgrade image to pre-define partition.\n"
diff --git a/common/main.c b/common/main.c
index d20b25d..405c7fa 100755
--- a/common/main.c
+++ b/common/main.c
@@ -44,11 +44,33 @@
 DECLARE_GLOBAL_DATA_PTR;
 #endif
 
+#if 1 // ctc
+ #include <lzma/LzmaTypes.h>
+ #include <lzma/LzmaDec.h>
+ #include <lzma/LzmaTools.h>
+#endif
+
+// Arcadyan Begin
+#ifdef CONFIG_DRIVER_VR9
+#include <asm/vr9.h>
+#endif
+
+static int pass_mode = 0;
+
+//#define LCD_IMAGE_RESCUE_OFFSET              81              // white background
+#define LCD_IMAGE_RESCUE_OFFSET                86                      // red background
+#define LCD_IMAGE_BOOT_FAILURE         (LCD_IMAGE_RESCUE_OFFSET + 0)
+#define LCD_IMAGE_RESCUE                       (LCD_IMAGE_RESCUE_OFFSET + 4)
+#define LCD_IMAGE_RESCUE_UPGRADE       (LCD_IMAGE_RESCUE_OFFSET + 2)
+#define LCD_IMAGE_RESCUE_DONE          (LCD_IMAGE_RESCUE_OFFSET + 3)
+#define LCD_IMAGE_RESCUE_ERR           (LCD_IMAGE_RESCUE_OFFSET + 1)
+
+#define BOOT_RETRY_MAX 6
+// Arcadyan End
 /*
  * Board-specific Platform code can reimplement show_boot_progress () if needed
  */
-void inline __show_boot_progress (int val) {}
-void show_boot_progress (int val) __attribute__((weak, alias("__show_boot_progress")));
+void __attribute__((weak)) show_boot_progress(int val) {}
 
 #if defined(CONFIG_BOOT_RETRY_TIME) && defined(CONFIG_RESET_TO_RETRY)
 extern int do_reset (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);		/* for do_reset() prototype */
@@ -90,7 +112,9 @@ int do_mdm_init = 0;
 extern void mdm_init(void); /* defined in board.c */
 #endif
 
-#ifdef CONFIG_DRIVER_VR9 /* ctc, power down PHY */
+#ifdef CONFIG_DRIVER_VR9 /* ctc, RTL8367RB and power down PHY */
+//u32 rtl_reset_elapsed_msec;
+ u32 rtl_min_wait = 4400;
  extern u16  vr9_mdio_read( u8 phyaddr, u8 phyreg );
  extern void vr9_mdio_write( u8 phyaddr, u8 phyreg, u16 data );
 #endif
@@ -219,6 +243,9 @@ static int menukey = 0;
 static __inline__ int abortboot(int bootdelay)
 {
 	int abort = 0;
+  #if defined(CONFIG_DRIVER_VR9) /* ctc for RTL8367RB */
+	u32 rtl_elapsed_sec = 0;
+  #endif
 
 #ifdef CONFIG_MENUPROMPT
 	printf(CONFIG_MENUPROMPT);
@@ -254,11 +281,20 @@ static __inline__ int abortboot(int bootdelay)
 # else
 				(void) getc();  /* consume input	*/
 # endif
+
+			  #if 0 //defined(CONFIG_DRIVER_VR9) /* ctc for RTL8367RB */
+				rtl_reset_elapsed_msec = rtl_elapsed_sec * 1000 + i * 10;
+			  #endif
+				
 				break;
 			}
 			udelay(10000);
 		}
 
+	  #if defined(CONFIG_DRIVER_VR9) /* ctc for RTL8367RB */
+		rtl_elapsed_sec++;
+	  #endif
+
 		printf("\b\b\b%2d ", bootdelay);
 	}
 
@@ -269,53 +305,81 @@ static __inline__ int abortboot(int bootdelay)
 		gd->flags &= ~GD_FLG_SILENT;
 #endif
 
+  #if 0 //defined(CONFIG_DRIVER_VR9) /* ctc for RTL8367RB */
+	if (!abort)
+		rtl_reset_elapsed_msec = rtl_elapsed_sec * 1000;
+  #endif
+
 	return abort;
 }
 # endif	/* CONFIG_AUTOBOOT_KEYED */
 #endif	/* CONFIG_BOOTDELAY >= 0  */
 
+//#define UDEBUG	//Trace Uboot Debug Message
+#ifdef CONFIG_DRIVER_VR9
+extern int rtl_sw_reset(u32 delay_msec);
+extern int smi_read(unsigned int mAddrs, unsigned int *rData);
+extern int rtl8367b_setAsicPHYReg(unsigned int phyNo, unsigned int phyAddr, unsigned int value);
+extern int rtl_sw_init(void);
+#endif
 /****************************************************************************/
 
 void main_loop (void)
 {
-#ifndef CONFIG_SYS_HUSH_PARSER
+	int bootid, bootnum;
+	char *s1;
+	char buf[16];
+	
+	#ifndef CONFIG_SYS_HUSH_PARSER
 	static char lastcommand[CONFIG_SYS_CBSIZE] = { 0, };
 	int len;
 	int rc = 1;
 	int flag;
-#endif
+	#endif
 
-#if defined(CONFIG_BOOTDELAY) && (CONFIG_BOOTDELAY >= 0)
+	#if defined(CONFIG_BOOTDELAY) && (CONFIG_BOOTDELAY >= 0)
 	char *s;
 	int bootdelay;
-#endif
-#ifdef CONFIG_PREBOOT
+	#endif
+
+	#ifdef CONFIG_PREBOOT
 	char *p;
-#endif
-#ifdef CONFIG_BOOTCOUNT_LIMIT
+	#endif
+
+	#ifdef CONFIG_BOOTCOUNT_LIMIT
 	unsigned long bootcount = 0;
 	unsigned long bootlimit = 0;
 	char *bcs;
 	char bcs_set[16];
-#endif /* CONFIG_BOOTCOUNT_LIMIT */
-  #if 1 /* ctc, save bootloader version */
-	char* version;
+	#endif /* CONFIG_BOOTCOUNT_LIMIT */
+
+	#if 1 /* ctc, save bootloader version */
+	char* val;
 	extern const char version_string[];
 	extern int do_sleep_msec( u32 delay );
   #endif
 
-#if defined(CONFIG_VFD) && defined(VFD_TEST_LOGO)
+	#ifdef CONFIG_DRIVER_VR9
+	unsigned int data, retVal, phyNo, timespent=0;
+	#endif
+	
+	#if defined(CONFIG_VFD) && defined(VFD_TEST_LOGO)
 	ulong bmp = 0;		/* default bitmap */
 	extern int trab_vfd (ulong bitmap);
 
-#ifdef CONFIG_MODEM_SUPPORT
+	#ifdef CONFIG_MODEM_SUPPORT
 	if (do_mdm_init)
 		bmp = 1;	/* alternate bitmap */
-#endif
+	#endif
 	trab_vfd (bmp);
-#endif	/* CONFIG_VFD && VFD_TEST_LOGO */
+	#endif	/* CONFIG_VFD && VFD_TEST_LOGO */
 
-#ifdef CONFIG_BOOTCOUNT_LIMIT
+#if 0 //defined(UDEBUG)
+	printf("[%s:%d]\n", __func__, __LINE__);
+#endif
+
+
+	#ifdef CONFIG_BOOTCOUNT_LIMIT
 	bootcount = bootcount_load();
 	bootcount++;
 	bootcount_store (bootcount);
@@ -323,9 +387,9 @@ void main_loop (void)
 	setenv ("bootcount", bcs_set);
 	bcs = getenv ("bootlimit");
 	bootlimit = bcs ? simple_strtoul (bcs, NULL, 10) : 0;
-#endif /* CONFIG_BOOTCOUNT_LIMIT */
+	#endif /* CONFIG_BOOTCOUNT_LIMIT */
 
-#ifdef CONFIG_MODEM_SUPPORT
+	#ifdef CONFIG_MODEM_SUPPORT
 	debug ("DEBUG: main_loop:   do_mdm_init=%d\n", do_mdm_init);
 	if (do_mdm_init) {
 		char *str = strdup(getenv("mdm_cmd"));
@@ -334,29 +398,29 @@ void main_loop (void)
 			free (str);
 		mdm_init(); /* wait for modem connection */
 	}
-#endif  /* CONFIG_MODEM_SUPPORT */
+	#endif  /* CONFIG_MODEM_SUPPORT */
 
-#ifdef CONFIG_VERSION_VARIABLE
+	#ifdef CONFIG_VERSION_VARIABLE
 	{
 		extern char version_string[];
 
 		setenv ("ver", version_string);  /* set version variable */
 	}
-#endif /* CONFIG_VERSION_VARIABLE */
+	#endif /* CONFIG_VERSION_VARIABLE */
 
-#ifdef CONFIG_SYS_HUSH_PARSER
+	#ifdef CONFIG_SYS_HUSH_PARSER
 	u_boot_hush_start ();
-#endif
+	#endif
 
-#if defined(CONFIG_HUSH_INIT_VAR)
+	#if defined(CONFIG_HUSH_INIT_VAR)
 	hush_init_var ();
-#endif
+	#endif
 
-#ifdef CONFIG_AUTO_COMPLETE
+	#ifdef CONFIG_AUTO_COMPLETE
 	install_auto_complete();
-#endif
+	#endif
 
-#ifdef CONFIG_PREBOOT
+	#ifdef CONFIG_PREBOOT
 	if ((p = getenv ("preboot")) != NULL) {
 # ifdef CONFIG_AUTOBOOT_KEYED
 		int prev = disable_ctrlc(1);	/* disable Control C checking */
@@ -373,58 +437,264 @@ void main_loop (void)
 		disable_ctrlc(prev);	/* restore Control C checking */
 # endif
 	}
-#endif /* CONFIG_PREBOOT */
+	#endif /* CONFIG_PREBOOT */
 
-#if defined(CONFIG_UPDATE_TFTP)
+	#if defined(CONFIG_UPDATE_TFTP)
 	update_tftp ();
-#endif /* CONFIG_UPDATE_TFTP */
+	#endif /* CONFIG_UPDATE_TFTP */
 
-#if defined(CONFIG_BOOTDELAY) && (CONFIG_BOOTDELAY >= 0)
+	#if defined(CONFIG_BOOTDELAY) && (CONFIG_BOOTDELAY >= 0)
 	s = getenv ("bootdelay");
 	bootdelay = s ? (int)simple_strtol(s, NULL, 10) : CONFIG_BOOTDELAY;
 
+#if defined(UDEBUG)
+	printf("[%s:%d]### main_loop entered: bootdelay=%d\n\n",__func__,__LINE__,bootdelay);
+#endif
 	debug ("### main_loop entered: bootdelay=%d\n\n", bootdelay);
 
 # ifdef CONFIG_BOOT_RETRY_TIME
 	init_cmd_timeout ();
 # endif	/* CONFIG_BOOT_RETRY_TIME */
 
-#ifdef CONFIG_POST
+	#ifdef CONFIG_POST
 	if (gd->flags & GD_FLG_POSTFAIL) {
 		s = getenv("failbootcmd");
 	}
 	else
-#endif /* CONFIG_POST */
-#ifdef CONFIG_BOOTCOUNT_LIMIT
+	#endif /* CONFIG_POST */
+	#ifdef CONFIG_BOOTCOUNT_LIMIT
 	if (bootlimit && (bootcount > bootlimit)) {
 		printf ("Warning: Bootlimit (%u) exceeded. Using altbootcmd.\n",
 		        (unsigned)bootlimit);
 		s = getenv ("altbootcmd");
 	}
 	else
-#endif /* CONFIG_BOOTCOUNT_LIMIT */
+	#endif /* CONFIG_BOOTCOUNT_LIMIT */
 		s = getenv ("bootcmd");
 
+#if defined(UDEBUG)
+	printf("[%s:%d]### main_loop: bootcmd=\"%s\"\n",__func__,__LINE__,s ? s : "<UNDEFINED>");
+#endif
 	debug ("### main_loop: bootcmd=\"%s\"\n", s ? s : "<UNDEFINED>");
 
   #ifdef CONFIG_DRIVER_VR9 /* ctc, power down PHY */
+	#if 0 //defined(UDEBUG)
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	#endif
 	vr9_mdio_write( 0x00, 0x0, vr9_mdio_read( 0x00, 0x0 ) | 0x0800 );
 	vr9_mdio_write( 0x01, 0x0, vr9_mdio_read( 0x01, 0x0 ) | 0x0800 );
 	vr9_mdio_write( 0x11, 0x0, vr9_mdio_read( 0x11, 0x0 ) | 0x0800 );
 	vr9_mdio_write( 0x12, 0x0, vr9_mdio_read( 0x12, 0x0 ) | 0x0800 );
 	vr9_mdio_write( 0x13, 0x0, vr9_mdio_read( 0x13, 0x0 ) | 0x0800 );
 	vr9_mdio_write( 0x14, 0x0, vr9_mdio_read( 0x14, 0x0 ) | 0x0800 );
+	#if 0 //defined(UDEBUG)
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	#endif
+	//printf("rtl8367rb reset waiting 1.5 sec ....\n");	
+	rtl_sw_reset(100);
+	for(phyNo=0;phyNo<4;phyNo++)
+	{
+			if(0 != (retVal = smi_read(0x2000+(phyNo<<5),&data)))
+			{
+					printf("[%s:%d] read PCS reg[0x%x] failed!!!, errno=%x\n",__func__,__LINE__,0x2000+(phyNo<<5),retVal);
+			}
+			else
+			{
+					if(0 != (retVal = rtl8367b_setAsicPHYReg(phyNo,0x2000+(phyNo<<5),(data|0x0800))))
+					{
+							printf("[%s:%d] set PCS reg[0x%x] failed!!!, errno=%x\n",__func__,__LINE__,0x2000+(phyNo<<5),retVal);
+					}
+			}
+	}
+
+	do_sleep_msec(1000);
+	/* Check reset successful */
+	do{
+			if(0 != (retVal = smi_read(0x1202,&data)))
+			{
+					printf("[%s:%d] read reg[0x%x]=0x%x, Warrning : rtl8367rb reset failed!!!\n",__func__,__LINE__,0x1202,data);
+					break;
+			}
+
+			do_sleep_msec(100);
+			timespent+=100;
+			if(timespent == 500)
+			{
+					printf("Warrning : rtl8367rb reset failed!!!\n");
+			}
+			
+	}while(0x88A8 != data);
+ 	//printf("rtl8367rb bootcode 2012.10.03 .....\n");
   #endif
 
   #if 1 /* ctc, save bootloader version */
-	version = getenv ("bl_version");
-	if ( version == NULL || strcmp(version,version_string) != 0 ) {
+	val = getenv ("bl_version");
+	if ( val == NULL || strcmp(val,version_string) != 0 ) {
 		setenv ("bl_version", (char*)version_string);
 		saveenv();
 	}
   #endif
 
-	if (bootdelay >= 0 && s && !abortboot (bootdelay)) {
+  #if 1 /* ctc, save key pad default calibration value */
+	val = getenv ("key1_cal");
+	if ( val == NULL ) {
+		setenv( "key1_cal", "10" );
+		setenv( "key2_cal", "10" );
+		setenv( "key3_cal", "10" );
+		setenv( "key4_cal", "10" );
+		setenv( "key5_cal", "10" );
+		saveenv();
+	}
+  #endif
+
+	// Arcadyan Begin, check reset button
+#if defined(UDEBUG)
+	printf( "GPIO 40 (Reset) = %d\n", (*BSP_GPIO_P2_IN & 0x100) >> 8 );   // Reset button
+	//printf( "GPIO 41 ( WPS ) = %d\n", (*BSP_GPIO_P2_IN & 0x200) >> 9 );   // WPS button
+#endif
+
+	int count = 0;
+	while ((*BSP_GPIO_P2_IN & 0x100) == 0) {        // GPIO 40, 0 active
+		count++;
+		printf("reset button pressed --> %d\n", count);
+		udelay(1000000);
+	}
+	
+	if (count > 0) {
+		int ret;
+
+		printf("enter rescue process ...\n");
+
+		// power on phys
+		vr9_mdio_write( 0x00, 0x0, vr9_mdio_read( 0x00, 0x0 ) & ~0x0800 );
+		vr9_mdio_write( 0x01, 0x0, vr9_mdio_read( 0x01, 0x0 ) & ~0x0800 );
+		vr9_mdio_write( 0x11, 0x0, vr9_mdio_read( 0x11, 0x0 ) & ~0x0800 );
+		vr9_mdio_write( 0x12, 0x0, vr9_mdio_read( 0x12, 0x0 ) & ~0x0800 );
+		vr9_mdio_write( 0x13, 0x0, vr9_mdio_read( 0x13, 0x0 ) & ~0x0800 );
+		vr9_mdio_write( 0x14, 0x0, vr9_mdio_read( 0x14, 0x0 ) & ~0x0800 );
+		#if 0 //defined(UDEBUG)
+		printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+		printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+		printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+		printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+		printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+		printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+		#endif
+
+	  #ifdef CONFIG_DRIVER_VR9 
+		if(0 != rtl_sw_init())
+		{
+				printf("[%s:%d] rtl8367rb init failed!!! ....\n",__func__,__LINE__);	
+		}
+		
+		for(phyNo=0;phyNo<4;phyNo++)
+		{
+				if(0 != (retVal = smi_read(0x2000+(phyNo<<5),&data)))
+				{
+						printf("[%s:%d] read PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+				}
+				else
+				{
+						if(0 != (retVal = rtl8367b_setAsicPHYReg(phyNo,0x2000+(phyNo<<5),(data & (~0x0800)))))
+						{
+								printf("[%s:%d] set PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+						}
+				}
+		}
+		#endif
+
+		lcd_DisplayPage(LCD_IMAGE_RESCUE);
+
+		udelay(5000000);                                                        // wait 5 seconds
+
+		run_command ("tftpboot $(loadaddr) $(tftppath)$(fullimage)", 0);                // tftp full image
+
+		if (verify_firmware() != 0) {
+up_error:
+			// display error message
+			lcd_DisplayPage(LCD_IMAGE_RESCUE_ERR);
+
+			while(1);
+		}
+
+		lcd_DisplayPage(LCD_IMAGE_RESCUE_UPGRADE);
+
+		//udelay(5000000);                                                      // wait 5 seconds
+
+		run_command ("nand erase $(f_sysconfig_addr) $(f_sysconfig_size)", 0);  // erase sysconfig
+		run_command ("nand erase $(f_rootfs2_addr) $(f_rootfs2_size)", 0);              // erase rootfs 2
+		run_command ("nand erase $(f_kernel2_addr) $(f_kernel2_size)", 0);              // erase kernel 2
+		run_command ("unset bootnum", 0);										// reset "bootnum"
+		run_command ("unset bootid; save", 0);                                                                  // reset "bootid" environment variable
+		run_command ("upgrade $(loadaddr) $(filesize)", 0);                                             // upgrade fullimage
+
+		//printf("get_up_result = %d\n", get_up_result());
+
+		if (get_up_result() != 0) {
+			goto up_error;
+		}
+
+		lcd_DisplayPage(LCD_IMAGE_RESCUE_DONE);
+
+		while(1);               // wait here for rebooting
+	}
+	// Arcadyan End
+
+	if (bootdelay >= 0 && s && !abortboot (bootdelay)) 
+	{
+	  #ifdef CONFIG_DRIVER_VR9 /* ctc, power up PHY */
+		int lcd_boot_Init(void);
+		if ( lcd_boot_Init() != 0 )
+			goto ctrlc_lcd_Init;
+	  #endif
+
+		// Arcadyan Begin
+		s1      = getenv ("bootnum");
+		bootnum = s1 ? (int)simple_strtol(s1, NULL, 10) : 0;
+		s1      = getenv ("bootid");
+		bootid  = s1 ? (int)simple_strtol(s1, NULL, 10) : 0;
+
+		printf("1. bootid : %d, bootnum : %d\n", bootid, bootnum);
+
+		if (bootnum >= 2 * BOOT_RETRY_MAX) {
+			goto boot_fail;
+		}
+
+		// switch another partition
+		if (bootnum == BOOT_RETRY_MAX) {
+
+			if (bootid == 2) {
+				bootid = 0;
+				run_command ("unset bootid", 0);
+			}
+			else {
+				bootid = 2;
+				run_command ("setenv bootid 2", 0);
+			}
+
+			s = getenv ("bootcmd");
+		}
+
+		bootnum++;
+		sprintf(buf, "%d", bootnum);
+		setenv("bootnum", buf);
+// Qualle: Disable bootnum failure behavior for now to save the flash
+//		saveenv();
+		printf("2. bootid : %d, bootnum : %d\n", bootid, bootnum);
+
+		// Arcadyan End
+
+
 # ifdef CONFIG_AUTOBOOT_KEYED
 		int prev = disable_ctrlc(1);	/* disable Control C checking */
 # endif
@@ -439,18 +709,171 @@ void main_loop (void)
 # ifdef CONFIG_AUTOBOOT_KEYED
 		disable_ctrlc(prev);	/* restore Control C checking */
 # endif
+
+  #ifdef CONFIG_DRIVER_VR9 /* ctc, power up PHY */
+	#if 1 //defined(UDEBUG)
+	printf("-------------- Current state before activating switch ------\n");
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	printf("------------------------------------------------------------\n");
+	#endif
+	do_sleep_msec( 100/*1000*/ );
+	vr9_mdio_write( 0x00, 0x0, vr9_mdio_read( 0x00, 0x0 ) & ~0x0800 );
+	vr9_mdio_write( 0x01, 0x0, vr9_mdio_read( 0x01, 0x0 ) & ~0x0800 );
+	vr9_mdio_write( 0x11, 0x0, vr9_mdio_read( 0x11, 0x0 ) & ~0x0800 );
+	vr9_mdio_write( 0x12, 0x0, vr9_mdio_read( 0x12, 0x0 ) & ~0x0800 );
+	vr9_mdio_write( 0x13, 0x0, vr9_mdio_read( 0x13, 0x0 ) & ~0x0800 );
+	vr9_mdio_write( 0x14, 0x0, vr9_mdio_read( 0x14, 0x0 ) & ~0x0800 );
+	#if 1 //defined(UDEBUG)
+	printf("-------------- Current state after activating switch -------\n");
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	printf("------------------------------------------------------------\n");
+	#endif
+	
+	if(0 != rtl_sw_init())
+	{
+			printf("[%s:%d] rtl8367rb init failed!!! ....\n",__func__,__LINE__);	
+	}
+	
+	for(phyNo=0;phyNo<4;phyNo++)
+	{
+			if(0 != (retVal = smi_read(0x2000+(phyNo<<5),&data)))
+			{
+					printf("[%s:%d] read PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+			}
+			else
+			{
+					if(0 != (retVal = rtl8367b_setAsicPHYReg(phyNo,0x2000+(phyNo<<5),(data & (~0x0800)))))
+					{
+							printf("[%s:%d] set PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+					}
+			}
+	}
+	
+	printf("rtl8367rb init successful ....\n");	
+  #endif
+		// Arcadyan Begin
+		// if you come to here, the kernel in current partition is wrong.
+		if (bootnum < BOOT_RETRY_MAX) {
+			bootnum = BOOT_RETRY_MAX;
+
+			if (bootid == 2) {
+				bootid = 0;
+				run_command ("unset bootid", 0);
+			}
+			else {
+				bootid = 2;
+				run_command ("setenv bootid 2", 0);
+			}
+
+			bootnum++;
+			sprintf(buf, "%d", bootnum);
+			setenv("bootnum", buf);
+
+			saveenv();
+
+			printf("3. bootid : %d, bootnum : %d\n", bootid, bootnum);
+
+			s = getenv ("bootcmd");
+			run_command (s, 0);
+		}
+
+		bootnum = 2 * BOOT_RETRY_MAX;
+		sprintf(buf, "%d", bootnum);
+		setenv("bootnum", buf);
+// Qualle: Disable bootnum failure behavior for now to save the flash
+//		saveenv();
+
+
+
+boot_fail:
+		// booting failed, notice user to enter rescue process
+		lcd_DisplayPage(LCD_IMAGE_BOOT_FAILURE);
+		// Arcadyan End
 	}
 
+ctrlc_lcd_Init:
+	// Arcadyan Begin , check password
+	pass_mode = 1;
+	len = readline("\n\nplease input password : ");
+	if (verify_password(console_buffer) != 0) {
+		int i = 5;
+		printf("\n\nwrong password, rebooting ...  ");
+		
+		while (i >= 0) {
+			printf("\b%d", i--);
+			udelay(1000000);
+		}
+		
+		run_command("reset", 0);
+		
+		while(1);
+	}
+	pass_mode = 0;
+  // Arcadyan End
+
   #ifdef CONFIG_DRIVER_VR9 /* ctc, power up PHY */
-	do_sleep_msec( 1000 );
+	#if 1 //defined(UDEBUG)
+	printf("-------------- Current state before activating switch ------\n");
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	printf("------------------------------------------------------------\n");
+	#endif
+	do_sleep_msec( 100/*1000*/ );
 	vr9_mdio_write( 0x00, 0x0, vr9_mdio_read( 0x00, 0x0 ) & ~0x0800 );
 	vr9_mdio_write( 0x01, 0x0, vr9_mdio_read( 0x01, 0x0 ) & ~0x0800 );
 	vr9_mdio_write( 0x11, 0x0, vr9_mdio_read( 0x11, 0x0 ) & ~0x0800 );
 	vr9_mdio_write( 0x12, 0x0, vr9_mdio_read( 0x12, 0x0 ) & ~0x0800 );
 	vr9_mdio_write( 0x13, 0x0, vr9_mdio_read( 0x13, 0x0 ) & ~0x0800 );
 	vr9_mdio_write( 0x14, 0x0, vr9_mdio_read( 0x14, 0x0 ) & ~0x0800 );
+	#if 1 //defined(UDEBUG)
+	printf("-------------- Current state after activating switch -------\n");
+	printf("[%s:%d]vr9_mdio_read( 0x00, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x00, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x01, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x01, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x11, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x11, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x12, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x12, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x13, 0x0 )=0x%x\n",__func__,__LINE__,vr9_mdio_read( 0x13, 0x0 ));
+	printf("[%s:%d]vr9_mdio_read( 0x14, 0x0 )=0x%x\n\n",__func__,__LINE__,vr9_mdio_read( 0x14, 0x0 ));
+	printf("------------------------------------------------------------\n");
+	#endif
+	
+	if(0 != rtl_sw_init())
+	{
+			printf("[%s:%d] rtl8367rb init failed!!! ....\n",__func__,__LINE__);	
+	}
+	
+	for(phyNo=0;phyNo<4;phyNo++)
+	{
+			if(0 != (retVal = smi_read(0x2000+(phyNo<<5),&data)))
+			{
+					printf("[%s:%d] read PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+			}
+			else
+			{
+					if(0 != (retVal = rtl8367b_setAsicPHYReg(phyNo,0x2000+(phyNo<<5),(data & (~0x0800)))))
+					{
+							printf("[%s:%d] set PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+					}
+			}
+	}
+	
+	printf("rtl8367rb init successful ....\n");	
   #endif
 
+
 # ifdef CONFIG_MENUKEY
 	if (menukey == CONFIG_MENUKEY) {
 	    s = getenv("menucmd");
@@ -1105,7 +1528,12 @@ int readline_into_buffer (const char *const prompt, char * buffer)
 					col += 8 - (col&07);
 				} else {
 					++col;		/* echo input		*/
-					putc (c);
+					if (pass_mode == 0) {		// Arcadyan
+						putc (c);	
+					}
+					else {
+						putc ('*');
+					}
 				}
 				*p++ = c;
 				++n;
@@ -1486,3 +1914,1556 @@ int do_run (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
 	return 0;
 }
 #endif
+
+
+
+#ifdef CONFIG_DRIVER_VR9 // ctc, LCD
+
+/*******************************************************/
+
+//#include <asm/vr9.h>
+
+#define	LCD_GPIO_RST		6 // 19
+#define	LCD_GPIO_BL			28
+#define	LCD_GPIO_LED		31
+
+#define	LCD_CMD_MMAP_ADDR	0xB6000002
+#define	LCD_DAT_MMAP_ADDR	0xB6000000
+#define	LCD_CMD_MASK		0x0
+#define	LCD_DAT_MASK		0x0
+#define	LCD_VAL_SHIFT		8
+#define	LCD_SET_CMD( val )	\
+			do { \
+				lcd_DelayNs( 20 ); \
+				*(unsigned short*)LCD_CMD_MMAP_ADDR = ( 0x0 | LCD_CMD_MASK ); \
+				lcd_DelayNs( 20 ); \
+				*(unsigned short*)LCD_CMD_MMAP_ADDR = ( ( (unsigned short)(val) << LCD_VAL_SHIFT ) | LCD_CMD_MASK ); \
+			} while ( 0 )
+#define	LCD_SET_DAT( val )	\
+			do { \
+				lcd_DelayNs( 20 ); \
+				*(unsigned short*)LCD_DAT_MMAP_ADDR = ( ( ((unsigned short)(val) >> 8) << LCD_VAL_SHIFT ) | LCD_DAT_MASK ); \
+				lcd_DelayNs( 20 ); \
+				*(unsigned short*)LCD_DAT_MMAP_ADDR = ( ( ((unsigned short)(val)&0xff) << LCD_VAL_SHIFT ) | LCD_DAT_MASK ); \
+			} while ( 0 )
+#define	LCD_GET_DAT( val )	\
+			do { \
+				unsigned short	__tmp__h, __tmp__l; \
+				lcd_DelayNs( 20 ); \
+				__tmp__h = *(unsigned short*)LCD_DAT_MMAP_ADDR; \
+				lcd_DelayNs( 20 ); \
+				__tmp__l = *(unsigned short*)LCD_DAT_MMAP_ADDR; \
+				(val) = ( ( ( __tmp__h >> LCD_VAL_SHIFT ) & 0xff ) << 8 ) | ( ( __tmp__l >> LCD_VAL_SHIFT ) & 0xff ); \
+			} while ( 0 )
+
+#define	LCD_COL				240
+#define	LCD_ROW				320
+
+#define	LCD_PIXEL_NUM		(LCD_COL*LCD_ROW)
+#define	LCD_GRAM_SIZE		(sizeof(color_t)*LCD_PIXEL_NUM)
+
+#define	LCD_BL_MIN			0			// dark
+#define	LCD_BL_MAX			16			// full
+#define	LCD_BL_DFT			LCD_BL_MAX
+
+#define	LCD_CONTRAST_MIN	0
+#define	LCD_CONTRAST_MAX	31
+#define	LCD_CONTRAST_DFT	12
+
+#define	LCD_LED_MIN			0			// dark
+#define	LCD_LED_MAX			16			// full
+#define	LCD_LED_DFT			LCD_LED_MAX
+
+#define	LCD_ORIENTATION_PORTRAIT	0
+#define	LCD_ORIENTATION_LANDSCAPE	1
+#define	LCD_ORIENTATION_DEFAULT		LCD_ORIENTATION_LANDSCAPE
+
+#define	RGB16( r, g, b )		( ( ((color_t)(r) & 0x1F) << 11 ) | ( ((color_t)(g) & 0x3F) << 5 ) | ((color_t)(b) & 0x1F) )
+#define	COLOR16_R( color16 )	( ((color16)>>11) & 0x1F )
+#define	COLOR16_G( color16 )	( ((color16)>> 5) & 0x3F )
+#define	COLOR16_B( color16 )	( ((color16)>> 0) & 0x1F )
+#define	RGB16_TO_BGR16(color16)	RGB16( COLOR16_B( color16 ), COLOR16_G( color16 ), COLOR16_R( color16 ) )
+
+#define	RGB24( r, g, b )		( ( ((unsigned long)(r) & 0xFF) << 16 ) | ( ((unsigned long)(g) & 0xFF) << 8 ) | ((unsigned long)(b) & 0xFF) )
+#define	COLOR24_R( color24 )	( ((color24)>>24) & 0xFF )
+#define	COLOR24_G( color24 )	( ((color24)>>16) & 0xFF )
+#define	COLOR24_B( color24 )	( ((color24)>> 8) & 0xFF )
+
+#define	RGB24_TO_16( r, g, b ) ( ( (((unsigned long)(r)>>3) & 0x1F) << 11 ) | ( (((unsigned long)(g)>>2) & 0x3F) << 5 ) | (((unsigned long)(b)>>3) & 0x1F) )
+
+#define	COLOR16_BLACK			RGB24_TO_16( 0x00, 0x00, 0x00 )
+#define	COLOR16_RED				RGB24_TO_16( 0xFF, 0x00, 0x00 )
+#define	COLOR16_GREEN			RGB24_TO_16( 0x00, 0xFF, 0x00 )
+#define	COLOR16_BLUE			RGB24_TO_16( 0x00, 0x00, 0xFF )
+#define	COLOR16_YELLOW			RGB24_TO_16( 0xFF, 0xFF, 0x00 )
+#define	COLOR16_MAGENTA			RGB24_TO_16( 0xFF, 0x00, 0xFF )
+#define	COLOR16_CYAN			RGB24_TO_16( 0x00, 0xFF, 0xFF )
+#define	COLOR16_WHITE			RGB24_TO_16( 0xFF, 0xFF, 0xFF )
+#define	COLOR16_DEFAULT			COLOR16_BLACK
+
+typedef unsigned short		coord_t;
+typedef unsigned short		color_t;
+typedef unsigned char		lcdOrientation_t;
+
+typedef struct {
+	coord_t			width;			// LCD width in pixels (in current orientation)
+	coord_t			height;			// LCD height in pixels (in current orientation)
+	unsigned char	orientation;	// Whether the LCD orientation can be modified
+	unsigned char	backlight;		// backlight level, LCD_BL_MIN~LCD_BL_MAX
+	unsigned char	contrast;		// contrast level, LCD_CONTRAST_MIN~LCD_CONTRAST_MAX
+	unsigned char	led;			// LED level, LCD_LED_MIN~LCD_LED_MAX
+} lcdProperties_t;
+
+static coord_t			lcd_WinTl_x, lcd_WinTl_y, lcd_WinBr_x, lcd_WinBr_y, lcd_Cur_x, lcd_Cur_y;
+static lcdProperties_t	lcd_Properties = { LCD_COL, LCD_ROW, LCD_ORIENTATION_DEFAULT, LCD_BL_DFT, LCD_CONTRAST_DFT, LCD_LED_DFT }; // width & height are in portrait orientation
+static color_t*			lcd_Gram_Mirror = (color_t*)0x82100000;
+
+int					lcd_IsInited( void );
+void				lcd_FillSolid( color_t color );
+coord_t				lcd_GetWidth(void);
+coord_t				lcd_GetHeight(void);
+unsigned char		lcd_GetContrast( void );
+lcdOrientation_t	lcd_GetOrientation(void);
+
+
+typedef struct {
+	char			devName[32];
+	int				(*probe)( void );
+	unsigned short	(*getControllerID)( void );
+	void			(*setCursor)( coord_t x, coord_t y );
+	void			(*home)( void );
+	void			(*setWindow)( coord_t x1, coord_t x2, coord_t y1, coord_t y2 );
+	color_t			(*getPixel)( void );
+	void			(*setOrientation)( lcdOrientation_t orientation );
+	void			(*registerInit)( void );
+	void			(*init)( void );
+	void			(*shutdown)( void );
+	int				bFixedDirection;
+} stLcdChipFunc;
+
+
+stLcdChipFunc* lcd_CurrChip = 0;
+
+
+void lcd_DelayNs( unsigned long nsec )
+{
+	unsigned long	lCnt;
+	unsigned long	lDummy;
+
+	for ( lCnt=0, lDummy=0 ; lCnt < nsec ; lCnt++ )
+	{
+		lDummy = lDummy + 1;
+	}
+
+	lDummy--;
+}
+
+void lcd_DelayMs( unsigned long msec )
+{
+	ulong start = get_timer(0);
+
+	while (get_timer(start) < msec)
+	{
+		if ( ctrlc() )
+			return;
+		udelay(100);
+	}
+}
+
+void lcd_DelayUs( unsigned long usec )
+{
+	udelay( usec );
+}
+
+void lcd_GpioSet( int pin, int val )
+{
+	unsigned long*	pGpioOut;
+	unsigned long	bit;
+
+	if ( pin >=0 && pin <= 15 )
+		pGpioOut = (unsigned long*)BSP_GPIO_P0_OUT;
+	else if ( pin >=16 && pin <= 31 )
+		pGpioOut = (unsigned long*)BSP_GPIO_P1_OUT;
+	else if ( pin >=32 && pin <= 47 )
+		pGpioOut = (unsigned long*)BSP_GPIO_P2_OUT;
+	else if ( pin >=48 && pin <= 49 )
+		pGpioOut = (unsigned long*)BSP_GPIO_P3_OUT;
+	else
+		return;
+
+	bit = ( 0x1 << (pin%16) );
+
+	if ( val )
+		*pGpioOut |= bit;
+	else
+		*pGpioOut &= ~bit;
+}
+
+void lcd_WriteCommand( unsigned char iReg )
+{
+	LCD_SET_CMD( iReg );
+}
+
+void lcd_WriteData( unsigned short iData )
+{
+	LCD_SET_DAT( iData );
+}
+
+unsigned short lcd_ReadData( void )
+{
+	unsigned short	iData;
+
+	LCD_GET_DAT( iData );
+
+	return iData;
+}
+
+void lcd_WriteRegister( unsigned char iReg, unsigned short iData )
+{
+	lcd_WriteCommand( iReg );
+
+	lcd_WriteData( iData );
+}
+
+void lcd_ReadRegister( unsigned char iReg, unsigned short* pData )
+{
+	if ( pData == 0 )
+		return;
+
+	lcd_WriteCommand( iReg );
+
+	*pData = lcd_ReadData();
+}
+
+
+/**********************************************************************/
+
+
+void ili9325_SetCursor( coord_t x, coord_t y )
+{
+	lcd_WriteRegister( 0x20, x );     // GRAM Horizontal Address Start (R20h)
+	lcd_WriteRegister( 0x21, y );     // GRAM Vertical Address Start (R21h)
+}
+
+void ili9325_Home( void )
+{
+	lcd_WriteCommand( 0x22 );	// Write Data to GRAM (R22h)
+}
+
+void ili9325_SetWindow( coord_t x1, coord_t x2, coord_t y1, coord_t y2 )
+{
+	lcd_WriteRegister( 0x50, x1 );
+	lcd_WriteRegister( 0x51, x2 );
+	lcd_WriteRegister( 0x52, y1 );
+	lcd_WriteRegister( 0x53, y2 );
+}
+
+color_t ili9325_GetPixel( void )
+{
+	color_t	iData;
+
+	lcd_ReadRegister( 0x22, &iData );
+
+	return iData;
+}
+
+void ili9325_SetOrientation( lcdOrientation_t orientation )
+{
+	unsigned short	entryMode;
+
+	if ( orientation == LCD_ORIENTATION_LANDSCAPE)
+		entryMode = 0x1028;
+	else
+		entryMode = 0x1030;
+
+	lcd_WriteRegister( 0x03, entryMode );
+}
+
+unsigned short ili9325_GetControllerID( void )
+{
+	unsigned short	iData;
+
+	lcd_ReadRegister( 0x0, &iData );
+
+	return iData;
+}
+
+int ili9325_Probe( void )
+{
+	return ( ili9325_GetControllerID() == 0x9325 );
+}
+
+void ili9325_RegisterInit( void )
+{
+	lcd_WriteRegister( 0x01, 0x0100); // Driver Output Control Register (R01h)
+	lcd_WriteRegister( 0x02, 0x0700);     // LCD Driving Waveform Control (R02h)
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE)
+		lcd_WriteRegister( 0x03, 0x1028); // Entry Mode (R03h)
+	else
+		lcd_WriteRegister( 0x03, 0x1030); // Entry Mode (R03h)
+	lcd_WriteRegister( 0x08, 0x0302);     // Display Control 2 (R08h)
+	lcd_WriteRegister( 0x09, 0x0000);     // Display Control 3 (R09h)
+	lcd_WriteRegister( 0x0A, 0x0000);     // Frame Marker Position (R0Ah)
+	lcd_WriteRegister( 0x0C, 0x0001);     // RGB Display Interface Control 1 (R0Ch), 16-bit RGB interface
+	lcd_WriteRegister( 0x10, 0x0000);     // Power Control 1 (R10h)
+	lcd_WriteRegister( 0x11, 0x0007);     // Power Control 2 (R11h)
+	lcd_WriteRegister( 0x12, 0x0000);     // Power Control 3 (R12h)
+	lcd_WriteRegister( 0x13, 0x0000);     // Power Control 4 (R13h)
+	lcd_DelayMs( 100 );
+//	lcd_WriteRegister( 0x10, 0x14B0);     // Power Control 1 (R10h)  
+	lcd_WriteRegister( 0x10, 0x1490);     // Power Control 1 (R10h)  
+	lcd_DelayMs( 100 );
+	lcd_WriteRegister( 0x11, 0x0007);     // Power Control 2 (R11h)  
+	lcd_DelayMs( 100 );
+	lcd_WriteRegister( 0x12, 0x008E);     // Power Control 3 (R12h)
+	lcd_WriteRegister( 0x13, (unsigned short)lcd_GetContrast()<<8 ); // Power Control 4 (R13h)
+	lcd_WriteRegister( 0x29, 0x0015);     // Power Control 7 (R29h)
+	lcd_DelayMs( 100 );
+	lcd_WriteRegister( 0x30, 0x0000);     // Gamma Control 1
+	lcd_WriteRegister( 0x31, 0x0107);     // Gamma Control 2
+	lcd_WriteRegister( 0x32, 0x0000);     // Gamma Control 3
+	lcd_WriteRegister( 0x35, 0x0203);     // Gamma Control 6
+	lcd_WriteRegister( 0x36, 0x0402);     // Gamma Control 7
+	lcd_WriteRegister( 0x37, 0x0000);     // Gamma Control 8
+	lcd_WriteRegister( 0x38, 0x0207);     // Gamma Control 9
+	lcd_WriteRegister( 0x39, 0x0000);     // Gamma Control 10
+	lcd_WriteRegister( 0x3C, 0x0203);     // Gamma Control 13
+	lcd_WriteRegister( 0x3D, 0x0403);     // Gamma Control 14
+	lcd_WriteRegister( 0x50, 0x0000);     // Window Horizontal RAM Address Start (R50h)
+	lcd_WriteRegister( 0x51, LCD_COL - 1);// Window Horizontal RAM Address End (R51h)
+	lcd_WriteRegister( 0x52, 0X0000);     // Window Vertical RAM Address Start (R52h)
+	lcd_WriteRegister( 0x53, LCD_ROW - 1);// Window Vertical RAM Address End (R53h)
+}
+
+void ili9325_Init( void )
+{
+	ili9325_RegisterInit();
+
+	// non-reinitialized registers
+	lcd_WriteRegister( 0x2B, 0x000B);     // Frame Rate (R2Bh)
+	lcd_WriteRegister( 0x60, 0xa700);     // Driver Output Control (R60h)
+	lcd_WriteRegister( 0x61, 0x0003);     // Driver Output Control (R61h) - enable VLE
+	lcd_WriteRegister( 0x90, 0X0010);     // Panel Interface Control 1 (R90h)
+
+	// Display On
+	lcd_WriteRegister( 0x07, 0x0133);     // Display Control (R07h)
+	lcd_DelayMs( 100 );
+
+	ili9325_Home();
+}
+
+void ili9325_Shutdown( void )
+{
+}
+
+
+/**********************************************************************/
+
+
+void hx8347_SetCursor( coord_t x, coord_t y )
+{
+//	lcd_WriteRegister( 0x02, x >> 8 );
+//	lcd_WriteRegister( 0x03, x & 0xff );
+//	lcd_WriteRegister( 0x06, y >> 8 );
+//	lcd_WriteRegister( 0x07, y & 0xff );
+}
+
+void hx8347_Home( void )
+{
+	lcd_WriteCommand( 0x22 );	// Write Data to GRAM (R22h)
+}
+
+void hx8347_SetWindow( coord_t x1, coord_t x2, coord_t y1, coord_t y2 )
+{
+	lcd_WriteRegister( 0x02, x1 >> 8 );
+	lcd_WriteRegister( 0x03, x1 & 0xff );
+	lcd_WriteRegister( 0x04, x2 >> 8 );
+	lcd_WriteRegister( 0x05, x2 & 0xff );
+	lcd_WriteRegister( 0x06, y1 >> 8 );
+	lcd_WriteRegister( 0x07, y1 & 0xff );
+	lcd_WriteRegister( 0x08, y2 >> 8 );
+	lcd_WriteRegister( 0x09, y2 & 0xff );
+}
+
+color_t hx8347_GetPixel( void )
+{
+	return 0x0000;
+}
+
+void hx8347_SetOrientation( lcdOrientation_t orientation )
+{
+	unsigned short	entryMode;
+
+	if ( orientation == LCD_ORIENTATION_LANDSCAPE)
+		entryMode = 0x0000;
+	else
+		entryMode = 0x0060;
+
+	lcd_WriteRegister( 0x16, entryMode );
+}
+
+unsigned short hx8347_GetControllerID( void )
+{
+	unsigned short	iData;
+
+	lcd_ReadRegister( 0x0, &iData );
+
+	return iData & 0x00ff;
+}
+
+int hx8347_Probe( void )
+{
+	return ( hx8347_GetControllerID() == 0x75 );
+}
+
+void hx8347_RegisterInit( void )
+{
+	//Driving ability Setting
+	lcd_WriteRegister( 0x2E, 0X0089 ); //GDOFF
+	lcd_WriteRegister( 0x29, 0X008F ); //RTN
+	lcd_WriteRegister( 0x2B, 0x0002 ); //DUM
+	lcd_WriteRegister( 0xE2, 0x0000 ); //VREF
+	lcd_WriteRegister( 0xE4, 0x0001 ); //EQ
+	lcd_WriteRegister( 0xE5, 0x0010 ); //EQ
+	lcd_WriteRegister( 0xE6, 0x0001 ); //EQ
+	lcd_WriteRegister( 0xE7, 0x0010 ); //EQ
+	lcd_WriteRegister( 0xE8, 0x0070 ); //OPON
+	lcd_WriteRegister( 0xF2, 0x0000 ); //GEN
+	lcd_WriteRegister( 0xEA, 0x0000 ); //PTBA
+	lcd_WriteRegister( 0xEB, 0x0020 ); //PTBA
+	lcd_WriteRegister( 0xEC, 0x003C ); //STBA
+	lcd_WriteRegister( 0xED, 0x00C8 ); //STBA
+	lcd_WriteRegister( 0xE9, 0x0038 ); //OPON1
+	lcd_WriteRegister( 0xF1, 0x0001 ); //OTPS1B
+
+	//Gamma 2.2 Setting
+	lcd_WriteRegister( 0x40, 0x0000 ); //
+	lcd_WriteRegister( 0x41, 0x0000 ); //
+	lcd_WriteRegister( 0x42, 0x0000 ); //
+	lcd_WriteRegister( 0x43, 0x0015 ); //
+	lcd_WriteRegister( 0x44, 0x0013 ); //
+	lcd_WriteRegister( 0x45, 0x003f ); //
+	lcd_WriteRegister( 0x46, 0x0001 ); //
+	lcd_WriteRegister( 0x47, 0x0055 ); //
+	lcd_WriteRegister( 0x48, 0x0000 ); //
+	lcd_WriteRegister( 0x49, 0x0012 ); //
+	lcd_WriteRegister( 0x4A, 0x0019 ); //
+	lcd_WriteRegister( 0x4B, 0x0019 ); //
+	lcd_WriteRegister( 0x4C, 0x0016 ); //
+	lcd_WriteRegister( 0x50, 0x0000 ); //
+	lcd_WriteRegister( 0x51, 0x002c ); //
+	lcd_WriteRegister( 0x52, 0x002a ); //
+	lcd_WriteRegister( 0x53, 0x003F ); //
+	lcd_WriteRegister( 0x54, 0x003F ); //
+	lcd_WriteRegister( 0x55, 0x003F ); //
+	lcd_WriteRegister( 0x56, 0x002a ); //
+	lcd_WriteRegister( 0x57, 0x007e ); //
+	lcd_WriteRegister( 0x58, 0x0009 ); //
+	lcd_WriteRegister( 0x59, 0x0006 ); //
+	lcd_WriteRegister( 0x5A, 0x0006 ); //
+	lcd_WriteRegister( 0x5B, 0x000d ); //
+	lcd_WriteRegister( 0x5C, 0x001F ); //
+	lcd_WriteRegister( 0x5D, 0x00FF ); //
+
+	//Power Voltage Setting
+	lcd_WriteRegister( 0x1B, 0x001B );
+	lcd_WriteRegister( 0x1A, 0x0002 );
+	lcd_WriteRegister( 0x24, 0x0065 );//61
+	lcd_WriteRegister( 0x25, 0x005C );
+
+	//VCOM offset///
+	lcd_WriteRegister( 0x23, 0x0062 );//60
+
+	//Power on Setting
+//	lcd_WriteRegister( 0x18, 0x0036 ); //RADJ 70Hz  36
+	lcd_WriteRegister( 0x19, 0x0001 ); //OSC_EN=1
+	lcd_WriteRegister( 0x1F, 0x0088 ); // GAS=1, VOMG=00
+	lcd_DelayMs( 5 );
+	lcd_WriteRegister( 0x1F, 0x0080 ); // GAS=1, VOMG=00, PON=0, DK=0, XDK=0, DVDH_TRI=0, STB=0
+	lcd_DelayMs( 5 );
+	lcd_WriteRegister( 0x1F, 0x0090 ); // GAS=1, VOMG=00, PON=1, DK=0, XDK=0, DVDH_TRI=0, STB=0
+	lcd_DelayMs( 5 );
+	lcd_WriteRegister( 0x1F, 0x00D4 ); // GAS=1, VOMG=10, PON=1, DK=0, XDK=1, DDVDH_TRI=0, STB=0
+	lcd_DelayMs( 5 );
+
+	//262k/65k color selection
+	lcd_WriteRegister( 0x17, 0x0055 ); //default 0x66 262k ,0x55 65k color
+
+	//SET PANEL
+	lcd_WriteRegister( 0x36, 0x0009 ); //SS_P, 
+
+	//Display ON Setting
+//	lcd_WriteRegister( 0x28, 0x0038 ); //GON=1, DTE=1, 
+//	lcd_DelayMs( 40 );
+//	lcd_WriteRegister( 0x28, 0x003C ); //GON=1, DTE=1, D=1100
+
+	//Set Orientation
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE)
+		lcd_WriteRegister( 0x16, 0x0000);
+	else
+		lcd_WriteRegister( 0x16, 0x0060);
+
+	//Set Contrast
+//	lcd_WriteRegister( 0x13, (unsigned short)lcd_GetContrast()<<8 ); // Power Control 4 (R13h)
+
+	lcd_WriteRegister( 0x02, 0x0000 );
+	lcd_WriteRegister( 0x03, 0x0000 ); //Column Start
+	lcd_WriteRegister( 0x04, (LCD_COL-1)>>8 );
+	lcd_WriteRegister( 0x05, (LCD_COL-1)%0xff ); //Column End
+	lcd_WriteRegister( 0x06, 0x0000 );
+	lcd_WriteRegister( 0x07, 0x0000 ); //Row Start
+	lcd_WriteRegister( 0x08, (LCD_ROW-1)>>8 );
+	lcd_WriteRegister( 0x09, (LCD_ROW-1)%0xff ); //Row End
+}
+
+void hx8347_Init( void )
+{
+	hx8347_RegisterInit();
+
+	// non-reinitialized registers
+	lcd_WriteRegister( 0x18, 0x0036 ); // RADJ 70Hz  36
+	lcd_WriteRegister( 0x60, 0xa700 ); // Driver Output Control (R60h)
+	lcd_WriteRegister( 0x61, 0x0003 ); // Driver Output Control (R61h) - enable VLE
+	lcd_WriteRegister( 0x90, 0X0010 ); // Panel Interface Control 1 (R90h)
+
+	// Display On
+	lcd_WriteRegister( 0x28, 0x0038 ); //GON=1, DTE=1, 
+	lcd_DelayMs( 40 );
+	lcd_WriteRegister( 0x28, 0x003C ); //GON=1, DTE=1, D=1100
+
+	hx8347_Home();
+}
+
+void hx8347_Shutdown( void )
+{
+}
+
+/**********************************************************************/
+
+
+void ili9341_SetCursor( coord_t x, coord_t y )
+{
+}
+
+void ili9341_Home( void )
+{
+	lcd_WriteCommand( 0x2C );	// Write Data to GRAM (R2Ch)
+}
+
+void ili9341_SetWindow( coord_t x1, coord_t x2, coord_t y1, coord_t y2 )
+{
+	lcd_WriteCommand( 0x2A);
+	lcd_WriteData( x1 );
+	lcd_WriteData( x2 );				
+	lcd_WriteCommand( 0x2B);
+	lcd_WriteData( y1 );
+	lcd_WriteData( y2 );			
+}
+
+color_t ili9341_GetPixel( void )
+{
+	color_t	iData;
+
+	lcd_ReadRegister( 0x2E, &iData );
+
+	return iData;
+}
+
+void ili9341_SetOrientation( lcdOrientation_t orientation )
+{
+	unsigned short	entryMode;
+	
+	if ( orientation == LCD_ORIENTATION_LANDSCAPE)
+		entryMode = 0x4800;
+	else
+		entryMode = 0x3800;
+	lcd_WriteRegister( 0x36, entryMode );
+	
+	lcd_WriteData( entryMode );				
+}
+
+unsigned short ili9341_GetControllerID( void )
+{
+	unsigned short	iParameter1;
+	unsigned short	iParameter2;	
+	
+	lcd_WriteCommand( 0xD3);
+
+	iParameter1 = lcd_ReadData();
+	iParameter2 = lcd_ReadData();
+
+	return iParameter2;
+}
+
+int ili9341_Probe( void )
+{
+	return ( ili9341_GetControllerID() == 0x9341 );
+}
+
+void ili9341_RegisterInit( void )
+{
+
+// VCI=2.8V 
+
+//************* Start Initial Sequence **********// 
+ 
+	lcd_WriteCommand(0xCB);  
+	lcd_WriteData(0x392C); 
+	lcd_WriteData(0x0034); 
+	lcd_WriteData(0x0200); 
+ 
+	lcd_WriteCommand(0xCF);  
+	lcd_WriteData(0x00C1); 
+	lcd_WriteData(0X3000); 
+ 
+	lcd_WriteCommand(0xE8);  
+	lcd_WriteData(0x8510);  
+	lcd_WriteData(0x7900); 
+
+
+	lcd_WriteCommand(0xEA);  
+	lcd_WriteData(0x0000);  
+
+	lcd_WriteCommand(0xED);  
+	lcd_WriteData(0x6403);  
+	lcd_WriteData(0X1281); 
+ 
+	lcd_WriteCommand(0xF7);  
+	lcd_WriteData(0x2000); 
+ 
+	lcd_WriteCommand(0xC0);    //Power control 
+	lcd_WriteData(0x2100);   //VRH[5:0] 
+ 
+	lcd_WriteCommand(0xC1);    //Power control 
+	lcd_WriteData(0x1200);   //SAP[2:0];BT[3:0] 
+ 
+	lcd_WriteCommand(0xC5);    //VCM control 
+	lcd_WriteData(0x243F);  
+ 
+	lcd_WriteCommand(0xC7);    //VCM control2 
+	lcd_WriteData(0xC200); 
+
+	lcd_WriteCommand(0xb1); 
+	lcd_WriteData(0x0016);  
+ 
+	lcd_WriteCommand(0x36);    // Memory Access Control 
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE)
+	  lcd_WriteData(0x4800);//08 48	
+	else	
+	  lcd_WriteData(0x3800);
+
+	lcd_WriteCommand(0x3A);    
+	lcd_WriteData(0x5500);  
+ 
+	lcd_WriteCommand(0xF2);    // 3Gamma Function Disable 
+	lcd_WriteData(0x0000); 
+ 
+	lcd_WriteCommand(0x26);    //Gamma curve selected 
+	lcd_WriteData(0x0100); 
+ 
+	lcd_WriteCommand(0xE0);    //Set Gamma 
+	lcd_WriteData(0x0F1B);  
+	lcd_WriteData(0x170C);  
+	lcd_WriteData(0x0D08);  
+	lcd_WriteData(0x40A9);  
+	lcd_WriteData(0x2806);  
+	lcd_WriteData(0x0D03);  
+	lcd_WriteData(0x1003);  
+	lcd_WriteData(0x0000); 
+ 
+	lcd_WriteCommand(0XE1);    //Set Gamma 
+	lcd_WriteData(0x0024); 
+	lcd_WriteData(0x2803);  
+	lcd_WriteData(0x1207);  
+	lcd_WriteData(0x3F56);  
+	lcd_WriteData(0x5709); 
+	lcd_WriteData(0x120C);  
+	lcd_WriteData(0x2F3C);  
+	lcd_WriteData(0x0F00); 
+ 
+	lcd_WriteCommand(0x11);    //Exit Sleep 
+	lcd_DelayMs(120); 
+	lcd_WriteCommand(0x29);    //Display on
+}
+
+void ili9341_Init( void )
+{
+	ili9341_RegisterInit();
+	ili9341_Home();	
+	
+}
+
+void ili9341_Shutdown( void )
+{
+}
+
+
+/**********************************************************************/
+
+
+// NEVER user static function table assignment in boot loader, or function pointer will be wrong
+stLcdChipFunc lcd_ChipTbl[3];
+
+void lcd_FuncTblPrepare( void )
+{
+	strcpy( lcd_ChipTbl[0].devName, "ILI9325D" );
+	lcd_ChipTbl[0].probe			= ili9325_Probe;
+	lcd_ChipTbl[0].getControllerID	= ili9325_GetControllerID;
+	lcd_ChipTbl[0].setCursor		= ili9325_SetCursor;
+	lcd_ChipTbl[0].home				= ili9325_Home;
+	lcd_ChipTbl[0].setWindow		= ili9325_SetWindow;
+	lcd_ChipTbl[0].getPixel			= ili9325_GetPixel;
+	lcd_ChipTbl[0].setOrientation	= ili9325_SetOrientation;
+	lcd_ChipTbl[0].registerInit		= ili9325_RegisterInit;
+	lcd_ChipTbl[0].init				= ili9325_Init;
+	lcd_ChipTbl[0].shutdown			= ili9325_Shutdown;
+	lcd_ChipTbl[0].bFixedDirection	= 0;
+
+	strcpy( lcd_ChipTbl[1].devName, "HX8347-G" );
+	lcd_ChipTbl[1].probe			= hx8347_Probe;
+	lcd_ChipTbl[1].getControllerID	= hx8347_GetControllerID;
+	lcd_ChipTbl[1].setCursor		= hx8347_SetCursor;
+	lcd_ChipTbl[1].home				= hx8347_Home;
+	lcd_ChipTbl[1].setWindow		= hx8347_SetWindow;
+	lcd_ChipTbl[1].getPixel			= hx8347_GetPixel;
+	lcd_ChipTbl[1].setOrientation	= hx8347_SetOrientation;
+	lcd_ChipTbl[1].registerInit		= hx8347_RegisterInit;
+	lcd_ChipTbl[1].init				= hx8347_Init;
+	lcd_ChipTbl[1].shutdown			= hx8347_Shutdown;
+	lcd_ChipTbl[1].bFixedDirection	= 1;
+
+	strcpy( lcd_ChipTbl[2].devName, "ILI9341" );
+	lcd_ChipTbl[2].probe			= ili9341_Probe;
+	lcd_ChipTbl[2].getControllerID	= ili9341_GetControllerID;
+	lcd_ChipTbl[2].setCursor		= ili9341_SetCursor;
+	lcd_ChipTbl[2].home				= ili9341_Home;
+	lcd_ChipTbl[2].setWindow		= ili9341_SetWindow;
+	lcd_ChipTbl[2].getPixel			= ili9341_GetPixel;
+	lcd_ChipTbl[2].setOrientation	= ili9341_SetOrientation;
+	lcd_ChipTbl[2].registerInit		= ili9341_RegisterInit;
+	lcd_ChipTbl[2].init				= ili9341_Init;
+	lcd_ChipTbl[2].shutdown			= ili9341_Shutdown;
+	lcd_ChipTbl[2].bFixedDirection	= 1;	
+
+}
+
+/**********************************************************************/
+
+
+coord_t lcd_GetWidth(void)
+{
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE ) 
+		return lcd_Properties.height;
+	else // LCD_ORIENTATION_PORTRAIT
+		return lcd_Properties.width;
+}
+
+coord_t lcd_GetHeight(void)
+{
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE ) 
+		return lcd_Properties.width;
+	else // LCD_ORIENTATION_PORTRAIT
+		return lcd_Properties.height;
+}
+
+void lcd_SetCursor( coord_t x, coord_t y )
+{
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE)
+	{
+		lcd_Cur_x = lcd_GetHeight() - y;
+		lcd_Cur_y = x;
+	}
+	else
+	{
+		lcd_Cur_x = x;
+		lcd_Cur_y = y;
+	}
+
+	if ( lcd_CurrChip && lcd_CurrChip->setCursor )
+		lcd_CurrChip->setCursor( lcd_Cur_x, lcd_Cur_y );
+}
+
+void lcd_Home( void )
+{
+	lcd_SetCursor( 0, 0 );
+
+	if ( lcd_CurrChip && lcd_CurrChip->home )
+		lcd_CurrChip->home();
+}
+
+void lcd_SetWindow( coord_t x, coord_t y, coord_t width, coord_t height )
+{
+	if ( x >= lcd_GetWidth() )
+		x = lcd_GetWidth() - 1;
+	if ( (x+width) > lcd_GetWidth() )
+		width = lcd_GetWidth() - x;
+	if ( y >= lcd_GetHeight() )
+		y = lcd_GetHeight() - 1;
+	if ( (y+height) > lcd_GetHeight() )
+		height = lcd_GetHeight() - y;
+	if ( lcd_GetOrientation() == LCD_ORIENTATION_LANDSCAPE )
+	{
+//		lcd_WinTl_x = lcd_GetHeight() - y - height + 1;
+		lcd_WinTl_x = lcd_GetHeight() - y - height;
+		lcd_WinTl_y = x;
+		lcd_WinBr_x = lcd_GetHeight() - y - 1;
+		lcd_WinBr_y = x + width - 1;
+	}
+	else
+	{
+		lcd_WinTl_x = x;
+		lcd_WinTl_y = y;
+		lcd_WinBr_x = x + width - 1;
+		lcd_WinBr_y = y + height - 1;
+	}
+
+	if ( lcd_CurrChip && lcd_CurrChip->setWindow )
+		lcd_CurrChip->setWindow( lcd_WinTl_x, lcd_WinBr_x, lcd_WinTl_y, lcd_WinBr_y );
+
+	lcd_SetCursor( x, y );
+}
+
+lcdOrientation_t lcd_GetOrientation(void)
+{
+  return lcd_Properties.orientation;
+}
+
+unsigned short lcd_GetControllerID( void )
+{
+	if ( lcd_CurrChip && lcd_CurrChip->getControllerID )
+		return lcd_CurrChip->getControllerID();
+
+	return 0;
+}
+
+void lcd_SetMirrorGram( coord_t x, coord_t y, color_t color )
+{
+	if ( x >= lcd_GetWidth() )
+		return;
+
+	if ( y >= lcd_GetHeight() )
+		return;
+
+	lcd_Gram_Mirror[ y*lcd_GetWidth() + x ] = color;
+}
+
+void lcd_UpdateGram( coord_t x1, coord_t y1, coord_t x2, coord_t y2 )
+{
+	long	row, col, offset;
+
+	if ( x1 >= lcd_GetWidth() )
+		return;
+
+	if ( x2 >= lcd_GetWidth() )
+		x2 = lcd_GetWidth() - 1;
+
+	if ( y1 >= lcd_GetHeight() )
+		return;
+
+	if ( y2 >= lcd_GetHeight() )
+		y2 = lcd_GetHeight() - 1;
+
+	if (x1 > x2)
+	{
+		col = x1;
+		x1  = x2;
+		x2  = col;
+	}
+
+	if (y1 > y2)
+	{
+		row = y1;
+		y1  = y2;
+		y2  = row;
+	}
+
+	// reset window address
+	lcd_SetWindow( x1, y1, x2-x1+1, y2-y1+1 );
+
+	if ( lcd_CurrChip && lcd_CurrChip->home )
+		lcd_CurrChip->home();
+
+	if ( lcd_CurrChip == 0 || lcd_CurrChip->bFixedDirection == 0 || lcd_GetOrientation() != LCD_ORIENTATION_LANDSCAPE )
+	{
+		for ( row=y1; row <= y2; row++ )
+		{
+			offset = row * lcd_GetWidth();
+			for ( col=x1; col <= x2; col++ )
+			{
+				lcd_WriteData( lcd_Gram_Mirror[ offset + col ] );
+			}
+		}
+	}
+	else
+	{
+		offset = lcd_GetWidth();
+		for ( col=x1; col <= x2; col++ )
+		{
+			for ( row=y2; row >= y1; row-- )
+			{
+				lcd_WriteData( lcd_Gram_Mirror[ offset*row + col ] );
+			}
+		}
+	}
+}
+
+/******************************************************************/
+
+void lcd_Flush( void )
+{
+	lcd_UpdateGram( 0, 0, lcd_GetWidth()-1, lcd_GetHeight()-1 );
+}
+
+void lcd_FillSolidRect( coord_t x1, coord_t y1, coord_t x2, coord_t y2, color_t color )
+{
+	unsigned long	row, col;
+
+	if ( x1 >= lcd_GetWidth() )
+		x1 = lcd_GetWidth() - 1;
+	if ( x2 >= lcd_GetWidth() )
+		x2 = lcd_GetWidth() - 1;
+
+	if ( y1 >= lcd_GetHeight() )
+		y1 = lcd_GetHeight() - 1;
+	if ( y2 >= lcd_GetHeight() )
+		y2 = lcd_GetHeight() - 1;
+
+	if (x1 > x2)
+	{
+		col = x1;
+		x1  = x2;
+		x2  = col;
+	}
+
+	if (y1 > y2)
+	{
+		row = y1;
+		y1  = y2;
+		y2  = row;
+	}
+
+	for ( row=y1; row <= y2; row++ )
+	{
+        for ( col=x1; col <= x2; col++ )
+		{
+			lcd_SetMirrorGram( col, row, color );
+		}
+	}
+
+	lcd_UpdateGram( x1, y1, x2, y2 );
+}
+
+void lcd_FillSolid( color_t color )
+{
+	lcd_FillSolidRect( 0, 0, lcd_GetWidth()-1, lcd_GetHeight()-1, color );
+}
+
+void lcd_FillGradientRect( coord_t x1, coord_t y1, coord_t x2, coord_t y2, color_t color1, color_t color2 )
+{
+	unsigned long	row, col;
+	unsigned long	row_max_no, col_max_no;
+	color_t			color1R = COLOR16_R(color1);
+	color_t			color1G = COLOR16_G(color1);
+	color_t			color1B = COLOR16_B(color1);
+	color_t			color2R = COLOR16_R(color2);
+	color_t			color2G = COLOR16_G(color2);
+	color_t			color2B = COLOR16_B(color2);
+	color_t			colorR;
+	color_t			colorG;
+	color_t			colorB;
+
+	if ( x1 >= lcd_GetWidth() )
+		x1 = lcd_GetWidth() - 1;
+	if ( x2 >= lcd_GetWidth() )
+		x2 = lcd_GetWidth() - 1;
+
+	if ( y1 >= lcd_GetHeight() )
+		y1 = lcd_GetHeight() - 1;
+	if ( y2 >= lcd_GetHeight() )
+		y2 = lcd_GetHeight() - 1;
+
+	if (x1 > x2)
+	{
+		col = x1;
+		x1  = x2;
+		x2  = col;
+	}
+
+	if (y1 > y2)
+	{
+		row = y1;
+		y1  = y2;
+		y2  = row;
+	}
+
+	row_max_no = y2 - y1 + 1;
+	col_max_no = x2 - x1 + 1;
+
+	for ( row=y1; row <= y2; row++ )
+	{
+        for ( col=x1; col <= x2; col++ )
+		{
+			colorR =  ((y2-row)*color1R + (row-y1)*color2R) / row_max_no
+					+ ((x2-col)*color1R + (col-x1)*color2R) / col_max_no;
+			colorG =  ((y2-row)*color1G + (row-y1)*color2G) / row_max_no
+					+ ((x2-col)*color1G + (col-x1)*color2G) / col_max_no;
+			colorB =  ((y2-row)*color1B + (row-y1)*color2B) / row_max_no
+					+ ((x2-col)*color1B + (col-x1)*color2B) / col_max_no;
+			lcd_SetMirrorGram( col, row, RGB16( colorR/2, colorG/2, colorB/2 ) );
+		}
+	}
+
+	lcd_UpdateGram( x1, y1, x2, y2 );
+}
+
+void lcd_FillGradient( color_t color1, color_t color2 )
+{
+	lcd_FillGradientRect( 0, 0, lcd_GetWidth()-1, lcd_GetHeight()-1, color1, color2 );
+}
+
+unsigned char lcd_GetBackLight( void )
+{
+	return lcd_Properties.backlight;
+}
+
+void lcd_SetBackLight( unsigned char iData, int bForce )
+{
+	int		iCnt;
+	int		iDec;
+
+	if (iData < LCD_BL_MIN)
+		iData = LCD_BL_MIN;
+
+	if ( iData > LCD_BL_MAX )
+		iData = LCD_BL_MAX;
+
+	if ( bForce == 0 && lcd_Properties.backlight == iData )
+		return;
+
+	lcd_Properties.backlight = iData;
+
+	lcd_GpioSet( LCD_GPIO_BL, 0 );
+	lcd_DelayMs( 5 );
+
+	if ( iData == 0 )
+		return;
+
+	lcd_GpioSet( LCD_GPIO_BL, 1 );
+	lcd_DelayUs( 50 );
+
+	for ( iCnt=0, iDec=LCD_BL_MAX-lcd_Properties.backlight; iCnt < iDec; iCnt++ )
+	{
+		lcd_GpioSet( LCD_GPIO_BL, 0 );
+		lcd_DelayUs( 1 );
+		lcd_GpioSet( LCD_GPIO_BL, 1 );
+		lcd_DelayUs( 1 );
+	}
+}
+
+unsigned char lcd_GetLed( void )
+{
+	return lcd_Properties.led;
+}
+
+void lcd_SetLed( unsigned char iData, int bForce )
+{
+	int		iCnt;
+	int		iDec;
+
+	if (iData < LCD_LED_MIN)
+		iData = LCD_LED_MIN;
+
+	if ( iData > LCD_LED_MAX )
+		iData = LCD_LED_MAX;
+
+	if ( bForce == 0 && lcd_Properties.led == iData )
+		return;
+
+	lcd_Properties.led = iData;
+
+	lcd_GpioSet( LCD_GPIO_LED, 0 );
+	lcd_DelayMs( 5 );
+
+	if ( iData == 0 )
+		return;
+
+	lcd_GpioSet( LCD_GPIO_LED, 1 );
+	lcd_DelayUs( 50 );
+
+	for ( iCnt=0, iDec=LCD_LED_MAX-lcd_Properties.led; iCnt < iDec; iCnt++ )
+	{
+		lcd_GpioSet( LCD_GPIO_LED, 0 );
+		lcd_DelayUs( 1 );
+		lcd_GpioSet( LCD_GPIO_LED, 1 );
+		lcd_DelayUs( 1 );
+	}
+}
+
+unsigned char lcd_GetContrast( void )
+{
+	return lcd_Properties.contrast;
+}
+
+void lcd_GpioInit( void )
+{
+	// reset, GPIO 6
+	*BSP_GPIO_P0_ALTSEL0 &= ~(0x0040);
+	*BSP_GPIO_P0_ALTSEL1 &= ~(0x0040);
+	*BSP_GPIO_P0_DIR     |= 0x0040;
+	*BSP_GPIO_P0_OD      |= 0x0040;
+	lcd_GpioSet( LCD_GPIO_RST, 1 );
+	// backlight, GPIO 28
+	lcd_GpioSet( LCD_GPIO_BL, 0 );
+	*BSP_GPIO_P1_ALTSEL0 &= ~(0x1000);
+	*BSP_GPIO_P1_ALTSEL1 &= ~(0x1000);
+	*BSP_GPIO_P1_DIR     |= 0x1000;
+	*BSP_GPIO_P1_OD      |= 0x1000;
+//	lcd_GpioSet( LCD_GPIO_BL, 1 );
+	// LED, GPIO 31
+	*BSP_GPIO_P1_ALTSEL0 &= ~(0x8000);
+	*BSP_GPIO_P1_ALTSEL1 &= ~(0x8000);
+	*BSP_GPIO_P1_DIR     |= 0x8000;
+	*BSP_GPIO_P1_OD      |= 0x8000;
+	lcd_GpioSet( LCD_GPIO_LED, 1 );
+
+	// reset, GPIO 6
+	lcd_DelayMs( 1 );
+	lcd_GpioSet( LCD_GPIO_RST, 0 );
+	lcd_DelayMs( 2 );
+	lcd_GpioSet( LCD_GPIO_RST, 1 );
+	// backlight, GPIO 28
+//	lcd_GpioSet( LCD_GPIO_BL, 0 );
+//	lcd_DelayMs( 20 );
+//	lcd_GpioSet( LCD_GPIO_BL, 1 );
+	// LED, GPIO 31
+//	lcd_GpioSet( LCD_GPIO_LED, 1 );
+	//
+	lcd_DelayMs( 100 );
+}
+
+void lcd_Init( void )
+{
+	int		iCnt;
+
+	*(unsigned long*)0xbe105328 = 0x160000f1;
+	*(unsigned long*)0xbe105368 = 0x1d3dd;
+
+	lcd_FuncTblPrepare();
+
+	lcd_GpioInit();
+
+	lcd_CurrChip = 0;
+
+	for ( iCnt=0 ; iCnt < sizeof(lcd_ChipTbl)/sizeof(lcd_ChipTbl[0]) ; iCnt++ )
+	{
+		if ( lcd_ChipTbl[iCnt].probe!=0 && lcd_ChipTbl[iCnt].probe() )
+		{
+			lcd_CurrChip = &lcd_ChipTbl[iCnt];
+			break;
+		}
+	}
+
+	if ( lcd_CurrChip && lcd_CurrChip->init )
+		lcd_CurrChip->init();
+
+	lcd_FillSolid( COLOR16_DEFAULT );
+	lcd_SetBackLight( lcd_GetBackLight(), LCD_BL_DFT );
+}
+
+int lcd_DisplayPage( int page )
+{
+	char*                   pBootLcd;
+	unsigned char*  pLzma = (unsigned char*)0x82000000;
+	unsigned char*  pImages = (unsigned char*)0x82400000;
+	char                    sCmd[64];
+	SizeT                   lLzmaSize;
+	SizeT                   lAllImageSize;
+	unsigned long   lFileCnt;
+	char*                   pFiles;
+	unsigned long   lCnt;
+	unsigned char*  pImagePtr;
+	ulong                   start;
+	ulong                   interval;
+	unsigned long   lPixel;
+	int                             bFirstImage = 1;
+
+	static int              init = 0;
+
+	/* MUST set env var "bootlcd", or LCD is disabled at bootup */
+
+	pBootLcd = getenv( "bootlcd" );
+
+	if ( pBootLcd==0 || strcmp( pBootLcd, "0" ) == 0 )
+		return 0;
+
+	if (init == 0) {
+
+		printf ( "Uncompressing LCD bootup images ............... " );
+
+		sprintf( sCmd, "nand read.e %p $(f_lcdimage_addr) $(f_lcdimage_size)", pLzma );
+		run_command( sCmd, 0 );
+
+		if ( strcmp( (char*)pLzma, "lcd_boot_image" ) != 0 ) // wrong image ID
+		{
+			printf( "wrong image ID\n" );
+			goto err_Boot_Lcd_Init;
+		}
+
+		lLzmaSize = (SizeT)simple_strtoul( (char*)pLzma+16, 0, 10 );
+
+		if ( lLzmaSize >= 0x400000 )
+		{
+			printf( "wrong LZMA image size\n" );
+			goto err_Boot_Lcd_Init;
+		}
+
+		if ( lzmaBuffToBuffDecompress( pImages, &lAllImageSize, pLzma+160, lLzmaSize ) != SZ_OK)
+		{
+			printf( "wrong LZMA image format\n" );
+			goto err_Boot_Lcd_Init;
+		}
+
+		if ( lAllImageSize != (SizeT)simple_strtoul( (char*)pLzma+32, 0, 10 ) )
+		{
+			printf( "wrong uncompressed image size\n" );
+			goto err_Boot_Lcd_Init;
+		}
+
+		lFileCnt = (SizeT)simple_strtoul( (char*)pLzma+28, 0, 10 );
+		interval = (ulong)simple_strtoul( (char*)pLzma+48, 0, 10 );
+		pFiles = (char*)(pLzma + 52);
+
+		lcd_Init();
+
+		if ( lcd_CurrChip == 0 )
+			return 0;
+
+		init = 1;
+	}
+
+       // move to the beginning of the page
+	pImagePtr = pImages + (LCD_PIXEL_NUM*3)*page;
+
+	for ( lPixel=0; lPixel < LCD_PIXEL_NUM; lPixel++, pImagePtr+=3 )
+		lcd_Gram_Mirror[lPixel] = RGB24_TO_16( pImagePtr[0], pImagePtr[1], pImagePtr[2] );
+
+	lcd_Flush();
+	//lcd_SetBackLight( lcd_GetBackLight(), 16 );
+	lcd_SetBackLight( LCD_BL_MAX, 0);
+
+	return 0;
+
+
+err_Boot_Lcd_Init:
+
+	lcd_FillSolid( COLOR16_MAGENTA );
+	lcd_SetBackLight( lcd_GetBackLight(), 1 );
+
+	return 0;
+}
+
+int lcd_boot_Init( void )
+{
+	char*			pBootLcd;
+	unsigned char*	pLzma = (unsigned char*)0x82000000;
+	unsigned char*	pImages = (unsigned char*)0x82400000;
+	char			sCmd[64];
+	SizeT			lLzmaSize;
+	SizeT			lAllImageSize;
+	unsigned long	lFileCnt;
+	char*			pFiles;
+	unsigned long	lCnt;
+	unsigned char*	pImagePtr;
+	ulong			start;
+	ulong			interval;
+	unsigned long	lPixel;
+	int				bFirstImage = 1;
+
+	/* MUST set env var "bootlcd", or LCD is disabled at bootup */
+
+	pBootLcd = getenv( "bootlcd" );
+
+	if ( pBootLcd==0 || strcmp( pBootLcd, "0" ) == 0 )
+		return 0;
+
+	lcd_Init();
+
+	if ( lcd_CurrChip == 0 )
+		return 0;
+
+	printf ( "Uncompressing LCD bootup images ............... " );
+
+	sprintf( sCmd, "nand read.e %p $(f_lcdimage_addr) $(f_lcdimage_size)", pLzma );
+	run_command( sCmd, 0 );
+
+	if ( strcmp( (char*)pLzma, "lcd_boot_image" ) != 0 ) // wrong image ID
+	{
+		printf( "wrong image ID\n" );
+		goto err_Boot_Lcd_Init;
+	}
+
+	lLzmaSize = (SizeT)simple_strtoul( (char*)pLzma+16, 0, 10 );
+
+	if ( lLzmaSize >= 0x400000 )
+	{
+		printf( "wrong LZMA image size\n" );
+		goto err_Boot_Lcd_Init;
+	}
+
+	if ( lzmaBuffToBuffDecompress( pImages, &lAllImageSize, pLzma+160, lLzmaSize ) != SZ_OK)
+	{
+		printf( "wrong LZMA image format\n" );
+		goto err_Boot_Lcd_Init;
+	}
+
+	if ( lAllImageSize != (SizeT)simple_strtoul( (char*)pLzma+32, 0, 10 ) )
+	{
+		printf( "wrong uncompressed image size\n" );
+		goto err_Boot_Lcd_Init;
+	}
+
+	lFileCnt = (SizeT)simple_strtoul( (char*)pLzma+28, 0, 10 );
+	interval = (ulong)simple_strtoul( (char*)pLzma+48, 0, 10 );
+	pFiles = (char*)(pLzma + 52);
+
+	for ( lCnt=0, pImagePtr=pImages; lCnt < lFileCnt; lCnt++ )
+	{
+		if (pFiles[lCnt] == '0')
+		{
+			pImagePtr += (LCD_PIXEL_NUM*3);
+			continue;
+		}
+
+		for ( lPixel=0; lPixel < LCD_PIXEL_NUM; lPixel++, pImagePtr+=3 )
+			lcd_Gram_Mirror[lPixel] = RGB24_TO_16( pImagePtr[0], pImagePtr[1], pImagePtr[2] );
+
+		start = get_timer(0);
+
+		lcd_Flush();
+
+		if ( bFirstImage )
+		{
+			bFirstImage = 0;
+			lcd_SetBackLight( lcd_GetBackLight(), 16 );
+		}
+
+		while (get_timer(start) < interval)
+		{
+			if ( ctrlc() )
+				return 1;
+			udelay(100);
+		}
+	}
+
+	return 0;
+
+
+err_Boot_Lcd_Init:
+
+	lcd_FillSolid( COLOR16_MAGENTA );
+	lcd_SetBackLight( lcd_GetBackLight(), 1 );
+
+	return 0;
+}
+
+int do_lcd(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
+{
+	char*			cmd;
+	unsigned char	reg;
+	unsigned short	data;
+	unsigned short	x0, x1, y0, y1;
+	unsigned short	color2;
+
+	if ( argc < 2 )
+		goto usage;
+
+	cmd = argv[1];
+
+	if (strcmp(cmd, "info") == 0)
+	{
+		putc('\n');
+		if ( lcd_CurrChip && lcd_CurrChip->devName )
+			printf( "device name: %s\n", lcd_CurrChip->devName );
+		printf( "device ID:   0x%04x\n", lcd_GetControllerID() );
+		printf( "width:       %u\n", lcd_GetWidth() );
+		printf( "height:      %u\n", lcd_GetHeight() );
+		printf( "orientation: %u\n", (lcd_GetOrientation()==LCD_ORIENTATION_PORTRAIT ? LCD_ORIENTATION_PORTRAIT : LCD_ORIENTATION_LANDSCAPE) );
+		printf( "backlight:   %u\n", lcd_GetBackLight() );
+		printf( "led:         %u\n", lcd_GetLed() );
+		return 0;
+	}
+
+	if (strcmp(cmd, "init") == 0)
+	{
+		putc('\n');
+		lcd_boot_Init();
+		return 0;
+	}
+
+	if (strcmp(cmd, "reg_get") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		reg = (unsigned char)simple_strtoul( argv[2], NULL, 16 );
+		putc('\n');
+		lcd_ReadRegister( reg, &data );
+		printf( "register 0x%02x = 0x%04x\n", reg, data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "reg_set") == 0)
+	{
+		if ( argc < 4 )
+			goto usage;
+		reg = (unsigned char)simple_strtoul( argv[2], NULL, 16 );
+		data = (unsigned short)simple_strtoul( argv[3], NULL, 16 );
+		lcd_WriteRegister( reg, data );
+		putc('\n');
+		lcd_ReadRegister( reg, &data );
+		printf( "register 0x%02x = 0x%04x\n", reg, data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "color") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 16 );
+		lcd_FillSolid( data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "gradient") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 16 );
+		if ( argc >= 4 )
+			color2 = (unsigned short)simple_strtoul( argv[3], NULL, 16 );
+		else
+			color2 = ~data;
+		lcd_FillGradient( data, color2 );
+		return 0;
+	}
+
+	if (strcmp(cmd, "rect") == 0)
+	{
+		if ( argc < 7 )
+			goto usage;
+		x0 = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		y0 = (unsigned short)simple_strtoul( argv[3], NULL, 10 );
+		x1 = (unsigned short)simple_strtoul( argv[4], NULL, 10 );
+		y1 = (unsigned short)simple_strtoul( argv[5], NULL, 10 );
+		data = (unsigned short)simple_strtoul( argv[6], NULL, 16 );
+		lcd_FillSolidRect( x0, y0, x1, y1, data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "grect") == 0)
+	{
+		if ( argc < 7 )
+			goto usage;
+		x0 = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		y0 = (unsigned short)simple_strtoul( argv[3], NULL, 10 );
+		x1 = (unsigned short)simple_strtoul( argv[4], NULL, 10 );
+		y1 = (unsigned short)simple_strtoul( argv[5], NULL, 10 );
+		data = (unsigned short)simple_strtoul( argv[6], NULL, 16 );
+		if ( argc >= 8 )
+			color2 = (unsigned short)simple_strtoul( argv[7], NULL, 16 );
+		else
+			color2 = ~data;
+		lcd_FillGradientRect( x0, y0, x1, y1, data, color2 );
+		return 0;
+	}
+
+	if (strcmp(cmd, "bl") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		lcd_SetBackLight( (unsigned char)data, 1 );
+		return 0;
+	}
+
+	if (strcmp(cmd, "led") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		lcd_SetLed( (unsigned char)data, 1 );
+		return 0;
+	}
+
+	if (strcmp(cmd, "msleep") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		lcd_DelayMs( (unsigned char)data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "usleep") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		lcd_DelayUs( (unsigned char)data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "nsleep") == 0)
+	{
+		if ( argc < 3 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		lcd_DelayNs( (unsigned char)data );
+		return 0;
+	}
+
+	if (strcmp(cmd, "gpio") == 0)
+	{
+		if ( argc < 4 )
+			goto usage;
+		data = (unsigned short)simple_strtoul( argv[2], NULL, 10 );
+		if ( simple_strtoul( argv[3], NULL, 16 ) == 0 )
+			lcd_GpioSet( (int)data, 0 );
+		else
+			lcd_GpioSet( (int)data, 1 );
+		return 0;
+	}
+
+
+  usage:
+
+	cmd_usage(cmdtp);
+
+	return 1;
+}
+
+U_BOOT_CMD( lcd, CONFIG_SYS_MAXARGS, 1, do_lcd,
+	"lcd sub-system",
+	"info                  - show LCD devices info\n"
+	"lcd init                  - initialize\n"
+	"lcd reg_get  <reg>        - get register, hex-decimal\n"
+	"lcd reg_set  <reg> <val>  - set register, hex-decimal\n"
+	"lcd color    <color>      - draw full screen solid color, hex-decimal\n"
+	"lcd rect     <x0> <y0> <x1> <y1> <color>\n"
+    "                          - draw rectangle solid color\n"
+	"                          -   x, y decimal, color hex-decimal\n"
+	"lcd gradient <color> [color2]\n"
+	"                          - draw full screen gradient color, hex-decimal\n"
+	"lcd grect    <x0> <y0> <x1> <y1> <color> [color2]\n"
+    "                          - draw rectangle solid color\n"
+	"                          -   x, y decimal, color hex-decimal\n"
+	"lcd bl       <level>      - backlight level, decimal\n"
+	"lcd led      <level>      - LED level, decimal\n"
+	"lcd gpio     <gpio> <0|1> - GPIO, decimal\n"
+	"lcd msleep   <msec>       - sleep msec, milli-seconds\n"
+	"lcd usleep   <usec>       - sleep usec, micro-seconds\n"
+	"lcd nsleep   <nsec>       - sleep nsec, nano-seconds\n"
+);
+
+
+#endif // CONFIG_DRIVER_VR9 ctc LCD
+
diff --git a/common/upgrade.c b/common/upgrade.c
index 4931524..6b2f0c7 100644
--- a/common/upgrade.c
+++ b/common/upgrade.c
@@ -75,6 +75,7 @@ extern int do_reset (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
 #endif
 
 static int rootfs_programming=0;
+static int kernel_programming=0;
 
 int program_img(ulong srcAddr,int srcLen,ulong destAddr)
 {
@@ -128,7 +129,7 @@ int program_img(ulong srcAddr,int srcLen,ulong destAddr)
 		  opts.length = rootfs_size;
 		  opts.jffs2  = 1;
 		  opts.quiet  = 0;
-		  printf("erasing 0x%08x size 0x%08x\n",destAddr,srcLen);
+		  printf("erasing 0x%08x size 0x%08x\n",destAddr, rootfs_size);
 		  ret = nand_erase_opts(&nand_info[0], &opts);
 		  printf("erase %s\n", ret ? "ERROR" : "OK");
 	
@@ -139,8 +140,35 @@ int program_img(ulong srcAddr,int srcLen,ulong destAddr)
 	  
 	   rootfs_programming = 0;		
    }else{
-     u64 srcLen64=(u64)srcLen;
-     nand_write_partial(&nand_info[0], destAddr, &srcLen64, (u_char*)srcAddr);
+		//u64 srcLen64=(u64)srcLen;
+     	//nand_write_partial(&nand_info[0], destAddr, &srcLen64, (u_char*)srcAddr);
+     	
+		int ret;
+		ulong kernel_size; 
+ 		u64 srcLen64=(u64)srcLen;
+		nand_erase_options_t opts;
+
+		if (kernel_programming == 1) {
+			kernel_size = simple_strtoul((char *)getenv("f_kernel_size"),NULL, 16);
+			kernel_programming = 0;
+		}
+		else {
+			kernel_size = srcLen;
+		}
+	
+		memset(&opts, 0, sizeof(opts));
+		opts.offset = destAddr;
+		opts.length = kernel_size;
+		opts.jffs2  = 0;
+		opts.quiet  = 0;
+		printf("erasing 0x%08x size 0x%08x\n",destAddr, kernel_size);
+		ret = nand_erase_opts(&nand_info[0], &opts);
+		printf("erase %s\n", ret ? "ERROR" : "OK");
+	
+	    printf("writing to 0x%08x size 0x%08x\n",destAddr,srcLen);
+	    ret = nand_write_skip_bad(&nand_info[0], destAddr, &srcLen64,
+							  (u_char *)srcAddr);
+	    printf("write 0x%08x bytes: %s\n", srcLen, ret ? "ERROR" : "OK");
    }
  #else
    nand_flash_write(srcAddr, destAddr, srcLen);       
@@ -258,6 +286,7 @@ int upgrade_img(ulong srcAddr, ulong srcLen, char *imgName, enum ExpandDir dir,
 	ulong nextStartAddr,preEndAddr;
 	image_header_t *pimg_header = NULL;
 	char *srcData_Copy=NULL;
+	ulong org_len;
 
 	memset(strimg_addr,0x00,sizeof(strimg_addr));
 	sprintf(strimg_addr,"f_%s_addr",imgName);
@@ -304,6 +333,7 @@ int upgrade_img(ulong srcAddr, ulong srcLen, char *imgName, enum ExpandDir dir,
 #endif
 	}	
     if (!strcmp(imgName,"rootfs")) rootfs_programming=1;
+    if (!strcmp(imgName,"kernel")) kernel_programming=1;
 	if (dir == FORWARD) {
 		if (img_addr + srcLen > nextStartAddr) {
 			printf("Cannot upgrade image %s.\n Error : From start address 0x%08lx, the new size %d is bigger than begining of next image/end of the partition 0x%08lx\n",strimg_addr,img_addr,srcLen,nextStartAddr);
@@ -333,11 +363,25 @@ int upgrade_img(ulong srcAddr, ulong srcLen, char *imgName, enum ExpandDir dir,
 			return 1;
 		}
 	} else {
+
+		org_len = srcLen;
+		
+		if ( (srcLen % nand_info[0].writesize) != 0) {	// Arcadyan, check alignment
+			int align = 0;
+			align = nand_info[0].writesize - (srcLen % nand_info[0].writesize);
+			printf("adjust size: from 0x%08x to 0x%08x\n", srcLen, srcLen + align);
+			
+			srcLen  += align;
+		}
+		  		
 		if (program_img(srcAddr,srcLen,img_addr)) {
 			return 1;
 		}
 	}
-	
+
+// Do we really need these environment variables?
+#if 0
+	// update f_rootfs_size or f_kernel_size	
 	memset(newimg_para,0x00,sizeof(newimg_para));
 	sprintf(newimg_para,"0x%08lx",srcLen);
 	setenv(strimg_size,newimg_para);
@@ -351,15 +395,23 @@ int upgrade_img(ulong srcAddr, ulong srcLen, char *imgName, enum ExpandDir dir,
 	if (strcmp(strimg_addr,"f_kernel_addr") == 0) {
 		setenv("kernel_addr",newimg_para);
 		upgrade_debug_printf("New variables kernel_addr = %s set\n",newimg_para);
-	}
 
+		memset(newimg_para,0x00,sizeof(newimg_para));	// Arcadyan
+		sprintf(newimg_para,"0x%08lx", org_len);
+		setenv("f_kernel_size_org",newimg_para);		
+	}
+	// update f_rootfs_addr or f_kernel_addr
 	if (strcmp(strimg_addr,"f_rootfs_addr") == 0) {
 		memset(newimg_para,0x00,sizeof(newimg_para));
 		sprintf(newimg_para,"0x%08lx",img_addr + srcLen);
 		setenv("f_rootfs_end",newimg_para);
 		upgrade_debug_printf("New variables kernel_addr = %s set\n",newimg_para);
+		
+		memset(newimg_para,0x00,sizeof(newimg_para));	// Arcadyan
+		sprintf(newimg_para,"0x%08lx", org_len);
+		setenv("f_rootfs_size_org",newimg_para);		
 	}
-
+#endif
 	if (bSaveEnv) {
 		saveenv();
 #ifdef UBOOT_ENV_COPY
diff --git a/drivers/net/vr9_sw.c b/drivers/net/vr9_sw.c
index 692ab54..325e535 100755
--- a/drivers/net/vr9_sw.c
+++ b/drivers/net/vr9_sw.c
@@ -48,6 +48,10 @@
 #include <lzma/LzmaDec.h>
 #include <lzma/LzmaTools.h>
 
+#ifdef CONFIG_DRIVER_VR9 /* ctc for RTL8367RB */
+#include <rtk_error.h>
+#include <rtl8367b_reg.h>
+#endif
 
 #define TX_CHAN_NO   1
 #define RX_CHAN_NO   0
@@ -137,15 +141,17 @@ int vr9_switch_init(struct eth_device *dev, bd_t * bis);
 int vr9_switch_send(struct eth_device *dev, volatile void *packet,int length);
 int vr9_switch_recv(struct eth_device *dev);
 void vr9_switch_halt(struct eth_device *dev);
-static void vr9_sw_chip_init();
+static void vr9_sw_chip_init(void);
 static void vr9_dma_init(void);
 
-u16 vr9_mdio_init()
+u16 vr9_mdio_init(void)
 {
     *BSP_GPIO_P2_ALTSEL0 = *BSP_GPIO_P2_ALTSEL0 | (0xc00);
     *BSP_GPIO_P2_ALTSEL1 = *BSP_GPIO_P2_ALTSEL1 & ~(0xc00);
     *BSP_GPIO_P2_DIR = *BSP_GPIO_P2_DIR  | 0x800;
     *BSP_GPIO_P2_OD = *BSP_GPIO_P2_OD | 0xc00;
+
+		return 0;
 }
 	
 u16 vr9_mdio_read(u8 phyaddr, u8 phyreg)
@@ -187,36 +193,37 @@ void vr9_mdio_write(u8 phyaddr, u8 phyreg, u16 data)
 
 int vr9_eth_initialize(bd_t * bis)
 {
-	struct eth_device *dev;
+		struct eth_device *dev;
 
-	if (!(dev = (struct eth_device *) malloc (sizeof *dev)))
-        {
-                printf("Failed to allocate memory\n");
-                return 0;
-        }
-        memset(dev, 0, sizeof(*dev));
+		if(!(dev = (struct eth_device *) malloc (sizeof *dev)))
+    {
+        printf("Failed to allocate memory\n");
+        return 0;
+    }
 
-        asm("sync");
-        vr9_sw_chip_init();
-        asm("sync");
-	/***************/
-	sprintf(dev->name, "vr9 Switch");
-	dev->init = vr9_switch_init;
-	dev->halt = vr9_switch_halt;
-	dev->send = vr9_switch_send;
-	dev->recv = vr9_switch_recv;
+		memset(dev, 0, sizeof(*dev));
 
-	eth_register(dev);
+    asm("sync");
+    vr9_sw_chip_init();
+    asm("sync");
+		
+		/***************/
+		sprintf(dev->name, "vr9 Switch");
+		dev->init = vr9_switch_init;
+		dev->halt = vr9_switch_halt;
+		dev->send = vr9_switch_send;
+		dev->recv = vr9_switch_recv;
 
+		eth_register(dev);
 
-	return 1;
+		return 1;
 }
 
 int vr9_switch_init(struct eth_device *dev, bd_t * bis)
 {
-	int i;
-	tx_num=0;
-	rx_num=0;
+		int i;
+		tx_num=0;
+		rx_num=0;
 
 		/* Reset DMA
 		 */
@@ -325,7 +332,7 @@ Done:
 int vr9_switch_recv(struct eth_device *dev)
 {
 
-	int                    length  = 0;
+			int length  = 0;
 	dma_rx_descriptor_t * rx_desc;
 	int datalen, cache_linesize;
 	for (;;)
@@ -443,59 +450,66 @@ void vr9_sw_gpio_configure(u8 port, u8 mode)
 	}
 }
 
-void config_mdio_gpio()
+void config_mdio_gpio(void)
 {
 	  *BSP_GPIO_P2_ALTSEL0 = *BSP_GPIO_P2_ALTSEL0 | (0xc00);
     *BSP_GPIO_P2_ALTSEL1 = *BSP_GPIO_P2_ALTSEL1 & ~(0xc00);
     *BSP_GPIO_P2_DIR     |= 0xc00;
     *BSP_GPIO_P2_OD      |= 0xc00;
-	
-	
 }
 
-void config_port()
+void config_port(void)
 {
-      int i;
+    int i;
+		
 	  for(i=0;i<7;i++)
 	    vr9_port[i].on=0;
 
 #ifdef CONFIG_VR9_SW_PORT_0
-        vr9_port[0].on=1;
-        vr9_port[0].miimode=CONFIG_VR9_SW_PORT0_MIIMODE;
-        vr9_port[0].miirate=CONFIG_VR9_SW_PORT0_MIIRATE;
+    vr9_port[0].on=1;
+    vr9_port[0].miimode=CONFIG_VR9_SW_PORT0_MIIMODE;
+    vr9_port[0].miirate=CONFIG_VR9_SW_PORT0_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_1
-        vr9_port[1].on=1;
+    vr9_port[1].on=1;
 		vr9_port[1].miimode=CONFIG_VR9_SW_PORT1_MIIMODE;
 		vr9_port[1].miirate=CONFIG_VR9_SW_PORT1_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_2
-	    vr9_port[2].on=1;
+	  vr9_port[2].on=1;
 		vr9_port[2].miimode=CONFIG_VR9_SW_PORT2_MIIMODE;
 		vr9_port[2].miirate=CONFIG_VR9_SW_PORT2_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_3
-        vr9_port[3].on=1;
+    vr9_port[3].on=1;
 		vr9_port[3].miimode=CONFIG_VR9_SW_PORT3_MIIMODE;
 		vr9_port[3].miirate=CONFIG_VR9_SW_PORT3_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_4
-	    vr9_port[4].on=1;
+	  vr9_port[4].on=1;
 		vr9_port[4].miimode=CONFIG_VR9_SW_PORT4_MIIMODE;
 		vr9_port[4].miirate=CONFIG_VR9_SW_PORT4_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_5a
-        vr9_port[5].on=1;
+    vr9_port[5].on=1;
 		vr9_port[5].miimode=CONFIG_VR9_SW_PORT5a_MIIMODE;
 		vr9_port[5].miirate=CONFIG_VR9_SW_PORT5a_MIIRATE;
 #endif
 #ifdef CONFIG_VR9_SW_PORT_5b
-	    vr9_port[5].on=1;
+	  vr9_port[5].on=1;
 		vr9_port[5].miimode=CONFIG_VR9_SW_PORT5b_MIIMODE;
 		vr9_port[5].miirate=CONFIG_VR9_SW_PORT5b_MIIRATE;
 #endif
-											  
 
+		#if 0
+	  for(i=0;i<7;i++)
+	  {
+				printf("[%s:%d] vr9_port[%d].on=%d\n",__func__,__LINE__,i,vr9_port[i].on);
+				printf("[%s:%d] vr9_port[%d].miimode=0x%x\n",__func__,__LINE__,i,vr9_port[i].miimode);
+				printf("[%s:%d] vr9_port[%d].miirate=0x%x\n\n",__func__,__LINE__,i,vr9_port[i].miirate);
+		}
+		#endif
+											  
     return;
 }
 
@@ -503,15 +517,15 @@ void config_port()
 /** return value: 0 success, 1 fail*************************/
 int get_gphy_firmware(u32 dst, u32 src)
 {
-     int result = 1;
-     int srcLen;
-	 u8* load = (unsigned char*)0xa0140000;
-	 ulong unc_len = 0;
-	 u8* image_start = NULL;
-	 ulong image_len = 0;
-     image_header_t *pimg_header = NULL;
-	 int fw_version = 1; /*1->version 1; 2->version 2*/
-	 int fw_type = 0; /*0 FE, 1 GE*/
+    int result = 1;
+    //int srcLen;
+	 	u8* load = (unsigned char*)0xa0140000;
+	 	ulong unc_len = 0;
+	 	u8* image_start = NULL;
+	 	ulong image_len = 0;
+    image_header_t *pimg_header = NULL;
+	 	int fw_version = 1; /*1->version 1; 2->version 2*/
+	 	int fw_type = 0; /*0 FE, 1 GE*/
 	
      pimg_header = (image_header_t *)src;	
      while(1){ 
@@ -579,30 +593,29 @@ exit:
 }
 
 
-static void vr9_sw_chip_init()
+static void vr9_sw_chip_init(void)
 {
-      int i,num;
+    int i,num;
 	  u32 fw_addr,gphy_reset_value,fw_src_addr; 
-	  u8 interface_mode;
+	  //u8 interface_mode;
 	 
-#ifdef CONFIG_ENABLE_DCDC
+		#ifdef CONFIG_ENABLE_DCDC
     config_dcdc(0x7f);
-#else // ctc
-	REG8(PDI_DCDC_CONF_TEST_ANA) = 0x78;
-	REG8(PDI_DCDC_CONF_TEST_DIG) = 0x00;
-	REG8(PDI_DCDC_GENERAL) = 0x88;
-#endif
+		#else // ctc
+		REG8(PDI_DCDC_CONF_TEST_ANA) = 0x78;
+		REG8(PDI_DCDC_CONF_TEST_DIG) = 0x00;
+		REG8(PDI_DCDC_GENERAL) = 0x88;
+		#endif
 	 	
-#if (CONFIG_VR9_SW_PORT_2 | CONFIG_VR9_SW_PORT_3 | CONFIG_VR9_SW_PORT_4 | CONFIG_VR9_SW_PORT_5b)
-#ifdef CONFIG_VR9_GPHY_DEBUG
+		#if (CONFIG_VR9_SW_PORT_2 | CONFIG_VR9_SW_PORT_3 | CONFIG_VR9_SW_PORT_4 | CONFIG_VR9_SW_PORT_5b)
+		#ifdef CONFIG_VR9_GPHY_DEBUG
 
     /*GPHY0_UTX*/
     REG32(BSP_GPIO_P0_ALTSEL0)|=1<<13;
     REG32(BSP_GPIO_P0_ALTSEL1)|=1<<13;
     REG32(BSP_GPIO_P0_DIR)|=1<<13;
     
-
-      /*GPHY1_UTX, p1.14*/
+    /*GPHY1_UTX, p1.14*/
 	  REG32(BSP_GPIO_P1_ALTSEL0)|=1<<14;
 	  REG32(BSP_GPIO_P1_ALTSEL1)|=1<<14;
 	  REG32(BSP_GPIO_P1_DIR)|=1<<14;
@@ -613,7 +626,7 @@ static void vr9_sw_chip_init()
 	  REG32(BSP_GPIO_P1_ALTSEL1)|=1;
 	  REG32(BSP_GPIO_P1_DIR)&=~1;
 
-      /*TDI p2.1*/
+    /*TDI p2.1*/
 	  REG32(BSP_GPIO_P2_ALTSEL0) &=~1;
 	  REG32(BSP_GPIO_P2_ALTSEL1)|=1;
 	  REG32(BSP_GPIO_P2_DIR)&=~1;
@@ -634,7 +647,7 @@ static void vr9_sw_chip_init()
 	  REG32(BSP_GPIO_P2_ALTSEL1)|=1<<8;
 	  REG32(BSP_GPIO_P2_DIR) &=~(1<<8);
 	  
-#if 0
+		#if 0
 	  /*Configure LED for GPHY*/
 	  /*gpio2, p0.2, gphy led 2*/
 	  REG32(BSP_GPIO_P0_ALTSEL0)|=1<<2;
@@ -671,11 +684,10 @@ static void vr9_sw_chip_init()
     REG32(BSP_GPIO_P2_ALTSEL1)|=1<<15;
     REG32(BSP_GPIO_P2_DIR)|=1<<15;
     REG32(BSP_GPIO_P2_DIR)|=1<<15;
-#endif
-#endif
+		#endif  // #if 0
+		#endif
 
-    
-#ifdef CONFIG_GPHY_LED_GPIO
+		#ifdef CONFIG_GPHY_LED_GPIO
     /*GPIO 5 , 7 , 44 , 45 config as GPHY LED , and GPIO7 is CFRAME pin*/ 
     *BSP_GPIO_P0_ALTSEL0 &= (~0x20);
     *BSP_GPIO_P0_ALTSEL1 |= (0x20);
@@ -694,32 +706,32 @@ static void vr9_sw_chip_init()
     *BSP_GPIO_P2_ALTSEL1 |=0x2000;
     *BSP_GPIO_P2_DIR |= (0x2000);
     *BSP_GPIO_P2_DIR |= (0x2000);  
-#else
-  #ifdef CONFIG_GPHY_SHIFT_REGISTER /* ctc */
+		#else
+  	#ifdef CONFIG_GPHY_SHIFT_REGISTER /* ctc */
 	  /*enable led for gphy link status*/
 	  *(BSP_GPIO_P0_DIR) = (*BSP_GPIO_P0_DIR)|(0x070);
 	  *(BSP_GPIO_P0_ALTSEL0) = ((*BSP_GPIO_P0_ALTSEL0)|(0x70));
 	  *(BSP_GPIO_P0_ALTSEL1) = (*BSP_GPIO_P0_ALTSEL1)&(~0x70);
 	  *BSP_GPIO_P0_OD = (*BSP_GPIO_P0_OD)|0x70;
 							  
-      *BSP_LED_CON1 = 0x81a38007; // all LEDs enable, software update mode, FPI clock for shifting, no delay
+    *BSP_LED_CON1 = 0x81a38007; // all LEDs enable, software update mode, FPI clock for shifting, no delay
 	  *BSP_LED_CON0 = 0x3f000000; // software update
-  #endif
-#endif					 
+  	#endif
+		#endif					 
 
 	  asm("sync");
+		
     /*turn on ephy, switch and dma in PMU*/
     *BSP_PMU_PWDCR = 0x061592be;
-     mdelay(100);
+    mdelay(100);
 
     *BSP_RCU_RST_REQ = 0xa0200300;
-
 	  mdelay(100);
 	  
 	  /*Turn on switch macro*/  
     REG32(VR9_ETHSW_GLOB_CTRL) |= (1<<15);
     
-#if defined(CONFIG_VR9_CRYSTAL_6M) || defined(CONFIG_VR9_CRYSTAL_CPLD)
+		#if defined(CONFIG_VR9_CRYSTAL_6M) || defined(CONFIG_VR9_CRYSTAL_CPLD)
 	  /*Config GPIO3 clock,CLK_OUT2 used as input*/
 	  REG32(BSP_GPIO_P0_ALTSEL0)|=1<<3;
 	  REG32(BSP_GPIO_P0_ALTSEL1)&=~(1<<3);
@@ -727,139 +739,144 @@ static void vr9_sw_chip_init()
 	  
 	  /*Config GPHY clock mux to take clock from GPIO3*/
 	  REG32(BSP_IF_CLK)=0x16e00010;
-#elif defined(CONFIG_VR9_CRYSTAL_25M)
+		#elif defined(CONFIG_VR9_CRYSTAL_25M)
     REG32(BSP_IF_CLK)=0x16e00006;
-#else /*36Mhz crystal clock*/
-    REG32(BSP_IF_CLK)=0x16e00008; 
-      
-#endif
+		#else /*36Mhz crystal clock*/
+    REG32(BSP_IF_CLK)=0x16e00008;   
+		#endif
     
-      REG32(BSP_GPHY1_Cfg)=0x1fe70000;
-      REG32(BSP_GPHY0_Cfg)=0x1fe70000;/*gphy0 config for 25Mhz input clock only*/
-	  mdelay(1);
-	  asm("sync");
-	  fw_addr=0xa0200000;
-#ifdef CONFIG_VR9_GPHY_FW_EMBEDDED	  
-      fw_src_addr = CONFIG_VR9_GPHY_FW_ADDR;
+    REG32(BSP_GPHY1_Cfg)=0x1fe70000;
+    REG32(BSP_GPHY0_Cfg)=0x1fe70000;/*gphy0 config for 25Mhz input clock only*/
 
+		mdelay(1);
+
+		asm("sync");
+	  fw_addr=0xa0200000;
+		#ifdef CONFIG_VR9_GPHY_FW_EMBEDDED	  
+    fw_src_addr = CONFIG_VR9_GPHY_FW_ADDR;
 	  //memcpy(fw_addr, CONFIG_VR9_GPHY_FW_ADDR, 65536); 
-#endif	 
-#ifdef CONFIG_VR9_EXTERN_GPHY_FW_ADDR
- #ifdef CONFIG_BOOT_FROM_NOR
-       fw_src_addr = CONFIG_VR9_EXTERN_GPHY_FW_ADDR;
- #elif defined(CONFIG_BOOT_FROM_NAND)
-      {
-	   nand_info_t *nand = &nand_info[0];
-	   u64 size=65536;
-	   fw_src_addr = 0xa0120000;
-       nand_read_skip_bad(nand, CONFIG_VR9_EXTERN_GPHY_FW_ADDR, &size,(u_char *)fw_src_addr);
-      }
- #elif defined(CONFIG_BOOT_FROM_SPI)
-      {
+		#endif	 
+
+		#ifdef CONFIG_VR9_EXTERN_GPHY_FW_ADDR
+ 		#ifdef CONFIG_BOOT_FROM_NOR
+    fw_src_addr = CONFIG_VR9_EXTERN_GPHY_FW_ADDR;
+ 		#elif defined(CONFIG_BOOT_FROM_NAND)
+    {
+	   		nand_info_t *nand = &nand_info[0];
+	   		u64 size=65536;
+	   		fw_src_addr = 0xa0120000;
+       	nand_read_skip_bad(nand, CONFIG_VR9_EXTERN_GPHY_FW_ADDR, &size,(u_char *)fw_src_addr);
+    }
+ 		#elif defined(CONFIG_BOOT_FROM_SPI)
+    {
         static struct spi_flash *flash;
-		fw_src_addr = 0xa0110000;
-	    flash = spi_flash_probe(0, CONFIG_ENV_SPI_CS,
-			             CONFIG_SF_DEFAULT_SPEED, CONFIG_SF_DEFAULT_MODE);
-	    spi_flash_read(flash, CONFIG_VR9_EXTERN_GPHY_FW_ADDR, 65536, (void*)fw_src_addr);					 
-
+				fw_src_addr = 0xa0110000;
+	    	flash = spi_flash_probe(0, CONFIG_ENV_SPI_CS,CONFIG_SF_DEFAULT_SPEED, CONFIG_SF_DEFAULT_MODE);
+	    	spi_flash_read(flash, CONFIG_VR9_EXTERN_GPHY_FW_ADDR, 65536, (void*)fw_src_addr);					 
 	  }
- #endif 
-#endif
+ 		#endif 
+		#endif
 
-      if(get_gphy_firmware(fw_addr,fw_src_addr)){
-	           printf("cannnot find gphy firmware!\n");
-	    }
+    if(get_gphy_firmware(fw_addr,fw_src_addr)){
+           printf("cannnot find gphy firmware!\n");
+    }
 					 
 	  mdelay(100);
-	  /* step - 1 */
+
+		/* step - 1 */
 	  /* program fw base address */
 	  REG32(0xBF203020) = 0x200000;  // address inside DDR1/2
 	  REG32(0xBF203068) = 0x200000;  // address inside DDR1/2
-      REG32(0xBF203010) = 0xa0000021;
+    REG32(0xBF203010) = 0xa0000021;
 	  mdelay(100);
-	  /* step - 2 */
 
+		/* step - 2 */
 	  // Bring GPHY-0/GFS-0 GPHY-1/GFS-1 out of reset
 	  //REG32(0xBF203010) = 0x0;
-#ifdef CONFIG_POWER_DOWN_REGULATOR	 
-      *BSP_RCU_RST_REQ = 0x04000000;
-#else
-      *BSP_RCU_RST_REQ = 0x0;
-#endif	  
-	  
+		#ifdef CONFIG_POWER_DOWN_REGULATOR	 
+    *BSP_RCU_RST_REQ = 0x04000000;
+		#else
+    *BSP_RCU_RST_REQ = 0x0;
+		#endif	  
 	  mdelay(100); /*wait 200ms*/
-      REG32(BSP_SWITCH_PMAC_RX_IPG) = 0x8b;
-#endif
+
+		REG32(BSP_SWITCH_PMAC_RX_IPG) = 0x8b;
+		#endif
 
 	  /*Enable PHY polling for each port*/		
 	  REG32(VR9_ETHSW_MDC_CFG_0)=0x3f;
 	  /*2.5 MHz MDIO clock*/
-#if defined(CONFIG_VR9_CRYSTAL_6M) || defined(CONFIG_VR9_CRYSTAL_CPLD)
-      REG32(VR9_ETHSW_MDC_CFG_1)=0x00008102;
-#else
-      REG32(VR9_ETHSW_MDC_CFG_1)=0x00008105;
-#endif
-	  udelay(100);
+		#if defined(CONFIG_VR9_CRYSTAL_6M) || defined(CONFIG_VR9_CRYSTAL_CPLD)
+    REG32(VR9_ETHSW_MDC_CFG_1)=0x00008102;
+		#else
+    REG32(VR9_ETHSW_MDC_CFG_1)=0x00008105;
+		#endif
+		udelay(100);
+		
 /**************************************************/	  
 /***********configure phy now**********************/
 /**************************************************/
-	 asm("sync");
-	 /*config mdio gpio for external gphy only*/ 
+		asm("sync");
+
+	 	/*config mdio gpio for external gphy only*/ 
 	  config_mdio_gpio();
-	 /*Configure port 2,4 phy address and auto-polling mode now*/
+
+	 	/*Configure port 2,4 phy address and auto-polling mode now*/
 	  REG32(VR9_ETHSW_PHY_ADDR_2) = 0x1811;
-      REG32(VR9_ETHSW_PHY_ADDR_3) = 0x1812;
-      REG32(VR9_ETHSW_PHY_ADDR_4) = 0x1813;
-#ifdef CONFIG_VR9_SW_PORT_5b    
-      REG32(VR9_ETHSW_PHY_ADDR_5) = 0x1814;  
-#elif CONFIG_VR9_SW_PORT_5a
-      REG32(VR9_ETHSW_PHY_ADDR_5) = 0x1805;  
-#endif  
+    REG32(VR9_ETHSW_PHY_ADDR_3) = 0x1812;
+    REG32(VR9_ETHSW_PHY_ADDR_4) = 0x1813;
+		#ifdef CONFIG_VR9_SW_PORT_5b    
+    REG32(VR9_ETHSW_PHY_ADDR_5) = 0x1814;  
+		#elif CONFIG_VR9_SW_PORT_5a
+    REG32(VR9_ETHSW_PHY_ADDR_5) = 0x1805;  
+		#endif  
      
-	if(((REG32(BSP_MPS_CHIPID)>>28) & 0x7) ==0x1){
-/*****disable "clear on read" ability for link status bits**/
-    vr9_mdio_write(0x11,0xd,0x1F);
-    vr9_mdio_write(0x11,0xe,0x1FF);
-    vr9_mdio_write(0x11,0xd,0x401F);
-    vr9_mdio_write(0x11,0xe,0x1);
-    vr9_mdio_write(0x11,0x14,0x8106);
-    vr9_mdio_write(0x11,0x0,0x8000);
-
-    vr9_mdio_write(0x13,0xd,0x1F);
-    vr9_mdio_write(0x13,0xe,0x1FF);
-    vr9_mdio_write(0x13,0xd,0x401F);
-    vr9_mdio_write(0x13,0xe,0x1);
-    vr9_mdio_write(0x13,0x14,0x8106);
-    vr9_mdio_write(0x13,0x0,0x8000);
-
-    vr9_mdio_write(0x0,0xd,0x1F);
-    vr9_mdio_write(0x0,0xe,0x1FF);
-    vr9_mdio_write(0x0,0xd,0x401F);
-    vr9_mdio_write(0x0,0xe,0x1);
-    vr9_mdio_write(0x0,0x14,0x8106);
-    vr9_mdio_write(0x0,0x0,0x8000);
-
-    vr9_mdio_write(0x1,0xd,0x1F);
-    vr9_mdio_write(0x1,0xe,0x1FF);
-    vr9_mdio_write(0x1,0xd,0x401F);
-    vr9_mdio_write(0x1,0xe,0x1);
-    vr9_mdio_write(0x1,0x14,0x8106);
-    vr9_mdio_write(0x1,0x0,0x8000);
-
-    vr9_mdio_write(0x5,0xd,0x1F);
-	vr9_mdio_write(0x5,0xe,0x1FF);
-	vr9_mdio_write(0x5,0xd,0x401F);
-	vr9_mdio_write(0x5,0xe,0x1);
-	vr9_mdio_write(0x5,0x14,0x8106);
-	vr9_mdio_write(0x5,0x0,0x8000);
-}
-
-/***enable sticky bit handling for external phy*********/
+		if(((REG32(BSP_MPS_CHIPID)>>28) & 0x7) ==0x1)
+		{
+				/* v1 */
+				/*****disable "clear on read" ability for link status bits**/
+		    vr9_mdio_write(0x11,0xd,0x1F);
+		    vr9_mdio_write(0x11,0xe,0x1FF);
+		    vr9_mdio_write(0x11,0xd,0x401F);
+		    vr9_mdio_write(0x11,0xe,0x1);
+		    vr9_mdio_write(0x11,0x14,0x8106);
+		    vr9_mdio_write(0x11,0x0,0x8000);
+
+		    vr9_mdio_write(0x13,0xd,0x1F);
+		    vr9_mdio_write(0x13,0xe,0x1FF);
+		    vr9_mdio_write(0x13,0xd,0x401F);
+		    vr9_mdio_write(0x13,0xe,0x1);
+		    vr9_mdio_write(0x13,0x14,0x8106);
+		    vr9_mdio_write(0x13,0x0,0x8000);
+
+		    vr9_mdio_write(0x0,0xd,0x1F);
+		    vr9_mdio_write(0x0,0xe,0x1FF);
+		    vr9_mdio_write(0x0,0xd,0x401F);
+		    vr9_mdio_write(0x0,0xe,0x1);
+		    vr9_mdio_write(0x0,0x14,0x8106);
+		    vr9_mdio_write(0x0,0x0,0x8000);
+
+		    vr9_mdio_write(0x1,0xd,0x1F);
+		    vr9_mdio_write(0x1,0xe,0x1FF);
+		    vr9_mdio_write(0x1,0xd,0x401F);
+		    vr9_mdio_write(0x1,0xe,0x1);
+		    vr9_mdio_write(0x1,0x14,0x8106);
+		    vr9_mdio_write(0x1,0x0,0x8000);
+
+		    vr9_mdio_write(0x5,0xd,0x1F);
+				vr9_mdio_write(0x5,0xe,0x1FF);
+				vr9_mdio_write(0x5,0xd,0x401F);
+				vr9_mdio_write(0x5,0xe,0x1);
+				vr9_mdio_write(0x5,0x14,0x8106);
+				vr9_mdio_write(0x5,0x0,0x8000);
+		}
+
+		/***enable sticky bit handling for external phy*********/
     vr9_mdio_write(0x0,0x14,0x8102);
     vr9_mdio_write(0x1,0x14,0x8102);
     vr9_mdio_write(0x5,0x14,0x8102);
 
-/**advertise on half and full duplex mode, multi device*/
+		/**advertise on half and full duplex mode, multi device*/
     vr9_mdio_write(0x0,0x9,0x700);
     vr9_mdio_write(0x1,0x9,0x700);
     vr9_mdio_write(0x5,0x9,0x700);
@@ -874,33 +891,36 @@ static void vr9_sw_chip_init()
 /*************************************/
 	  config_port();
   
-	  for(num=0;num<7;num++){
-        if(vr9_port[num].on){
-        //printf("port%d init!\n",num);
-		    REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= (1<<VR9_ETHSW_MII_CFG_RES);  /*Hardware reset */
-        for (i=0; i<100;i++)
-          udelay(10);
-
-        /* set xMII port interface clock rate */
-        REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) &= ~(0x7<<VR9_ETHSW_MII_CFG_MIIRATE);
-        REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= ((vr9_port[num].miirate & 0x7)<<VR9_ETHSW_MII_CFG_MIIRATE);
-															 
-        /*xMII  interface mode */
-        //interface_mode = 4;
-	    REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) &= ~(0xf<<VR9_ETHSW_MII_CFG_MIIMODE);
-	    REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= ((vr9_port[num].miimode & 0xf)<<VR9_ETHSW_MII_CFG_MIIMODE);
-						  
-        /*xMII  interface enable*/
-	    REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= (1<<VR9_ETHSW_MII_CFG_EN);
-	    
-		    
-        REG16(VR9_ETHSW_MAC_CTRL_0 + ( num * 0x30))= 0x180; /*auto MII/GMII interface selection, enable padding*/
-        
-        REG16(VR9_ETHSW_MAC_CTRL_2 + ( num * 0x30))= 0x0d; /*JUMBO configured value, including any number of VLAN tags*/
-       }
-     }
-    asm("sync");  
-        // Apply workaround for buffer congestion
+	  for(num=0;num<7;num++)
+		{
+        if(vr9_port[num].on)
+				{
+        		//printf("port%d init!\n",num);
+				    REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= (1<<VR9_ETHSW_MII_CFG_RES);  /*Hardware reset */
+		        for (i=0; i<100;i++)
+		          udelay(10);
+
+		        /* set xMII port interface clock rate */
+		        REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) &= ~(0x7<<VR9_ETHSW_MII_CFG_MIIRATE);
+		        REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= ((vr9_port[num].miirate & 0x7)<<VR9_ETHSW_MII_CFG_MIIRATE);
+																	 
+		        /*xMII  interface mode */
+		        //interface_mode = 4;
+			    	REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) &= ~(0xf<<VR9_ETHSW_MII_CFG_MIIMODE);
+			    	REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= ((vr9_port[num].miimode & 0xf)<<VR9_ETHSW_MII_CFG_MIIMODE);
+								  
+		        /*xMII  interface enable*/
+			    	REG32(VR9_ETHSW_MII_CFG_0 + ( num * 8)) |= (1<<VR9_ETHSW_MII_CFG_EN);
+			    
+		        REG16(VR9_ETHSW_MAC_CTRL_0 + ( num * 0x30))= 0x180; /*auto MII/GMII interface selection, enable padding*/
+		        
+		        REG16(VR9_ETHSW_MAC_CTRL_2 + ( num * 0x30))= 0x0d; /*JUMBO configured value, including any number of VLAN tags*/
+       	}
+    }
+
+		asm("sync");  
+
+		// Apply workaround for buffer congestion
 		REG32(VR9_ETHSW_MAC_CTRL_1 + ( 6* 0x30)) |= ((1<< 0x8)); // Short Preamble
 		REG32(VR9_ETHSW_MAC_CTRL_1 + ( 6* 0x30)) &= ~((0xF)); // Setting TX IPG
 		REG32(VR9_ETHSW_MAC_CTRL_1 + ( 6* 0x30)) |= ((0xC));  // to 7 bytes
@@ -911,13 +931,13 @@ static void vr9_sw_chip_init()
 		REG32(VR9_ETHSW_BM_GCTRL) |= (0x01);
 		REG32(VR9_ETHSW_BM_GCTRL) &= (0xFFFE);
 	  #if 1 // ctc
-		REG32(VR9_ETHSW_BM_QUEUE_GCTRL) = (0x00518);
+		REG32(VR9_ETHSW_BM_QUEUE_GCTRL) = (0x0518);
 	  #endif
 
-        /*Fix switch MAC drop bug*/ 
-        REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_KEY_0) = 0xf;
+    /*Fix switch MAC drop bug*/ 
+    REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_KEY_0) = 0xf;
 		REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_VAL_0) = 0x40;
-        REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_ADDR)  = 0x3;
+    REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_ADDR)  = 0x3;
 		REG32(ADR_ETHSW_PCE_PDI_PCE_TBL_CTRL)  = 0x902f;
    
 		REG32(0xBE10a530) = 0x107;
@@ -925,40 +945,2329 @@ static void vr9_sw_chip_init()
 		
 		REG32(VR9_ETHSW_PMAC_HD_CTL) |= (0x1 << 2);	
 
-      /*To avoid the packet drop issue, please set the TXDLY bits of PCDU0, 1 , 5 to 1.*/
-      REG32(VR9_ETHSW_PCDU_0)=(REG32(VR9_ETHSW_PCDU_0) & (~0x7)) | 0x1;
-      REG32(VR9_ETHSW_PCDU_1)=(REG32(VR9_ETHSW_PCDU_1) & (~0x7)) | 0x1;
+    /*To avoid the packet drop issue, please set the TXDLY bits of PCDU0, 1 , 5 to 1.*/
+    REG32(VR9_ETHSW_PCDU_0)=(REG32(VR9_ETHSW_PCDU_0) & (~0x7)) | 0x1;
+    REG32(VR9_ETHSW_PCDU_1)=(REG32(VR9_ETHSW_PCDU_1) & (~0x7)) | 0x1;
 	  REG32(VR9_ETHSW_PCDU_5)=(REG32(VR9_ETHSW_PCDU_5) & (~0x7)) | 0x1;
 	  
 	  /*Switch MACBAT WorkAround*/
 	  /*Set PCE_TBL_KEY_0 (0x447) to 0xF*/
-      REG32(0xBE10911C) = 0xF;
+    REG32(0xBE10911C) = 0xF;
 
-      /*Set PCE_TBL_VAL_0 (0x44D) to 0x40*/
-      REG32(0xBE109134) = 0x40;
+    /*Set PCE_TBL_VAL_0 (0x44D) to 0x40*/
+    REG32(0xBE109134) = 0x40;
 
-      /*Set PCE_TBL_ADDR (0x44E) to 0x3*/
-      REG32(0xBE109138) = 0x3;
+    /*Set PCE_TBL_ADDR (0x44E) to 0x3*/
+    REG32(0xBE109138) = 0x3;
 
-      /*Set PCE_TBL_CTRL (0x44F) to 0x902F*/
-      REG32(0xBE10913C) = 0x902F;
+    /*Set PCE_TBL_CTRL (0x44F) to 0x902F*/
+    REG32(0xBE10913C) = 0x902F;
 
-   
 	  REG32(0xbf203048) = 0xc0;
 	  mdelay(200);
 	  REG32(0xbf203048) = 0x0;
 	  mdelay(200);
-      asm("sync");  
 
-#if (CONFIG_VR9_SW_PORT_2 | CONFIG_VR9_SW_PORT_3 | CONFIG_VR9_SW_PORT_4 | CONFIG_VR9_SW_PORT_5b)
-  #ifdef CONFIG_VR9_SW_PORT2_MII
-     printf("Internal phy(FE) firmware version: 0x%04x\n",vr9_mdio_read(0x11, 0x1e));
-  #else
-     printf("Internal phy(GE) firmware version: 0x%04x\n",vr9_mdio_read(0x11, 0x1e));
-  #endif
-#endif	
-	  vr9_dma_init();
+    asm("sync");  
+
+		#if (CONFIG_VR9_SW_PORT_2 | CONFIG_VR9_SW_PORT_3 | CONFIG_VR9_SW_PORT_4 | CONFIG_VR9_SW_PORT_5b)
+  	#ifdef CONFIG_VR9_SW_PORT2_MII
+    printf("Internal phy(FE) firmware version: 0x%04x\n",vr9_mdio_read(0x11, 0x1e));
+  	#else
+    printf("Internal phy(GE) firmware version: 0x%04x\n",vr9_mdio_read(0x11, 0x1e));
+  	#endif
+		#endif	
+
+		vr9_dma_init();
+	  
+  	#ifdef CONFIG_DRIVER_VR9 /* ctc for RTL8367RB */
+		REG32(VR9_ETHSW_PHY_ADDR_0) = (REG32(VR9_ETHSW_PHY_ADDR_0) & (~0x7E00)) | 0x3200;
+		REG32(VR9_ETHSW_MAC_CTRL_0) = (REG32(VR9_ETHSW_MAC_CTRL_0) & (~0x0003)) | 0x0002;
+		REG32(VR9_ETHSW_MII_CFG_0) = (REG32(VR9_ETHSW_MII_CFG_0) & (~0x007F)) | 0x0044;
+		REG32(VR9_ETHSW_PCDU_0) = (REG32(VR9_ETHSW_PCDU_0) & (~0x0387)) | 0x0003;
+  	#endif
+
+   
+		#if 0  /* Connect with RTL8367RB interface */
+		printf("[%s:%d]VR9_ETHSW_PHY_ADDR_0=0x%x\n\n",__func__,__LINE__,REG32(VR9_ETHSW_PHY_ADDR_0));
+		printf("[%s:%d]VR9_ETHSW_MAC_CTRL_0=0x%x\n",__func__,__LINE__,REG32(VR9_ETHSW_MAC_CTRL_0));
+
+		printf("[%s:%d]VR9_ETHSW_MII_CFG_0=0x%x\n",__func__,__LINE__,REG32(VR9_ETHSW_MII_CFG_0));
+		printf("[%s:%d]VR9_ETHSW_PCDU_0=0x%x\n",__func__,__LINE__,REG32(VR9_ETHSW_PCDU_0));
+		printf("[%s:%d]ADR_ETHSW_MII_PDI_PCDU_0=0x%x\n",__func__,__LINE__,REG32(ADR_ETHSW_MII_PDI_PCDU_0));
+		#endif
+
+}
+
+
+#ifdef CONFIG_DRIVER_VR9 /* ctc for RTL8367RB */
+
+//#define RTK_DBG
+
+typedef unsigned long long		rtk_uint64;
+typedef long long							rtk_int64;
+typedef unsigned int					rtk_uint32;
+typedef int										rtk_int32;
+typedef unsigned short				rtk_uint16;
+typedef short									rtk_int16;
+typedef unsigned char					rtk_uint8;
+typedef char									rtk_int8;
+
+typedef rtk_int32             rtk_api_ret_t;
+typedef rtk_int32             ret_t;
+typedef rtk_uint64            rtk_u_long_t;
+
+typedef rtk_uint32  					rtk_data_t;
+typedef rtk_uint32  					rtk_port_t;        /* port is type */
+
+#ifdef __KERNEL__
+#define rtlglue_printf 	printk
+#else
+#define rtlglue_printf 	printf
+#endif
+#define PRINT						rtlglue_printf
+
+#ifdef NULL
+#undef NULL
+#endif
+
+#ifdef TRUE
+#undef TRUE
+#endif
+
+#ifdef FALSE
+#undef FALSE
+#endif
+
+#define NULL 0
+#define TRUE 1
+#define FALSE 0
+
+#define CONST			const
+
+#define RTK_TOTAL_NUM_OF_WORD_FOR_1BIT_PORT_LIST    1
+
+
+typedef enum rtk_l2_lookup_type_e
+{
+    LOOKUP_MAC = 0,
+    LOOKUP_SIP_DIP,
+    LOOKUP_DIP,
+    LOOKUP_END
+} rtk_l2_lookup_type_t;
+
+typedef struct rtk_portmask_s
+{
+    rtk_uint32  bits[RTK_TOTAL_NUM_OF_WORD_FOR_1BIT_PORT_LIST];
+} rtk_portmask_t;
+
+typedef enum rtk_ext_port_e
+{
+    EXT_PORT_0 = 0,
+    EXT_PORT_1,
+    EXT_PORT_2,
+    EXT_PORT_END
+}rtk_ext_port_t;
+
+typedef enum rtk_mode_ext_e
+{
+    MODE_EXT_DISABLE = 0,
+    MODE_EXT_RGMII,
+    MODE_EXT_MII_MAC,
+    MODE_EXT_MII_PHY,
+    MODE_EXT_TMII_MAC,
+    MODE_EXT_TMII_PHY,
+    MODE_EXT_GMII,
+    MODE_EXT_RMII_MAC,
+    MODE_EXT_RMII_PHY,
+    MODE_EXT_RGMII_33V,
+    MODE_EXT_END
+} rtk_mode_ext_t;
+
+enum EXTMODE
+{
+    EXT_DISABLE = 0,
+    EXT_RGMII,
+    EXT_MII_MAC,
+    EXT_MII_PHY,
+    EXT_TMII_MAC,
+    EXT_TMII_PHY,
+    EXT_GMII,
+    EXT_RMII_MAC,
+    EXT_RMII_PHY,
+    EXT_END
+};
+
+typedef struct  rtl8367b_port_ability_s{
+#ifdef _LITTLE_ENDIAN
+    rtk_uint16 speed:2;
+    rtk_uint16 duplex:1;
+    rtk_uint16 reserve1:1;
+    rtk_uint16 link:1;
+    rtk_uint16 rxpause:1;
+    rtk_uint16 txpause:1;
+    rtk_uint16 nway:1;
+    rtk_uint16 mstmode:1;
+    rtk_uint16 mstfault:1;
+    rtk_uint16 reserve2:2;
+    rtk_uint16 forcemode:1;
+    rtk_uint16 reserve3:3;
+#else
+    rtk_uint16 reserve3:3;
+    rtk_uint16 forcemode:1;
+    rtk_uint16 reserve2:2;
+    rtk_uint16 mstfault:1;
+    rtk_uint16 mstmode:1;
+    rtk_uint16 nway:1;
+    rtk_uint16 txpause:1;
+    rtk_uint16 rxpause:1;
+    rtk_uint16 link:1;
+    rtk_uint16 reserve1:1;
+    rtk_uint16 duplex:1;
+    rtk_uint16 speed:2;
+
+#endif
+}rtl8367b_port_ability_t;
+
+typedef struct  rtk_port_mac_ability_s
+{
+    rtk_uint32 forcemode;
+    rtk_uint32 speed;
+    rtk_uint32 duplex;
+    rtk_uint32 link;
+    rtk_uint32 nway;
+    rtk_uint32 txpause;
+    rtk_uint32 rxpause;
+}rtk_port_mac_ability_t;
+
+
+#define MDC_MDIO_OPERATION
+#define CHIP_RTL8367RB
+
+#define RTK_MAX_NUM_OF_PORT         8
+#define RTK_PORT_ID_MAX            	(RTK_MAX_NUM_OF_PORT-1)
+#define RTK_PHY_ID_MAX              (RTK_MAX_NUM_OF_PORT-4)
+
+#define MDC_MDIO_DUMMY_ID           0
+#define MDC_MDIO_CTRL0_REG          31
+#define MDC_MDIO_CTRL1_REG          21
+#define MDC_MDIO_ADDRESS_REG        23
+#define MDC_MDIO_DATA_WRITE_REG     24
+#define MDC_MDIO_DATA_READ_REG      25
+#define MDC_MDIO_START_REG          29
+#define MDC_MDIO_PREAMBLE_LEN       32
+
+#define MDC_MDIO_START_OP          	0xFFFF
+#define MDC_MDIO_ADDR_OP            0x000E
+#define MDC_MDIO_READ_OP            0x0001
+#define MDC_MDIO_WRITE_OP           0x0003
+
+#define MDC_MDIO_WRITE( preLen, phy, reg, data )		vr9_mdio_write( phy, reg, data )
+#define MDC_MDIO_READ(  preLen, phy, reg, pdata )		do { *(pdata)=vr9_mdio_read( phy, reg ); } while (0)
+
+#if defined(CONFIG_RTL865X_CLE) || defined (RTK_X86_CLE)
+rtk_uint32 cleDebuggingDisplay;
+#endif
+
+rtk_uint16 (*init_para)[2];
+rtk_uint16 init_size;
+
+#define RTL8367B_REGDATAMAX        	0xFFFF
+
+#define RTL8367B_PHY_INTERNALNOMAX	0x4
+#define RTL8367B_PHY_REGNOMAX		    0x1F
+#define RTL8367B_REGBITLENGTH       16
+#define RTL8367B_EXTNO       				3
+
+#define RTL8367B_PORTMASK           0xFF
+#define RTK_MAX_PORT_MASK           0xFF
+
+rtk_port_mac_ability_t rtl8367_ext_port_cfg[EXT_PORT_END] =
+{
+		/* EXT_PORT_0 */
+		{0,0,0,0,0,0,0},
+		/* EXT_PORT_1 */
+		{1,2,1,1,0,0,0},
+		/* EXT_PORT_2 */
+		{0,0,0,0,0,0,0}
+};
+
+#if defined(CHIP_RTL8367RB)
+u16 ChipData30[][2]= {
+	/*Code of Func*/
+	{0x1B03, 0x0876}, {0x1200, 0x7FC4}, {0x0301, 0x0026}, {0x1722, 0x0E14},
+	{0x205F, 0x0002}, {0x2059, 0x1A00}, {0x205F, 0x0000}, {0x207F, 0x0002},
+	{0x2077, 0x0000}, {0x2078, 0x0000}, {0x2079, 0x0000}, {0x207A, 0x0000},
+	{0x207B, 0x0000}, {0x207F, 0x0000}, {0x205F, 0x0002}, {0x2053, 0x0000},
+	{0x2054, 0x0000}, {0x2055, 0x0000}, {0x2056, 0x0000}, {0x2057, 0x0000},
+	{0x205F, 0x0000}, {0x12A4, 0x110A}, {0x12A6, 0x150A}, {0x13F1, 0x0013},
+	{0x13F4, 0x0010}, {0x13F5, 0x0000}, {0x0018, 0x0F00}, {0x0038, 0x0F00},
+	{0x0058, 0x0F00}, {0x0078, 0x0F00}, {0x0098, 0x0F00}, {0x12B6, 0x0C02},
+	{0x12B7, 0x030F}, {0x12B8, 0x11FF}, {0x12BC, 0x0004}, {0x1362, 0x0115},
+	{0x1363, 0x0002}, {0x1363, 0x0000}, {0x133F, 0x0030}, {0x133E, 0x000E},
+	{0x221F, 0x0007}, {0x221E, 0x002D}, {0x2218, 0xF030}, {0x221F, 0x0007},
+	{0x221E, 0x0023}, {0x2216, 0x0005}, {0x2215, 0x00B9}, {0x2219, 0x0044},
+	{0x2215, 0x00BA}, {0x2219, 0x0020}, {0x2215, 0x00BB}, {0x2219, 0x00C1},
+	{0x2215, 0x0148}, {0x2219, 0x0096}, {0x2215, 0x016E}, {0x2219, 0x0026},
+	{0x2216, 0x0000}, {0x2216, 0x0000}, {0x221E, 0x002D}, {0x2218, 0xF010},
+	{0x221F, 0x0007}, {0x221E, 0x0020}, {0x2215, 0x0D00}, {0x221F, 0x0000},
+	{0x221F, 0x0000}, {0x2217, 0x2160}, {0x221F, 0x0001}, {0x2210, 0xF25E},
+	{0x221F, 0x0007}, {0x221E, 0x0042}, {0x2215, 0x0F00}, {0x2215, 0x0F00},
+	{0x2216, 0x7408}, {0x2215, 0x0E00}, {0x2215, 0x0F00}, {0x2215, 0x0F01},
+	{0x2216, 0x4000}, {0x2215, 0x0E01}, {0x2215, 0x0F01}, {0x2215, 0x0F02},
+	{0x2216, 0x9400}, {0x2215, 0x0E02}, {0x2215, 0x0F02}, {0x2215, 0x0F03},
+	{0x2216, 0x7408}, {0x2215, 0x0E03}, {0x2215, 0x0F03}, {0x2215, 0x0F04},
+	{0x2216, 0x4008}, {0x2215, 0x0E04}, {0x2215, 0x0F04}, {0x2215, 0x0F05},
+	{0x2216, 0x9400}, {0x2215, 0x0E05}, {0x2215, 0x0F05}, {0x2215, 0x0F06},
+	{0x2216, 0x0803}, {0x2215, 0x0E06}, {0x2215, 0x0F06}, {0x2215, 0x0D00},
+	{0x2215, 0x0100}, {0x221F, 0x0001}, {0x2210, 0xF05E}, {0x221F, 0x0000},
+	{0x2217, 0x2100}, {0x221F, 0x0000}, {0x220D, 0x0003}, {0x220E, 0x0015},
+	{0x220D, 0x4003}, {0x220E, 0x0006}, {0x221F, 0x0000}, {0x2200, 0x1340},
+	{0x133F, 0x0010}, {0x12A0, 0x0058}, {0x12A1, 0x0058}, {0x133E, 0x000E},
+	{0x133F, 0x0030}, {0x221F, 0x0000}, {0x2210, 0x0166}, {0x221F, 0x0000},
+	{0x133E, 0x000E}, {0x133F, 0x0010}, {0x133F, 0x0030}, {0x133E, 0x000E},
+	{0x221F, 0x0005}, {0x2205, 0xFFF6}, {0x2206, 0x0080}, {0x2205, 0x8B6E},
+	{0x2206, 0x0000}, {0x220F, 0x0100}, {0x2205, 0x8000}, {0x2206, 0x0280},
+	{0x2206, 0x28F7}, {0x2206, 0x00E0}, {0x2206, 0xFFF7}, {0x2206, 0xA080},
+	{0x2206, 0x02AE}, {0x2206, 0xF602}, {0x2206, 0x0153}, {0x2206, 0x0201},
+	{0x2206, 0x6602}, {0x2206, 0x80B9}, {0x2206, 0xE08B}, {0x2206, 0x8CE1},
+	{0x2206, 0x8B8D}, {0x2206, 0x1E01}, {0x2206, 0xE18B}, {0x2206, 0x8E1E},
+	{0x2206, 0x01A0}, {0x2206, 0x00E7}, {0x2206, 0xAEDB}, {0x2206, 0xEEE0},
+	{0x2206, 0x120E}, {0x2206, 0xEEE0}, {0x2206, 0x1300}, {0x2206, 0xEEE0},
+	{0x2206, 0x2001}, {0x2206, 0xEEE0}, {0x2206, 0x2166}, {0x2206, 0xEEE0},
+	{0x2206, 0xC463}, {0x2206, 0xEEE0}, {0x2206, 0xC5E8}, {0x2206, 0xEEE0},
+	{0x2206, 0xC699}, {0x2206, 0xEEE0}, {0x2206, 0xC7C2}, {0x2206, 0xEEE0},
+	{0x2206, 0xC801}, {0x2206, 0xEEE0}, {0x2206, 0xC913}, {0x2206, 0xEEE0},
+	{0x2206, 0xCA30}, {0x2206, 0xEEE0}, {0x2206, 0xCB3E}, {0x2206, 0xEEE0},
+	{0x2206, 0xDCE1}, {0x2206, 0xEEE0}, {0x2206, 0xDD00}, {0x2206, 0xEEE2},
+	{0x2206, 0x0001}, {0x2206, 0xEEE2}, {0x2206, 0x0100}, {0x2206, 0xEEE4},
+	{0x2206, 0x8860}, {0x2206, 0xEEE4}, {0x2206, 0x8902}, {0x2206, 0xEEE4},
+	{0x2206, 0x8C00}, {0x2206, 0xEEE4}, {0x2206, 0x8D30}, {0x2206, 0xEEEA},
+	{0x2206, 0x1480}, {0x2206, 0xEEEA}, {0x2206, 0x1503}, {0x2206, 0xEEEA},
+	{0x2206, 0xC600}, {0x2206, 0xEEEA}, {0x2206, 0xC706}, {0x2206, 0xEE85},
+	{0x2206, 0xEE00}, {0x2206, 0xEE85}, {0x2206, 0xEF00}, {0x2206, 0xEE8B},
+	{0x2206, 0x6750}, {0x2206, 0xEE8B}, {0x2206, 0x6632}, {0x2206, 0xEE8A},
+	{0x2206, 0xD448}, {0x2206, 0xEE8A}, {0x2206, 0xD548}, {0x2206, 0xEE8A},
+	{0x2206, 0xD649}, {0x2206, 0xEE8A}, {0x2206, 0xD7F8}, {0x2206, 0xEE8B},
+	{0x2206, 0x85E2}, {0x2206, 0xEE8B}, {0x2206, 0x8700}, {0x2206, 0xEEFF},
+	{0x2206, 0xF600}, {0x2206, 0xEEFF}, {0x2206, 0xF7FC}, {0x2206, 0x04F8},
+	{0x2206, 0xE08B}, {0x2206, 0x8EAD}, {0x2206, 0x2023}, {0x2206, 0xF620},
+	{0x2206, 0xE48B}, {0x2206, 0x8E02}, {0x2206, 0x2877}, {0x2206, 0x0225},
+	{0x2206, 0xC702}, {0x2206, 0x26A1}, {0x2206, 0x0281}, {0x2206, 0xB302},
+	{0x2206, 0x8496}, {0x2206, 0x0202}, {0x2206, 0xA102}, {0x2206, 0x27F1},
+	{0x2206, 0x0228}, {0x2206, 0xF902}, {0x2206, 0x2AA0}, {0x2206, 0x0282},
+	{0x2206, 0xB8E0}, {0x2206, 0x8B8E}, {0x2206, 0xAD21}, {0x2206, 0x08F6},
+	{0x2206, 0x21E4}, {0x2206, 0x8B8E}, {0x2206, 0x0202}, {0x2206, 0x80E0},
+	{0x2206, 0x8B8E}, {0x2206, 0xAD22}, {0x2206, 0x05F6}, {0x2206, 0x22E4},
+	{0x2206, 0x8B8E}, {0x2206, 0xE08B}, {0x2206, 0x8EAD}, {0x2206, 0x2305},
+	{0x2206, 0xF623}, {0x2206, 0xE48B}, {0x2206, 0x8EE0}, {0x2206, 0x8B8E},
+	{0x2206, 0xAD24}, {0x2206, 0x08F6}, {0x2206, 0x24E4}, {0x2206, 0x8B8E},
+	{0x2206, 0x0227}, {0x2206, 0x6AE0}, {0x2206, 0x8B8E}, {0x2206, 0xAD25},
+	{0x2206, 0x05F6}, {0x2206, 0x25E4}, {0x2206, 0x8B8E}, {0x2206, 0xE08B},
+	{0x2206, 0x8EAD}, {0x2206, 0x260B}, {0x2206, 0xF626}, {0x2206, 0xE48B},
+	{0x2206, 0x8E02}, {0x2206, 0x830D}, {0x2206, 0x021D}, {0x2206, 0x6BE0},
+	{0x2206, 0x8B8E}, {0x2206, 0xAD27}, {0x2206, 0x05F6}, {0x2206, 0x27E4},
+	{0x2206, 0x8B8E}, {0x2206, 0x0281}, {0x2206, 0x4402}, {0x2206, 0x045C},
+	{0x2206, 0xFC04}, {0x2206, 0xF8E0}, {0x2206, 0x8B83}, {0x2206, 0xAD23},
+	{0x2206, 0x30E0}, {0x2206, 0xE022}, {0x2206, 0xE1E0}, {0x2206, 0x2359},
+	{0x2206, 0x02E0}, {0x2206, 0x85EF}, {0x2206, 0xE585}, {0x2206, 0xEFAC},
+	{0x2206, 0x2907}, {0x2206, 0x1F01}, {0x2206, 0x9E51}, {0x2206, 0xAD29},
+	{0x2206, 0x20E0}, {0x2206, 0x8B83}, {0x2206, 0xAD21}, {0x2206, 0x06E1},
+	{0x2206, 0x8B84}, {0x2206, 0xAD28}, {0x2206, 0x42E0}, {0x2206, 0x8B85},
+	{0x2206, 0xAD21}, {0x2206, 0x06E1}, {0x2206, 0x8B84}, {0x2206, 0xAD29},
+	{0x2206, 0x36BF}, {0x2206, 0x34BF}, {0x2206, 0x022C}, {0x2206, 0x31AE},
+	{0x2206, 0x2EE0}, {0x2206, 0x8B83}, {0x2206, 0xAD21}, {0x2206, 0x10E0},
+	{0x2206, 0x8B84}, {0x2206, 0xF620}, {0x2206, 0xE48B}, {0x2206, 0x84EE},
+	{0x2206, 0x8ADA}, {0x2206, 0x00EE}, {0x2206, 0x8ADB}, {0x2206, 0x00E0},
+	{0x2206, 0x8B85}, {0x2206, 0xAD21}, {0x2206, 0x0CE0}, {0x2206, 0x8B84},
+	{0x2206, 0xF621}, {0x2206, 0xE48B}, {0x2206, 0x84EE}, {0x2206, 0x8B72},
+	{0x2206, 0xFFBF}, {0x2206, 0x34C2}, {0x2206, 0x022C}, {0x2206, 0x31FC},
+	{0x2206, 0x04F8}, {0x2206, 0xFAEF}, {0x2206, 0x69E0}, {0x2206, 0x8B85},
+	{0x2206, 0xAD21}, {0x2206, 0x42E0}, {0x2206, 0xE022}, {0x2206, 0xE1E0},
+	{0x2206, 0x2358}, {0x2206, 0xC059}, {0x2206, 0x021E}, {0x2206, 0x01E1},
+	{0x2206, 0x8B72}, {0x2206, 0x1F10}, {0x2206, 0x9E2F}, {0x2206, 0xE48B},
+	{0x2206, 0x72AD}, {0x2206, 0x2123}, {0x2206, 0xE18B}, {0x2206, 0x84F7},
+	{0x2206, 0x29E5}, {0x2206, 0x8B84}, {0x2206, 0xAC27}, {0x2206, 0x10AC},
+	{0x2206, 0x2605}, {0x2206, 0x0205}, {0x2206, 0x23AE}, {0x2206, 0x1602},
+	{0x2206, 0x0535}, {0x2206, 0x0282}, {0x2206, 0x30AE}, {0x2206, 0x0E02},
+	{0x2206, 0x056A}, {0x2206, 0x0282}, {0x2206, 0x75AE}, {0x2206, 0x0602},
+	{0x2206, 0x04DC}, {0x2206, 0x0282}, {0x2206, 0x04EF}, {0x2206, 0x96FE},
+	{0x2206, 0xFC04}, {0x2206, 0xF8F9}, {0x2206, 0xE08B}, {0x2206, 0x87AD},
+	{0x2206, 0x2321}, {0x2206, 0xE0EA}, {0x2206, 0x14E1}, {0x2206, 0xEA15},
+	{0x2206, 0xAD26}, {0x2206, 0x18F6}, {0x2206, 0x27E4}, {0x2206, 0xEA14},
+	{0x2206, 0xE5EA}, {0x2206, 0x15F6}, {0x2206, 0x26E4}, {0x2206, 0xEA14},
+	{0x2206, 0xE5EA}, {0x2206, 0x15F7}, {0x2206, 0x27E4}, {0x2206, 0xEA14},
+	{0x2206, 0xE5EA}, {0x2206, 0x15FD}, {0x2206, 0xFC04}, {0x2206, 0xF8F9},
+	{0x2206, 0xE08B}, {0x2206, 0x87AD}, {0x2206, 0x233A}, {0x2206, 0xAD22},
+	{0x2206, 0x37E0}, {0x2206, 0xE020}, {0x2206, 0xE1E0}, {0x2206, 0x21AC},
+	{0x2206, 0x212E}, {0x2206, 0xE0EA}, {0x2206, 0x14E1}, {0x2206, 0xEA15},
+	{0x2206, 0xF627}, {0x2206, 0xE4EA}, {0x2206, 0x14E5}, {0x2206, 0xEA15},
+	{0x2206, 0xE2EA}, {0x2206, 0x12E3}, {0x2206, 0xEA13}, {0x2206, 0x5A8F},
+	{0x2206, 0x6A20}, {0x2206, 0xE6EA}, {0x2206, 0x12E7}, {0x2206, 0xEA13},
+	{0x2206, 0xF726}, {0x2206, 0xE4EA}, {0x2206, 0x14E5}, {0x2206, 0xEA15},
+	{0x2206, 0xF727}, {0x2206, 0xE4EA}, {0x2206, 0x14E5}, {0x2206, 0xEA15},
+	{0x2206, 0xFDFC}, {0x2206, 0x04F8}, {0x2206, 0xF9E0}, {0x2206, 0x8B87},
+	{0x2206, 0xAD23}, {0x2206, 0x38AD}, {0x2206, 0x2135}, {0x2206, 0xE0E0},
+	{0x2206, 0x20E1}, {0x2206, 0xE021}, {0x2206, 0xAC21}, {0x2206, 0x2CE0},
+	{0x2206, 0xEA14}, {0x2206, 0xE1EA}, {0x2206, 0x15F6}, {0x2206, 0x27E4},
+	{0x2206, 0xEA14}, {0x2206, 0xE5EA}, {0x2206, 0x15E2}, {0x2206, 0xEA12},
+	{0x2206, 0xE3EA}, {0x2206, 0x135A}, {0x2206, 0x8FE6}, {0x2206, 0xEA12},
+	{0x2206, 0xE7EA}, {0x2206, 0x13F7}, {0x2206, 0x26E4}, {0x2206, 0xEA14},
+	{0x2206, 0xE5EA}, {0x2206, 0x15F7}, {0x2206, 0x27E4}, {0x2206, 0xEA14},
+	{0x2206, 0xE5EA}, {0x2206, 0x15FD}, {0x2206, 0xFC04}, {0x2206, 0xF8FA},
+	{0x2206, 0xEF69}, {0x2206, 0xE08B}, {0x2206, 0x86AD}, {0x2206, 0x2146},
+	{0x2206, 0xE0E0}, {0x2206, 0x22E1}, {0x2206, 0xE023}, {0x2206, 0x58C0},
+	{0x2206, 0x5902}, {0x2206, 0x1E01}, {0x2206, 0xE18B}, {0x2206, 0x651F},
+	{0x2206, 0x109E}, {0x2206, 0x33E4}, {0x2206, 0x8B65}, {0x2206, 0xAD21},
+	{0x2206, 0x22AD}, {0x2206, 0x272A}, {0x2206, 0xD400}, {0x2206, 0x01BF},
+	{0x2206, 0x34F2}, {0x2206, 0x022C}, {0x2206, 0xA2BF}, {0x2206, 0x34F5},
+	{0x2206, 0x022C}, {0x2206, 0xE0E0}, {0x2206, 0x8B67}, {0x2206, 0x1B10},
+	{0x2206, 0xAA14}, {0x2206, 0xE18B}, {0x2206, 0x660D}, {0x2206, 0x1459},
+	{0x2206, 0x0FAE}, {0x2206, 0x05E1}, {0x2206, 0x8B66}, {0x2206, 0x590F},
+	{0x2206, 0xBF85}, {0x2206, 0x6102}, {0x2206, 0x2CA2}, {0x2206, 0xEF96},
+	{0x2206, 0xFEFC}, {0x2206, 0x04F8}, {0x2206, 0xF9FA}, {0x2206, 0xFBEF},
+	{0x2206, 0x79E2}, {0x2206, 0x8AD2}, {0x2206, 0xAC19}, {0x2206, 0x2DE0},
+	{0x2206, 0xE036}, {0x2206, 0xE1E0}, {0x2206, 0x37EF}, {0x2206, 0x311F},
+	{0x2206, 0x325B}, {0x2206, 0x019E}, {0x2206, 0x1F7A}, {0x2206, 0x0159},
+	{0x2206, 0x019F}, {0x2206, 0x0ABF}, {0x2206, 0x348E}, {0x2206, 0x022C},
+	{0x2206, 0x31F6}, {0x2206, 0x06AE}, {0x2206, 0x0FF6}, {0x2206, 0x0302},
+	{0x2206, 0x0470}, {0x2206, 0xF703}, {0x2206, 0xF706}, {0x2206, 0xBF34},
+	{0x2206, 0x9302}, {0x2206, 0x2C31}, {0x2206, 0xAC1A}, {0x2206, 0x25E0},
+	{0x2206, 0xE022}, {0x2206, 0xE1E0}, {0x2206, 0x23EF}, {0x2206, 0x300D},
+	{0x2206, 0x311F}, {0x2206, 0x325B}, {0x2206, 0x029E}, {0x2206, 0x157A},
+	{0x2206, 0x0258}, {0x2206, 0xC4A0}, {0x2206, 0x0408}, {0x2206, 0xBF34},
+	{0x2206, 0x9E02}, {0x2206, 0x2C31}, {0x2206, 0xAE06}, {0x2206, 0xBF34},
+	{0x2206, 0x9C02}, {0x2206, 0x2C31}, {0x2206, 0xAC1B}, {0x2206, 0x4AE0},
+	{0x2206, 0xE012}, {0x2206, 0xE1E0}, {0x2206, 0x13EF}, {0x2206, 0x300D},
+	{0x2206, 0x331F}, {0x2206, 0x325B}, {0x2206, 0x1C9E}, {0x2206, 0x3AEF},
+	{0x2206, 0x325B}, {0x2206, 0x1C9F}, {0x2206, 0x09BF}, {0x2206, 0x3498},
+	{0x2206, 0x022C}, {0x2206, 0x3102}, {0x2206, 0x83C5}, {0x2206, 0x5A03},
+	{0x2206, 0x0D03}, {0x2206, 0x581C}, {0x2206, 0x1E20}, {0x2206, 0x0207},
+	{0x2206, 0xA0A0}, {0x2206, 0x000E}, {0x2206, 0x0284}, {0x2206, 0x17AD},
+	{0x2206, 0x1817}, {0x2206, 0xBF34}, {0x2206, 0x9A02}, {0x2206, 0x2C31},
+	{0x2206, 0xAE0F}, {0x2206, 0xBF34}, {0x2206, 0xC802}, {0x2206, 0x2C31},
+	{0x2206, 0xBF34}, {0x2206, 0xC502}, {0x2206, 0x2C31}, {0x2206, 0x0284},
+	{0x2206, 0x52E6}, {0x2206, 0x8AD2}, {0x2206, 0xEF97}, {0x2206, 0xFFFE},
+	{0x2206, 0xFDFC}, {0x2206, 0x04F8}, {0x2206, 0xBF34}, {0x2206, 0xDA02},
+	{0x2206, 0x2CE0}, {0x2206, 0xE58A}, {0x2206, 0xD3BF}, {0x2206, 0x34D4},
+	{0x2206, 0x022C}, {0x2206, 0xE00C}, {0x2206, 0x1159}, {0x2206, 0x02E0},
+	{0x2206, 0x8AD3}, {0x2206, 0x1E01}, {0x2206, 0xE48A}, {0x2206, 0xD3D1},
+	{0x2206, 0x00BF}, {0x2206, 0x34DA}, {0x2206, 0x022C}, {0x2206, 0xA2D1},
+	{0x2206, 0x01BF}, {0x2206, 0x34D4}, {0x2206, 0x022C}, {0x2206, 0xA2BF},
+	{0x2206, 0x34CB}, {0x2206, 0x022C}, {0x2206, 0xE0E5}, {0x2206, 0x8ACE},
+	{0x2206, 0xBF85}, {0x2206, 0x6702}, {0x2206, 0x2CE0}, {0x2206, 0xE58A},
+	{0x2206, 0xCFBF}, {0x2206, 0x8564}, {0x2206, 0x022C}, {0x2206, 0xE0E5},
+	{0x2206, 0x8AD0}, {0x2206, 0xBF85}, {0x2206, 0x6A02}, {0x2206, 0x2CE0},
+	{0x2206, 0xE58A}, {0x2206, 0xD1FC}, {0x2206, 0x04F8}, {0x2206, 0xE18A},
+	{0x2206, 0xD1BF}, {0x2206, 0x856A}, {0x2206, 0x022C}, {0x2206, 0xA2E1},
+	{0x2206, 0x8AD0}, {0x2206, 0xBF85}, {0x2206, 0x6402}, {0x2206, 0x2CA2},
+	{0x2206, 0xE18A}, {0x2206, 0xCFBF}, {0x2206, 0x8567}, {0x2206, 0x022C},
+	{0x2206, 0xA2E1}, {0x2206, 0x8ACE}, {0x2206, 0xBF34}, {0x2206, 0xCB02},
+	{0x2206, 0x2CA2}, {0x2206, 0xE18A}, {0x2206, 0xD3BF}, {0x2206, 0x34DA},
+	{0x2206, 0x022C}, {0x2206, 0xA2E1}, {0x2206, 0x8AD3}, {0x2206, 0x0D11},
+	{0x2206, 0xBF34}, {0x2206, 0xD402}, {0x2206, 0x2CA2}, {0x2206, 0xFC04},
+	{0x2206, 0xF9A0}, {0x2206, 0x0405}, {0x2206, 0xE38A}, {0x2206, 0xD4AE},
+	{0x2206, 0x13A0}, {0x2206, 0x0805}, {0x2206, 0xE38A}, {0x2206, 0xD5AE},
+	{0x2206, 0x0BA0}, {0x2206, 0x0C05}, {0x2206, 0xE38A}, {0x2206, 0xD6AE},
+	{0x2206, 0x03E3}, {0x2206, 0x8AD7}, {0x2206, 0xEF13}, {0x2206, 0xBF34},
+	{0x2206, 0xCB02}, {0x2206, 0x2CA2}, {0x2206, 0xEF13}, {0x2206, 0x0D11},
+	{0x2206, 0xBF85}, {0x2206, 0x6702}, {0x2206, 0x2CA2}, {0x2206, 0xEF13},
+	{0x2206, 0x0D14}, {0x2206, 0xBF85}, {0x2206, 0x6402}, {0x2206, 0x2CA2},
+	{0x2206, 0xEF13}, {0x2206, 0x0D17}, {0x2206, 0xBF85}, {0x2206, 0x6A02},
+	{0x2206, 0x2CA2}, {0x2206, 0xFD04}, {0x2206, 0xF8E0}, {0x2206, 0x8B85},
+	{0x2206, 0xAD27}, {0x2206, 0x2DE0}, {0x2206, 0xE036}, {0x2206, 0xE1E0},
+	{0x2206, 0x37E1}, {0x2206, 0x8B73}, {0x2206, 0x1F10}, {0x2206, 0x9E20},
+	{0x2206, 0xE48B}, {0x2206, 0x73AC}, {0x2206, 0x200B}, {0x2206, 0xAC21},
+	{0x2206, 0x0DAC}, {0x2206, 0x250F}, {0x2206, 0xAC27}, {0x2206, 0x0EAE},
+	{0x2206, 0x0F02}, {0x2206, 0x84CC}, {0x2206, 0xAE0A}, {0x2206, 0x0284},
+	{0x2206, 0xD1AE}, {0x2206, 0x05AE}, {0x2206, 0x0302}, {0x2206, 0x84D8},
+	{0x2206, 0xFC04}, {0x2206, 0xEE8B}, {0x2206, 0x6800}, {0x2206, 0x0402},
+	{0x2206, 0x84E5}, {0x2206, 0x0285}, {0x2206, 0x2804}, {0x2206, 0x0285},
+	{0x2206, 0x4904}, {0x2206, 0xEE8B}, {0x2206, 0x6800}, {0x2206, 0xEE8B},
+	{0x2206, 0x6902}, {0x2206, 0x04F8}, {0x2206, 0xF9E0}, {0x2206, 0x8B85},
+	{0x2206, 0xAD26}, {0x2206, 0x38D0}, {0x2206, 0x0B02}, {0x2206, 0x2B4D},
+	{0x2206, 0x5882}, {0x2206, 0x7882}, {0x2206, 0x9F2D}, {0x2206, 0xE08B},
+	{0x2206, 0x68E1}, {0x2206, 0x8B69}, {0x2206, 0x1F10}, {0x2206, 0x9EC8},
+	{0x2206, 0x10E4}, {0x2206, 0x8B68}, {0x2206, 0xE0E0}, {0x2206, 0x00E1},
+	{0x2206, 0xE001}, {0x2206, 0xF727}, {0x2206, 0xE4E0}, {0x2206, 0x00E5},
+	{0x2206, 0xE001}, {0x2206, 0xE2E0}, {0x2206, 0x20E3}, {0x2206, 0xE021},
+	{0x2206, 0xAD30}, {0x2206, 0xF7F6}, {0x2206, 0x27E4}, {0x2206, 0xE000},
+	{0x2206, 0xE5E0}, {0x2206, 0x01FD}, {0x2206, 0xFC04}, {0x2206, 0xF8FA},
+	{0x2206, 0xEF69}, {0x2206, 0xE08B}, {0x2206, 0x86AD}, {0x2206, 0x2212},
+	{0x2206, 0xE0E0}, {0x2206, 0x14E1}, {0x2206, 0xE015}, {0x2206, 0xAD26},
+	{0x2206, 0x9CE1}, {0x2206, 0x85E0}, {0x2206, 0xBF85}, {0x2206, 0x6D02},
+	{0x2206, 0x2CA2}, {0x2206, 0xEF96}, {0x2206, 0xFEFC}, {0x2206, 0x04F8},
+	{0x2206, 0xFAEF}, {0x2206, 0x69E0}, {0x2206, 0x8B86}, {0x2206, 0xAD22},
+	{0x2206, 0x09E1}, {0x2206, 0x85E1}, {0x2206, 0xBF85}, {0x2206, 0x6D02},
+	{0x2206, 0x2CA2}, {0x2206, 0xEF96}, {0x2206, 0xFEFC}, {0x2206, 0x0464},
+	{0x2206, 0xE48C}, {0x2206, 0xFDE4}, {0x2206, 0x80CA}, {0x2206, 0xE480},
+	{0x2206, 0x66E0}, {0x2206, 0x8E70}, {0x2206, 0xE076}, {0x2205, 0xE142},
+	{0x2206, 0x0701}, {0x2205, 0xE140}, {0x2206, 0x0405}, {0x220F, 0x0000},
+	{0x221F, 0x0000}, {0x2200, 0x1340}, {0x133E, 0x000E}, {0x133F, 0x0010},
+	{0x13EB, 0x11BB}, {0x13E0, 0x0010}
+
+	#if 0
+	/* Interface setting */
+	{0x1305, 0xC010}, {0x1311, 0x1016}, {0x1307, 0x0008}, {0x1B0E, 0x0000},
+	{0x1B03, 0x0222},
+	#endif
+};
+/*End of ChipData30[][2]*/
+
+u16 ChipData31[][2]= {
+	/*Code of Func*/
+	{0x1B03, 0x0876}, {0x1200, 0x7FC4}, {0x1305, 0xC000}, {0x121E, 0x03CA},
+	{0x1233, 0x0352}, {0x1234, 0x0064}, {0x1237, 0x0096}, {0x1238, 0x0078},
+	{0x1239, 0x0084}, {0x123A, 0x0030}, {0x205F, 0x0002}, {0x2059, 0x1A00},
+	{0x205F, 0x0000}, {0x207F, 0x0002}, {0x2077, 0x0000}, {0x2078, 0x0000},
+	{0x2079, 0x0000}, {0x207A, 0x0000}, {0x207B, 0x0000}, {0x207F, 0x0000},
+	{0x205F, 0x0002}, {0x2053, 0x0000}, {0x2054, 0x0000}, {0x2055, 0x0000},
+	{0x2056, 0x0000}, {0x2057, 0x0000}, {0x205F, 0x0000}, {0x133F, 0x0030},
+	{0x133E, 0x000E}, {0x221F, 0x0005}, {0x2205, 0x8B86}, {0x2206, 0x800E},
+	{0x221F, 0x0000}, {0x133F, 0x0010}, {0x12A3, 0x2200}, {0x6107, 0xE58B},
+	{0x6103, 0xA970}, {0x0018, 0x0F00}, {0x0038, 0x0F00}, {0x0058, 0x0F00},
+	{0x0078, 0x0F00}, {0x0098, 0x0F00}, {0x133F, 0x0030}, {0x133E, 0x000E},
+	{0x221F, 0x0005}, {0x2205, 0x8B6E}, {0x2206, 0x0000}, {0x220F, 0x0100},
+	{0x2205, 0xFFF6}, {0x2206, 0x0080}, {0x2205, 0x8000}, {0x2206, 0x0280},
+	{0x2206, 0x2BF7}, {0x2206, 0x00E0}, {0x2206, 0xFFF7}, {0x2206, 0xA080},
+	{0x2206, 0x02AE}, {0x2206, 0xF602}, {0x2206, 0x0153}, {0x2206, 0x0201},
+	{0x2206, 0x6602}, {0x2206, 0x8044}, {0x2206, 0x0201}, {0x2206, 0x7CE0},
+	{0x2206, 0x8B8C}, {0x2206, 0xE18B}, {0x2206, 0x8D1E}, {0x2206, 0x01E1},
+	{0x2206, 0x8B8E}, {0x2206, 0x1E01}, {0x2206, 0xA000}, {0x2206, 0xE4AE},
+	{0x2206, 0xD8EE}, {0x2206, 0x85C0}, {0x2206, 0x00EE}, {0x2206, 0x85C1},
+	{0x2206, 0x00EE}, {0x2206, 0x8AFC}, {0x2206, 0x07EE}, {0x2206, 0x8AFD},
+	{0x2206, 0x73EE}, {0x2206, 0xFFF6}, {0x2206, 0x00EE}, {0x2206, 0xFFF7},
+	{0x2206, 0xFC04}, {0x2206, 0xF8E0}, {0x2206, 0x8B8E}, {0x2206, 0xAD20},
+	{0x2206, 0x0302}, {0x2206, 0x8050}, {0x2206, 0xFC04}, {0x2206, 0xF8F9},
+	{0x2206, 0xE08B}, {0x2206, 0x85AD}, {0x2206, 0x2548}, {0x2206, 0xE08A},
+	{0x2206, 0xE4E1}, {0x2206, 0x8AE5}, {0x2206, 0x7C00}, {0x2206, 0x009E},
+	{0x2206, 0x35EE}, {0x2206, 0x8AE4}, {0x2206, 0x00EE}, {0x2206, 0x8AE5},
+	{0x2206, 0x00E0}, {0x2206, 0x8AFC}, {0x2206, 0xE18A}, {0x2206, 0xFDE2},
+	{0x2206, 0x85C0}, {0x2206, 0xE385}, {0x2206, 0xC102}, {0x2206, 0x2DAC},
+	{0x2206, 0xAD20}, {0x2206, 0x12EE}, {0x2206, 0x8AE4}, {0x2206, 0x03EE},
+	{0x2206, 0x8AE5}, {0x2206, 0xB7EE}, {0x2206, 0x85C0}, {0x2206, 0x00EE},
+	{0x2206, 0x85C1}, {0x2206, 0x00AE}, {0x2206, 0x1115}, {0x2206, 0xE685},
+	{0x2206, 0xC0E7}, {0x2206, 0x85C1}, {0x2206, 0xAE08}, {0x2206, 0xEE85},
+	{0x2206, 0xC000}, {0x2206, 0xEE85}, {0x2206, 0xC100}, {0x2206, 0xFDFC},
+	{0x2206, 0x0400}, {0x2205, 0xE142}, {0x2206, 0x0701}, {0x2205, 0xE140},
+	{0x2206, 0x0405}, {0x220F, 0x0000}, {0x221F, 0x0000}, {0x133E, 0x000E},
+	{0x133F, 0x0010}, {0x13E0, 0x0010}, {0x207F, 0x0002}, {0x2073, 0x1D22},
+	{0x207F, 0x0000}, {0x133F, 0x0030}, {0x133E, 0x000E}, {0x2200, 0x1340},
+	{0x133E, 0x000E}, {0x133F, 0x0010}, 
+
+	#if 0
+	/* Interface setting */
+	{0x1305, 0xC010}, {0x1311, 0x1016}, {0x1307, 0x0008}, {0x1B0E, 0x0000},
+	{0x1B03, 0x0222},
+	#endif
+};
+/*End of ChipData31[][2]*/
+#endif
+
+rtk_int32 smi_read(rtk_uint32 mAddrs, rtk_uint32 *rData)
+{
+#if defined(MDC_MDIO_OPERATION)
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write address control code to register 31 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL0_REG, MDC_MDIO_ADDR_OP);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write address to register 23 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_ADDRESS_REG, mAddrs);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write read control code to register 21 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL1_REG, MDC_MDIO_READ_OP);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Read data from register 25 */
+    MDC_MDIO_READ(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_DATA_READ_REG, rData);
+
+    return RT_ERR_OK;
+
+#elif defined(SPI_OPERATION)
+    /* Write 8 bits READ OP_CODE */
+    SPI_WRITE(SPI_READ_OP, SPI_READ_OP_LEN);
+
+    /* Write 16 bits register address */
+    SPI_WRITE(mAddrs, SPI_REG_LEN);
+
+    /* Read 16 bits data */
+    SPI_READ(rData, SPI_DATA_LEN);
+
+#else
+    rtk_uint32 rawData=0, ACK;
+    rtk_uint8  con;
+    rtk_uint32 ret = RT_ERR_OK;
+
+    /*Disable CPU interrupt to ensure that the SMI operation is atomic.
+      The API is based on RTL865X, rewrite the API if porting to other platform.*/
+    rtlglue_drvMutexLock();
+
+    _smi_start();                                /* Start SMI */
+
+    _smi_writeBit(0x0b, 4);                     /* CTRL code: 4'b1011 for RTL8370 */
+
+    _smi_writeBit(0x4, 3);                        /* CTRL code: 3'b100 */
+
+    _smi_writeBit(0x1, 1);                        /* 1: issue READ command */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for issuing READ command*/
+    } while ((ACK != 0) && (con < ack_timer));
+
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit((mAddrs&0xff), 8);             /* Set reg_addr[7:0] */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for setting reg_addr[7:0] */
+    } while ((ACK != 0) && (con < ack_timer));
+
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit((mAddrs>>8), 8);                 /* Set reg_addr[15:8] */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK by RTL8369 */
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_readBit(8, &rawData);                    /* Read DATA [7:0] */
+    *rData = rawData&0xff;
+
+    _smi_writeBit(0x00, 1);                        /* ACK by CPU */
+
+    _smi_readBit(8, &rawData);                    /* Read DATA [15: 8] */
+
+    _smi_writeBit(0x01, 1);                        /* ACK by CPU */
+    *rData |= (rawData<<8);
+
+    _smi_stop();
+
+    rtlglue_drvMutexUnlock();/*enable CPU interrupt*/
+
+    return ret;
+#endif /* end of #if defined(MDC_MDIO_OPERATION) */
+}
+
+rtk_int32 smi_write(rtk_uint32 mAddrs, rtk_uint32 rData)
+{
+#if defined(MDC_MDIO_OPERATION)
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write address control code to register 31 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL0_REG, MDC_MDIO_ADDR_OP);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write address to register 23 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_ADDRESS_REG, mAddrs);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write data to register 24 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_DATA_WRITE_REG, rData);
+
+    /* Write Start command to register 29 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+
+    /* Write data control code to register 21 */
+    MDC_MDIO_WRITE(MDC_MDIO_PREAMBLE_LEN, MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL1_REG, MDC_MDIO_WRITE_OP);
+
+    return RT_ERR_OK;
+
+#elif defined(SPI_OPERATION)
+    /* Write 8 bits WRITE OP_CODE */
+    SPI_WRITE(SPI_WRITE_OP, SPI_WRITE_OP_LEN);
+
+    /* Write 16 bits register address */
+    SPI_WRITE(mAddrs, SPI_REG_LEN);
+
+    /* Write 16 bits data */
+    SPI_WRITE(rData, SPI_DATA_LEN);
+#else
+
+/*
+    if ((mAddrs > 0x018A) || (rData > 0xFFFF))  return    RT_ERR_FAILED;
+*/
+    rtk_int8 con;
+    rtk_uint32 ACK;
+    rtk_uint32 ret = RT_ERR_OK;
+
+    /*Disable CPU interrupt to ensure that the SMI operation is atomic.
+      The API is based on RTL865X, rewrite the API if porting to other platform.*/
+       rtlglue_drvMutexLock();
+
+    _smi_start();                                 /* Start SMI */
+
+    _smi_writeBit(0x0b, 4);                       /* CTRL code: 4'b1011 for RTL8370*/
+
+    _smi_writeBit(0x4, 3);                        /* CTRL code: 3'b100 */
+
+    _smi_writeBit(0x0, 1);                        /* 0: issue WRITE command */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for issuing WRITE command*/
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit((mAddrs&0xff), 8);             /* Set reg_addr[7:0] */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for setting reg_addr[7:0] */
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit((mAddrs>>8), 8);                 /* Set reg_addr[15:8] */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for setting reg_addr[15:8] */
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit(rData&0xff, 8);                /* Write Data [7:0] out */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                    /* ACK for writting data [7:0] */
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_writeBit(rData>>8, 8);                    /* Write Data [15:8] out */
+
+    con = 0;
+    do {
+        con++;
+        _smi_readBit(1, &ACK);                        /* ACK for writting data [15:8] */
+    } while ((ACK != 0) && (con < ack_timer));
+    if (ACK != 0) ret = RT_ERR_FAILED;
+
+    _smi_stop();
+
+    rtlglue_drvMutexUnlock();/*enable CPU interrupt*/
+
+    return ret;
+#endif /* end of #if defined(MDC_MDIO_OPERATION) */
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicRegBits
+ * Description:
+ *      Set bits value of a specified register
+ * Input:
+ *      reg 	- register's address
+ *      bits 	- bits mask for setting
+ *      value 	- bits value for setting
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 		- Success
+ *      RT_ERR_SMI  	- SMI access error
+ *      RT_ERR_INPUT  	- Invalid input parameter
+ * Note:
+ *      Set bits of a specified register to value. Both bits and value are be treated as bit-mask
+ */
+ret_t rtl8367b_setAsicRegBits(rtk_uint32 reg, rtk_uint32 bits, rtk_uint32 value)
+{
+
+#if defined(RTK_X86_ASICDRV)
+
+		rtk_uint32 regData;
+		ret_t retVal;
+		rtk_uint32 bitsShift;
+		rtk_uint32 valueShifted;
+
+		if(bits >= (1 << RTL8367B_REGBITLENGTH) )
+			return RT_ERR_INPUT;
+
+		bitsShift = 0;
+		while(!(bits & (1 << bitsShift)))
+		{
+			bitsShift++;
+			if(bitsShift >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+		}
+
+		valueShifted = value << bitsShift;
+		if(valueShifted > RTL8367B_REGDATAMAX)
+			return RT_ERR_INPUT;
+
+		retVal = Access_Read(reg, 2, &regData);
+		if(TRUE != retVal)
+			return RT_ERR_SMI;
+
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+		regData = regData & (~bits);
+		regData = regData | (valueShifted & bits);
+
+		retVal = Access_Write(reg,2, regData);
+		if(TRUE != retVal)
+			return RT_ERR_SMI;
+
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("W[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+#elif defined(CONFIG_RTL8367B_ASICDRV_TEST)
+
+		rtk_uint32 regData;
+		rtk_uint32 bitsShift;
+		rtk_uint32 valueShifted;
+
+		if(bits >= (1 << RTL8367B_REGBITLENGTH) )
+			return RT_ERR_INPUT;
+
+		bitsShift = 0;
+		while(!(bits & (1 << bitsShift)))
+		{
+			bitsShift++;
+			if(bitsShift >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+		}
+		valueShifted = value << bitsShift;
+
+		if(valueShifted > RTL8367B_REGDATAMAX)
+			return RT_ERR_INPUT;
+
+		if(reg >= CLE_VIRTUAL_REG_SIZE)
+			return RT_ERR_OUT_OF_RANGE;
+
+		regData = CleVirtualReg[reg] & (~bits);
+		regData = regData | (valueShifted & bits);
+
+		CleVirtualReg[reg] = regData;
+
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("W[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+#elif defined(EMBEDDED_SUPPORT)
+
+    rtk_uint32 regData;
+    rtk_uint32 bitsShift;
+    rtk_uint32 valueShifted;
+
+    if(reg > RTL8367B_REGDATAMAX )
+	    return RT_ERR_INPUT;
+
+    if(bits >= (1 << RTL8367B_REGBITLENGTH) )
+        return RT_ERR_INPUT;
+
+    bitsShift = 0;
+    while(!(bits & (1 << bitsShift)))
+    {
+        bitsShift++;
+        if(bitsShift >= RTL8367B_REGBITLENGTH)
+            return RT_ERR_INPUT;
+    }
+
+    valueShifted = value << bitsShift;
+    if(valueShifted > RTL8367B_REGDATAMAX)
+        return RT_ERR_INPUT;
+
+    regData = getReg(reg);
+    regData = regData & (~bits);
+    regData = regData | (valueShifted & bits);
+
+		setReg(reg, regData);
+
+#else
+
+		rtk_uint32 regData;
+		ret_t retVal;
+		rtk_uint32 bitsShift;
+		rtk_uint32 valueShifted;
+
+		if(bits >= (1 << RTL8367B_REGBITLENGTH) )
+			return RT_ERR_INPUT;
+
+		bitsShift = 0;
+		while(!(bits & (1 << bitsShift)))
+		{
+			bitsShift++;
+			if(bitsShift >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+		}
+		valueShifted = value << bitsShift;
+
+		if(valueShifted > RTL8367B_REGDATAMAX)
+			return RT_ERR_INPUT;
+
+		retVal = smi_read(reg, &regData);
+		if(retVal != RT_ERR_OK)
+			return RT_ERR_SMI;
+		
+	  #ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+	  #endif
+
+		regData = regData & (~bits);
+		regData = regData | (valueShifted & bits);
+
+		retVal = smi_write(reg, regData);
+		if(retVal != RT_ERR_OK)
+			return RT_ERR_SMI;
+		
+	  #ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("W[0x%4.4x]=0x%4.4x\n", reg, regData);
+	  #endif
+		
+#endif
+
+		return RT_ERR_OK;
 }
 
+/* Function Name:
+ *      rtl8367b_setAsicRegBit
+ * Description:
+ *      Set a bit value of a specified register
+ * Input:
+ *      reg 	- register's address
+ *      bit 	- bit location
+ *      value 	- value to set. It can be value 0 or 1.
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 		- Success
+ *      RT_ERR_SMI  	- SMI access error
+ *      RT_ERR_INPUT  	- Invalid input parameter
+ * Note:
+ *      Set a bit of a specified register to 1 or 0.
+ */
+ret_t rtl8367b_setAsicRegBit(rtk_uint32 reg, rtk_uint32 bit, rtk_uint32 value)
+{
+
+#if defined(RTK_X86_ASICDRV)
+		rtk_uint32 regData;
+		ret_t retVal;
+
+		if(bit >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+
+		retVal = Access_Read(reg, 2, &regData);
+		if(TRUE != retVal)
+				return RT_ERR_SMI;
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+		if(value)
+				regData = regData | (1 << bit);
+		else
+				regData = regData & (~(1 << bit));
+
+		retVal = Access_Write(reg,2, regData);
+		if(TRUE != retVal)
+				return RT_ERR_SMI;
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("W[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+#elif defined(CONFIG_RTL8367B_ASICDRV_TEST)
+
+		if(bit >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+		else if(reg >= CLE_VIRTUAL_REG_SIZE)
+				return RT_ERR_OUT_OF_RANGE;
+
+		if(value)
+		{
+			CleVirtualReg[reg] =  CleVirtualReg[reg] | (1 << bit);
+		}
+		else
+		{
+			CleVirtualReg[reg] =  CleVirtualReg[reg] & (~(1 << bit));
+		}
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("W[0x%4.4x]=0x%4.4x\n", reg, CleVirtualReg[reg]);
+
+#elif defined(EMBEDDED_SUPPORT)
+    rtk_uint16 tmp;
+
+    if(reg > RTL8367B_REGDATAMAX || value > 1)
+	    	return RT_ERR_INPUT;
+
+		tmp = getReg(reg);
+		tmp &= (1 << bitIdx);
+		tmp |= (value << bitIdx);
+		setReg(reg, tmp);
+
+#else
+		rtk_uint32 regData;
+		ret_t retVal;
+
+		if(bit >= RTL8367B_REGBITLENGTH)
+				return RT_ERR_INPUT;
+
+		retVal = smi_read(reg, &regData);
+		if(retVal != RT_ERR_OK)
+				return RT_ERR_SMI;
+
+  	#ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+  	#endif
+
+		if(value)
+				regData = regData | (1 << bit);
+		else
+				regData = regData & (~(1 << bit));
+
+		retVal = smi_write(reg, regData);
+		if(retVal != RT_ERR_OK)
+				return RT_ERR_SMI;
+
+	  #ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("W[0x%4.4x]=0x%4.4x\n", reg, regData);
+	  #endif
+
+#endif
+
+		return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicReg
+ * Description:
+ *      Set content of asic register
+ * Input:
+ *      reg 	- register's address
+ *      value 	- Value setting to register
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 		- Success
+ *      RT_ERR_SMI  	- SMI access error
+ * Note:
+ *      The value will be set to ASIC mapping address only and it is always return RT_ERR_OK while setting un-mapping address registers
+ */
+ret_t rtl8367b_setAsicReg(rtk_uint32 reg, rtk_uint32 value)
+{
+
+#if defined(RTK_X86_ASICDRV)/*RTK-CNSD2-NickWu-20061222: for x86 compile*/
+
+		ret_t retVal;
+
+		retVal = Access_Write(reg,2,value);
+		if(TRUE != retVal) return RT_ERR_SMI;
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("W[0x%4.4x]=0x%4.4x\n",reg,value);
+
+#elif defined(CONFIG_RTL8367B_ASICDRV_TEST)
+
+		/*MIBs emulating*/
+		if(reg == RTL8367B_REG_MIB_ADDRESS)
+		{
+			CleVirtualReg[RTL8367B_MIB_COUNTER_BASE_REG] = 0x1;
+			CleVirtualReg[RTL8367B_MIB_COUNTER_BASE_REG+1] = 0x2;
+			CleVirtualReg[RTL8367B_MIB_COUNTER_BASE_REG+2] = 0x3;
+			CleVirtualReg[RTL8367B_MIB_COUNTER_BASE_REG+3] = 0x4;
+		}
+
+		if(reg >= CLE_VIRTUAL_REG_SIZE)
+			return RT_ERR_OUT_OF_RANGE;
+
+		CleVirtualReg[reg] = value;
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("W[0x%4.4x]=0x%4.4x\n",reg,CleVirtualReg[reg]);
+
+#elif defined(EMBEDDED_SUPPORT)
+    if(reg > RTL8367B_REGDATAMAX || value > RTL8367B_REGDATAMAX )
+	    return RT_ERR_INPUT;
+
+    setReg(reg, value);
+
+#else
+		ret_t retVal;
+
+		retVal = smi_write(reg, value);
+		
+		if(retVal != RT_ERR_OK)
+			return RT_ERR_SMI;
+
+		#ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+			PRINT("W[0x%4.4x]=0x%4.4x\n",reg,value);
+	  #endif
+
+#endif
+
+		return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_getAsicReg
+ * Description:
+ *      Get content of asic register
+ * Input:
+ *      reg 	- register's address
+ *      value 	- Value setting to register
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 		- Success
+ *      RT_ERR_SMI  	- SMI access error
+ * Note:
+ *      Value 0x0000 will be returned for ASIC un-mapping address
+ */
+ret_t rtl8367b_getAsicReg(rtk_uint32 reg, rtk_uint32 *pValue)
+{
+
+#if defined(RTK_X86_ASICDRV)
+
+		rtk_uint32 regData;
+		ret_t retVal;
+
+		retVal = Access_Read(reg, 2, &regData);
+		if(TRUE != retVal)
+			return RT_ERR_SMI;
+
+		*pValue = regData;
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+
+#elif defined(CONFIG_RTL8367B_ASICDRV_TEST)
+
+		if(reg >= CLE_VIRTUAL_REG_SIZE)
+				return RT_ERR_OUT_OF_RANGE;
+
+		*pValue = CleVirtualReg[reg];
+
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("R[0x%4.4x]=0x%4.4x\n", reg, CleVirtualReg[reg]);
+
+#elif defined(EMBEDDED_SUPPORT)
+
+		if(reg > RTL8367B_REGDATAMAX)
+	    return RT_ERR_INPUT;
+
+		*value = getReg(reg);
+
+#else
+		rtk_uint32 regData;
+		ret_t retVal;
+
+		retVal = smi_read(reg, &regData);
+		if(retVal != RT_ERR_OK)
+				return RT_ERR_SMI;
+
+		*pValue = regData;
+
+		#ifdef CONFIG_RTL865X_CLE
+		if(0x8367B == cleDebuggingDisplay)
+				PRINT("R[0x%4.4x]=0x%4.4x\n", reg, regData);
+  	#endif
+
+#endif
+
+		return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicPHYReg
+ * Description:
+ *      Set PHY registers
+ * Input:
+ *      phyNo 	- Physical port number (0~4)
+ *      phyAddr - PHY address (0~31)
+ *      phyData - Writing data
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 				- Success
+ *      RT_ERR_SMI  			- SMI access error
+ *      RT_ERR_PHY_REG_ID  		- invalid PHY address
+ *      RT_ERR_PHY_ID  			- invalid PHY no
+ *      RT_ERR_BUSYWAIT_TIMEOUT - PHY access busy
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_setAsicPHYReg( rtk_uint32 phyNo, rtk_uint32 phyAddr, rtk_uint32 value)
+{
+		rtk_uint32 regAddr;
+
+    if(phyNo > RTL8367B_PHY_INTERNALNOMAX)
+        return RT_ERR_PORT_ID;
+		#if 0
+    if(phyAddr > RTL8367B_PHY_REGNOMAX)
+        return RT_ERR_PHY_REG_ID;
+		#endif
+
+		regAddr = 0x2000 + (phyNo << 5) + phyAddr;
+
+    return rtl8367b_setAsicReg(regAddr, value);
+}
+
+/* Function Name:
+ *      rtl8367b_getAsicPHYReg
+ * Description:
+ *      Get PHY registers
+ * Input:
+ *      phyNo 	- Physical port number (0~4)
+ *      phyAddr - PHY address (0~31)
+ *      pRegData - Writing data
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 				- Success
+ *      RT_ERR_SMI  			- SMI access error
+ *      RT_ERR_PHY_REG_ID  		- invalid PHY address
+ *      RT_ERR_PHY_ID  			- invalid PHY no
+ *      RT_ERR_BUSYWAIT_TIMEOUT - PHY access busy
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_getAsicPHYReg( rtk_uint32 phyNo, rtk_uint32 phyAddr, rtk_uint32 *value)
+{
+		rtk_uint32 regAddr;
+
+    if(phyNo > RTL8367B_PHY_INTERNALNOMAX)
+        return RT_ERR_PORT_ID;
+
+    if(phyAddr > RTL8367B_PHY_REGNOMAX)
+        return RT_ERR_PHY_REG_ID;
+
+    regAddr = 0x2000 + (phyNo << 5) + phyAddr;
+
+    return rtl8367b_getAsicReg(regAddr, value);
+}
+
+static rtk_api_ret_t _rtk_switch_init_setreg(rtk_uint32 reg, rtk_uint32 data)
+{
+#ifndef MDC_MDIO_OPERATION
+    rtk_uint32      busyFlag, cnt;
+#endif
+    rtk_api_ret_t   retVal;
+
+#ifdef MDC_MDIO_OPERATION
+    if((retVal = rtl8367b_setAsicReg(reg, data) != RT_ERR_OK))
+            return retVal;
+#else
+    if ((reg & 0xF000) == 0x2000)
+    {
+        cnt = 0;
+        busyFlag = 1;
+        while (busyFlag&&cnt<5)
+        {
+            cnt++;
+            if ((retVal = rtl8367b_getAsicRegBit(RTK_INDRECT_ACCESS_STATUS, RTK_PHY_BUSY_OFFSET,&busyFlag)) !=  RT_ERR_OK)
+                return retVal;
+        }
+				
+        if (5 == cnt)
+            return RT_ERR_BUSYWAIT_TIMEOUT;
+
+        if ((retVal = rtl8367b_setAsicReg(RTK_INDRECT_ACCESS_WRITE_DATA, data)) !=  RT_ERR_OK)
+            return retVal;
+        if ((retVal = rtl8367b_setAsicReg(RTK_INDRECT_ACCESS_ADDRESS, reg)) !=  RT_ERR_OK)
+            return retVal;
+        if ((retVal = rtl8367b_setAsicReg(RTK_INDRECT_ACCESS_CRTL, RTK_CMD_MASK | RTK_RW_MASK)) !=  RT_ERR_OK)
+            return retVal;
+    }
+    else
+    {
+        if((retVal = rtl8367b_setAsicReg(reg, data)) != RT_ERR_OK)
+            return retVal;
+    }
+#endif
+
+    return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtk_switch_init
+ * Description:
+ *      Set chip to default configuration enviroment
+ * Input:
+ *      None
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK           - OK
+ *      RT_ERR_FAILED       - Failed
+ *      RT_ERR_SMI          - SMI access error
+ * Note:
+ *      The API can set chip registers to default configuration for different release chip model.
+ */
+rtk_api_ret_t rtk_switch_init(void)
+{
+    rtk_uint16      i;
+    rtk_uint32      data;
+    rtk_api_ret_t   retVal;
+    rtk_uint32      phy;
+#if defined(CHIP_AUTO_DETECT)
+    rtk_uint32      polling_time;
+    rtk_uint32      chip_idx = 0;
+#endif
+
+    if((retVal = rtl8367b_setAsicReg(0x13C2, 0x0249)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_getAsicReg(0x1301, &data)) != RT_ERR_OK)
+        return retVal;
+
+#if defined(CHIP_AUTO_DETECT)
+    if((retVal = rtl8367b_setAsicReg(0x1371, 0x000F)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_setAsicReg(0x1370, 0x0002)) != RT_ERR_OK)
+        return retVal;
+
+    polling_time = 0;
+    while(polling_time < 10000)
+    {
+        if((retVal = rtl8367b_getAsicReg(0x1370, &data)) != RT_ERR_OK)
+            return retVal;
+
+        if((data & 0x0004) == 0)
+            break;
+
+        polling_time++;
+    }
+
+    if(polling_time >= 10000)
+        return RT_ERR_BUSYWAIT_TIMEOUT;
+
+    if((retVal = rtl8367b_getAsicReg(0x1373, &data)) != RT_ERR_OK)
+        return retVal;
+
+    chip_idx |= ((data & 0x000F) << 4);
+
+    if((retVal = rtl8367b_setAsicReg(0x1371, 0x000D)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_setAsicReg(0x1370, 0x0002)) != RT_ERR_OK)
+        return retVal;
+
+    polling_time = 0;
+    while(polling_time < 10000)
+    {
+        if((retVal = rtl8367b_getAsicReg(0x1370, &data)) != RT_ERR_OK)
+            return retVal;
+
+        if((data & 0x0004) == 0)
+            break;
+
+        polling_time++;
+    }
+
+    if(polling_time >= 10000)
+        return RT_ERR_BUSYWAIT_TIMEOUT;
+
+    if((retVal = rtl8367b_getAsicReg(0x1373, &data)) != RT_ERR_OK)
+        return retVal;
+
+    chip_idx |= (data & 0x000F);
+
+
+    if((chip_idx & 0x00F0) == 0x0000)
+    {
+        /* RTL8365MB & RTL8305MB */
+        if((chip_idx & 0x000F) >> 3)
+        {
+            /* RTL8305MB */
+            init_para = ChipData81;
+            init_size = (sizeof(ChipData81) / ((sizeof(rtk_uint16))*2));
+        }
+        else if((chip_idx & 0x000F) >> 2)
+        {
+            /* RTL8365MB */
+            init_para = ChipData11;
+            init_size = (sizeof(ChipData11) / ((sizeof(rtk_uint16))*2));
+        }
+        else if((chip_idx & 0x000F) >> 1)
+        {
+            /* RTL8305MB */
+            init_para = ChipData81;
+            init_size = (sizeof(ChipData81) / ((sizeof(rtk_uint16))*2));
+        }
+        else if(chip_idx & 0x000F)
+        {
+            /* RTL8365MB */
+            init_para = ChipData11;
+            init_size = (sizeof(ChipData11) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            return RT_ERR_CHIP_NOT_SUPPORTED;
+    }
+    else
+        return RT_ERR_CHIP_NOT_SUPPORTED;
+
+#elif defined(RTK_X86_ASICDRV)
+    if(init_para == ChipData00)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData01;
+            init_size = (sizeof(ChipData01) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData00) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData10)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData11;
+            init_size = (sizeof(ChipData11) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData10) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData20)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData21;
+            init_size = (sizeof(ChipData21) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData20) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData30)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData31;
+            init_size = (sizeof(ChipData31) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData30) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData40)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData41;
+            init_size = (sizeof(ChipData41) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData40) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData50)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData51;
+            init_size = (sizeof(ChipData51) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData50) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData60)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData61;
+            init_size = (sizeof(ChipData61) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData60) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData70)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData71;
+            init_size = (sizeof(ChipData71) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData70) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData80)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData81;
+            init_size = (sizeof(ChipData81) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData80) / ((sizeof(rtk_uint16))*2));
+    }
+    else if(init_para == ChipData90)
+    {
+        if(data & 0xF000)
+        {
+            init_para = ChipData91;
+            init_size = (sizeof(ChipData91) / ((sizeof(rtk_uint16))*2));
+        }
+        else
+            init_size = (sizeof(ChipData90) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8363SB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData01;
+        init_size = (sizeof(ChipData01) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData00;
+        init_size = (sizeof(ChipData00) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8365MB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData11;
+        init_size = (sizeof(ChipData11) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData10;
+        init_size = (sizeof(ChipData10) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8367_VB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData21;
+        init_size = (sizeof(ChipData21) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData20;
+        init_size = (sizeof(ChipData20) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8367RB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData31;
+        init_size = (sizeof(ChipData31) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData30;
+        init_size = (sizeof(ChipData30) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8367R_VB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData41;
+        init_size = (sizeof(ChipData41) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData40;
+        init_size = (sizeof(ChipData40) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8367MB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData51;
+        init_size = (sizeof(ChipData51) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData50;
+        init_size = (sizeof(ChipData50) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8367M_VB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData61;
+        init_size = (sizeof(ChipData61) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData60;
+        init_size = (sizeof(ChipData60) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8368MB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData71;
+        init_size = (sizeof(ChipData71) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData70;
+        init_size = (sizeof(ChipData70) / ((sizeof(rtk_uint16))*2));
+    }
+
+#elif defined(CHIP_RTL8305MB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData81;
+        init_size = (sizeof(ChipData81) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData80;
+        init_size = (sizeof(ChipData80) / ((sizeof(rtk_uint16))*2));
+    }
+#elif defined(CHIP_RTL8307M_VB)
+    if(data & 0xF000)
+    {
+        init_para = ChipData91;
+        init_size = (sizeof(ChipData91) / ((sizeof(rtk_uint16))*2));
+    }
+    else
+    {
+        init_para = ChipData90;
+        init_size = (sizeof(ChipData90) / ((sizeof(rtk_uint16))*2));
+    }
+
+#else
+    /* Not define CHIP, Error */
+    init_para = NULL;
+#endif
+
+    if(init_para == NULL)
+        return RT_ERR_CHIP_NOT_SUPPORTED;
+
+    /* Analog parameter update. ID:0001 */
+    for(phy = 0; phy <= RTK_PHY_ID_MAX; phy++)
+    {
+        if((retVal = rtl8367b_setAsicPHYReg(phy, 31, 0x7)) != RT_ERR_OK)
+            return retVal;
+
+        if((retVal = rtl8367b_setAsicPHYReg(phy, 30, 0x2c)) != RT_ERR_OK)
+            return retVal;
+
+        if((retVal = rtl8367b_setAsicPHYReg(phy, 25, 0x0504)) != RT_ERR_OK)
+            return retVal;
+
+        if((retVal = rtl8367b_setAsicPHYReg(phy, 31, 0x0)) != RT_ERR_OK)
+            return retVal;
+    }
+
+    for(i = 0; i < init_size; i++)
+    {
+        if((retVal = _rtk_switch_init_setreg((rtk_uint32)init_para[i][0], (rtk_uint32)init_para[i][1])) != RT_ERR_OK)
+            return retVal;
+    }
+
+    /* Analog parameter update. ID:0002 */
+    if((retVal = rtl8367b_setAsicPHYReg(1, 31, 0x2)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_getAsicPHYReg(1, 17, &data)) != RT_ERR_OK)
+        return retVal;
+
+    data |= 0x01E0;
+
+    if((retVal = rtl8367b_setAsicPHYReg(1, 17, data)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_setAsicPHYReg(1, 31, 0x0)) != RT_ERR_OK)
+        return retVal;
+
+
+    if((retVal = rtl8367b_setAsicRegBit(0x18e0, 0, 0)) != RT_ERR_OK)
+        return retVal;
+
+    if((retVal = rtl8367b_setAsicReg(0x1303, 0x0778)) != RT_ERR_OK)
+        return retVal;
+    if((retVal = rtl8367b_setAsicReg(0x1304, 0x7777)) != RT_ERR_OK)
+        return retVal;
+    if((retVal = rtl8367b_setAsicReg(0x13E2, 0x01FE)) != RT_ERR_OK)
+        return retVal;
+
+    return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicPortExtMode
+ * Description:
+ *      Set external interface mode configuration
+ * Input:
+ *      id 		- external interface id (0~2)
+ *      mode 	- external interface mode
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 			- Success
+ *      RT_ERR_SMI  		- SMI access error
+ *      RT_ERR_OUT_OF_RANGE - input parameter out of range
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_setAsicPortExtMode(rtk_uint32 id, rtk_uint32 mode)
+{
+    ret_t   retVal;
+
+    if(id >= RTL8367B_EXTNO)
+        return RT_ERR_OUT_OF_RANGE;
+
+    if(mode >= EXT_END)
+        return RT_ERR_OUT_OF_RANGE;
+
+    if(mode == EXT_GMII)
+    {
+        if( (retVal = rtl8367b_setAsicRegBit(RTL8367B_REG_EXT0_RGMXF, RTL8367B_EXT0_RGTX_INV_OFFSET, 1)) != RT_ERR_OK)
+            return retVal;
+
+        if( (retVal = rtl8367b_setAsicRegBit(RTL8367B_REG_EXT1_RGMXF, RTL8367B_EXT1_RGTX_INV_OFFSET, 1)) != RT_ERR_OK)
+            return retVal;
+
+        if( (retVal = rtl8367b_setAsicRegBits(RTL8367B_REG_EXT_TXC_DLY, RTL8367B_EXT1_GMII_TX_DELAY_MASK, 5)) != RT_ERR_OK)
+            return retVal;
+
+        if( (retVal = rtl8367b_setAsicRegBits(RTL8367B_REG_EXT_TXC_DLY, RTL8367B_EXT0_GMII_TX_DELAY_MASK, 6)) != RT_ERR_OK)
+            return retVal;
+    }
+
+    if( (mode == EXT_TMII_MAC) || (mode == EXT_TMII_PHY) )
+    {
+        if( (retVal = rtl8367b_setAsicRegBit(RTL8367B_REG_BYPASS_LINE_RATE, id, 1)) != RT_ERR_OK)
+            return retVal;
+    }
+    else
+    {
+        if( (retVal = rtl8367b_setAsicRegBit(RTL8367B_REG_BYPASS_LINE_RATE, id, 0)) != RT_ERR_OK)
+            return retVal;
+    }
+
+	if(0 == id || 1 == id)
+   		return rtl8367b_setAsicRegBits(RTL8367B_REG_DIGITAL_INTERFACE_SELECT, RTL8367B_SELECT_GMII_0_MASK << (id * RTL8367B_SELECT_GMII_1_OFFSET), mode);
+	else
+   		return rtl8367b_setAsicRegBits(RTL8367B_REG_DIGITAL_INTERFACE_SELECT_1, RTL8367B_SELECT_RGMII_2_MASK, mode);
+}
+
+/* Function Name:
+ *      rtl8367b_getAsicPortForceLinkExt
+ * Description:
+ *      Get external interface force linking configuration
+ * Input:
+ *      id 			- external interface id (0~1)
+ *      pPortAbility - port ability configuration
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 			- Success
+ *      RT_ERR_SMI  		- SMI access error
+ *      RT_ERR_OUT_OF_RANGE - input parameter out of range
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_getAsicPortForceLinkExt(rtk_uint32 id, rtl8367b_port_ability_t *pPortAbility)
+{
+    rtk_uint32  reg_data;
+    rtk_uint16  ability_data;
+    ret_t       retVal;
+
+    /* Invalid input parameter */
+    if(id >= RTL8367B_EXTNO)
+        return RT_ERR_OUT_OF_RANGE;
+
+		if(0 == id || 1 == id)
+    	retVal = rtl8367b_getAsicReg(RTL8367B_REG_DIGITAL_INTERFACE0_FORCE+id, &reg_data);
+		else
+	    retVal = rtl8367b_getAsicReg(RTL8367B_REG_DIGITAL_INTERFACE2_FORCE, &reg_data);
+
+    if(retVal != RT_ERR_OK)
+        return retVal;
+
+    ability_data = (rtk_uint16)reg_data;
+    memcpy(pPortAbility, &ability_data, sizeof(rtl8367b_port_ability_t));
+    return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicPortForceLinkExt
+ * Description:
+ *      Set external interface force linking configuration
+ * Input:
+ *      id 			- external interface id (0~2)
+ *      portAbility - port ability configuration
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 			- Success
+ *      RT_ERR_SMI  		- SMI access error
+ *      RT_ERR_OUT_OF_RANGE - input parameter out of range
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_setAsicPortForceLinkExt(rtk_uint32 id, rtl8367b_port_ability_t *pPortAbility)
+{
+    rtk_uint32  reg_data;
+
+    /* Invalid input parameter */
+    if(id >= RTL8367B_EXTNO)
+        return RT_ERR_OUT_OF_RANGE;
+
+    reg_data = (rtk_uint32)(*(rtk_uint16 *)pPortAbility);
+
+		if(0 == id || 1 == id)
+	    return rtl8367b_setAsicReg(RTL8367B_REG_DIGITAL_INTERFACE0_FORCE + id, reg_data);
+		else
+	    return rtl8367b_setAsicReg(RTL8367B_REG_DIGITAL_INTERFACE2_FORCE, reg_data);
+}
+
+/* Function Name:
+ *      rtk_port_macForceLinkExt_set
+ * Description:
+ *      Set external interface force linking configuration.
+ * Input:
+ *      port            - external port ID
+ *      mode            - external interface mode
+ *      pPortability    - port ability configuration
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK           - OK
+ *      RT_ERR_FAILED       - Failed
+ *      RT_ERR_SMI          - SMI access error
+ *      RT_ERR_INPUT 		- Invalid input parameters.
+ * Note:
+ *      This API can set external interface force mode properties.
+ *      The external interface can be set to:
+ *      - MODE_EXT_DISABLE,
+ *      - MODE_EXT_RGMII,
+ *      - MODE_EXT_MII_MAC,
+ *      - MODE_EXT_MII_PHY,
+ *      - MODE_EXT_TMII_MAC,
+ *      - MODE_EXT_TMII_PHY,
+ *      - MODE_EXT_GMII,
+ *      - MODE_EXT_RMII_MAC,
+ *      - MODE_EXT_RMII_PHY,
+ */
+rtk_api_ret_t rtk_port_macForceLinkExt_set(rtk_ext_port_t port, rtk_mode_ext_t mode, rtk_port_mac_ability_t *pPortability)
+{
+    rtk_api_ret_t retVal;
+    rtl8367b_port_ability_t ability;
+    rtk_uint32  reg, mask;
+
+    if (port >= EXT_PORT_END)
+        return RT_ERR_INPUT;
+
+    if (mode >=MODE_EXT_END)
+        return RT_ERR_INPUT;
+
+    if (mode == MODE_EXT_RGMII_33V)
+        return RT_ERR_INPUT;
+
+    if (pPortability->forcemode > 1 || pPortability->speed > 2 || pPortability->duplex > 1 ||
+       pPortability->link > 1 || pPortability->nway > 1 || pPortability->txpause > 1 || pPortability->rxpause > 1)
+        return RT_ERR_INPUT;
+
+    if(port == EXT_PORT_0)
+    {
+        reg = RTL8367B_REG_DIGITAL_INTERFACE_SELECT;
+        mask = RTL8367B_SELECT_GMII_0_MASK;
+    }
+    else if(port == EXT_PORT_1)
+    {
+        reg = RTL8367B_REG_DIGITAL_INTERFACE_SELECT;
+        mask = RTL8367B_SELECT_GMII_1_MASK;
+    }
+    else if(port == EXT_PORT_2)
+    {
+        reg = RTL8367B_REG_DIGITAL_INTERFACE_SELECT_1;
+        mask = RTL8367B_SELECT_RGMII_2_MASK;
+    }
+    else
+        return RT_ERR_INPUT;
+
+    if ((retVal = rtl8367b_setAsicPortExtMode(port, mode)) != RT_ERR_OK)
+        return retVal;
+
+    if ((retVal = rtl8367b_getAsicPortForceLinkExt( (rtk_uint32)port, &ability)) != RT_ERR_OK)
+        return retVal;
+
+    ability.forcemode = pPortability->forcemode;
+    ability.speed     = pPortability->speed;
+    ability.duplex    = pPortability->duplex;
+    ability.link      = pPortability->link;
+    ability.nway      = pPortability->nway;
+    ability.txpause   = pPortability->txpause;
+    ability.rxpause   = pPortability->rxpause;
+
+    if ((retVal = rtl8367b_setAsicPortForceLinkExt( (rtk_uint32)port, &ability)) != RT_ERR_OK)
+        return retVal;
+
+    return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtk_port_rgmiiDelayExt_set
+ * Description:
+ *      Set RGMII interface delay value for TX and RX.
+ * Input:
+ *      txDelay - TX delay value, 1 for delay 2ns and 0 for no-delay
+ *      rxDelay - RX delay value, 0~7 for delay setup.
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK           - OK
+ *      RT_ERR_FAILED       - Failed
+ *      RT_ERR_SMI          - SMI access error
+ *      RT_ERR_INPUT 		- Invalid input parameters.
+ * Note:
+ *      This API can set external interface 2 RGMII delay.
+ *      In TX delay, there are 2 selection: no-delay and 2ns delay.
+ *      In RX dekay, there are 8 steps for delay tunning. 0 for no-delay, and 7 for maximum delay.
+ */
+rtk_api_ret_t rtk_port_rgmiiDelayExt_set(rtk_ext_port_t port, rtk_data_t txDelay, rtk_data_t rxDelay)
+{
+    rtk_api_ret_t retVal;
+    rtk_uint32 regAddr, regData;
+
+    if ((txDelay > 1) || (rxDelay > 7))
+        return RT_ERR_INPUT;
+
+    if (port >= EXT_PORT_END)
+        return RT_ERR_INPUT;
+
+    if(port == EXT_PORT_0)
+        regAddr = RTL8367B_REG_EXT0_RGMXF;
+    else if(port == EXT_PORT_1)
+        regAddr = RTL8367B_REG_EXT1_RGMXF;
+    else if(port == EXT_PORT_2)
+        regAddr = RTL8367B_REG_EXT2_RGMXF;
+    else
+        return RT_ERR_INPUT;
+
+    if ((retVal = rtl8367b_getAsicReg(regAddr, &regData)) != RT_ERR_OK)
+        return retVal;
+
+    regData = (regData & 0xFFF0) | ((txDelay << 3) & 0x0008) | (rxDelay & 0x0007);
+
+    if ((retVal = rtl8367b_setAsicReg(regAddr, regData)) != RT_ERR_OK)
+        return retVal;
+
+    return RT_ERR_OK;
+}
+
+/* Function Name:
+ *      rtl8367b_setAsicIGMPStaticRouterPort
+ * Description:
+ *      Set IGMP static router port mask
+ * Input:
+ *      pmsk 	- Static portmask
+ * Output:
+ *      None
+ * Return:
+ *      RT_ERR_OK 			- Success
+ *      RT_ERR_SMI  		- SMI access error
+ *      RT_ERR_PORT_MASK  	- Invalid port mask
+ * Note:
+ *      None
+ */
+ret_t rtl8367b_setAsicIGMPStaticRouterPort(rtk_uint32 pmsk)
+{
+    if(pmsk > RTL8367B_PORTMASK)
+        return RT_ERR_PORT_MASK;
+
+    return rtl8367b_setAsicRegBits(RTL8367B_REG_IGMP_STATIC_ROUTER_PORT, RTL8367B_IGMP_STATIC_ROUTER_PORT_MASK, pmsk);
+}
+
+/* Function Name:
+ *      rtk_igmp_static_router_port_set
+ * Description:
+ *      Configure static router port
+ * Input:
+ *      portmask    - Static Port mask
+ * Output:
+ *      None.
+ * Return:
+ *      RT_ERR_OK              - OK
+ *      RT_ERR_FAILED          - Failed
+ *      RT_ERR_SMI             - SMI access error
+ *      RT_ERR_PORT_MASK       - Error parameter
+ * Note:
+ *      This API set static router port
+ */
+rtk_api_ret_t rtk_igmp_static_router_port_set(rtk_portmask_t portmask)
+{
+    rtk_api_ret_t retVal;
+
+    if ( portmask.bits[0] > RTK_MAX_PORT_MASK)
+        return RT_ERR_PORT_MASK;
+
+    if ((retVal = rtl8367b_setAsicIGMPStaticRouterPort(portmask.bits[0]))!=RT_ERR_OK)
+        return retVal;
+
+    return RT_ERR_OK;
+}
+
+void rtl_msleep(u32 msec)
+{
+		u32	i;
+
+		for(i=0;i<msec;i++) 
+		{
+				udelay(1000);
+		}
+}
+
+int rtl_sw_reset(u32 delay_msec)
+{
+		u16	bit9 = 0x200;
+
+		//printf("[%s:%d]\n",__func__,__LINE__);
+
+		// GPIO settings
+		// clear P2_ALTSEL0_BIT9
+		REG32(BSP_GPIO_P2_ALTSEL0) &= ~bit9;
+		// clear P2_ALTSEL1_BIT9
+		REG32(BSP_GPIO_P2_ALTSEL1) &= ~bit9;
+		// set P2_DIR_BIT9
+		REG32(BSP_GPIO_P2_DIR) |= bit9;
+		// set P2_OD_BIT9
+		REG32(BSP_GPIO_P2_OD) |= bit9;
+		// P2_OUT_BIT9, pull-high first
+		REG32(BSP_GPIO_P2_OUT) |= bit9;
+
+		// pull-low
+		REG32(BSP_GPIO_P2_OUT) &= ~bit9;
+
+		asm("sync");
+
+		// wait
+		if(delay_msec > 0)
+			rtl_msleep(delay_msec);
+
+		// pull-high
+		REG32(BSP_GPIO_P2_OUT) |= bit9;
+
+		asm("sync");
+
+		return 0;
+}
+
+#if 0
+u32 rtl_smi_read(u16 addr, u16 *data)
+{
+		/* Write address control code to register 31 */
+	  vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+    vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL0_REG, MDC_MDIO_ADDR_OP);
+		/* Write address to register 23 */
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_ADDRESS_REG, addr);
+		/* Write read control code to register 21 */
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL1_REG, MDC_MDIO_READ_OP);
+		/* Read data from register 25 */
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		*data = vr9_mdio_read(MDC_MDIO_DUMMY_ID, MDC_MDIO_DATA_READ_REG);
+
+		return 0;
+}
+
+u32 rtl_smi_write(u16 addr, u16 data)
+{
+		/* Write address control code to register 31 */
+	  vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL0_REG, MDC_MDIO_ADDR_OP);
+		/* Write address to register 23 */
+	  vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_ADDRESS_REG, addr);
+		/* Write data to register 24 */
+	  vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_DATA_WRITE_REG, data);
+		/* Write data control code to register 21 */
+	  vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_START_REG, MDC_MDIO_START_OP);
+		vr9_mdio_write(MDC_MDIO_DUMMY_ID, MDC_MDIO_CTRL1_REG, MDC_MDIO_WRITE_OP);
+
+		return 0;
+}
+
+
+int rtl_port_power(u16 port, u16 bOn)
+{
+		u16	addr;
+		u16	data;
+
+		addr = 0x2000 + (port<<5) + 0/*reg0*/;
+		
+		rtl_smi_read(addr, &data);
+		//printf("[%s:%d]reg[0x%x]=0x%x, ",__func__,__LINE__,addr,data);
+
+		if ( bOn ) // Normal operation
+			rtl_smi_write(addr, data & ~0x0800);
+		else // Power down
+			rtl_smi_write(addr, data | 0x0800);
+
+		//printf("write 0x%x into\n", bOn ? data & ~0x0800 : data | 0x0800);
+
+		return 0;
+}
+
+u16 rtl_phyreg_set(u16 phyNo, u16 phyAddr, u16 value)
+{
+		u32 regAddr;
+
+    if(phyNo > 0x4/*RTL8367B_PHY_INTERNALNOMAX*/)
+        return -1;//RT_ERR_PORT_ID;
+
+    if(phyAddr > 0x1F/*RTL8367B_PHY_REGNOMAX*/)
+        return -1;//RT_ERR_PHY_REG_ID;
+
+    regAddr = 0x2000 + (phyNo << 5) + phyAddr;
+
+    return (u16)rtl_smi_write(regAddr, value);
+}
+
+#endif
+
+#if 1
+int rtl_sw_init(void)
+{
+		int s32RetVal;
+		unsigned int i,phyNo,data;
+
+		unsigned char u8PortMode, u8TxDelay, u8RxDelay;
+
+		rtk_portmask_t stStaticRouterPortMask;
+
+		if(0 != (s32RetVal = rtk_switch_init()))
+		{
+				printf("rtk_switch_init error!, error = 0x%x\n", s32RetVal);
+
+				/* Power down PHY */
+				for(phyNo=0;phyNo<4;phyNo++)
+				{
+						if(0 != (s32RetVal = smi_read(0x2000+(phyNo<<5),&data)))
+						{
+								printf("[%s:%d] read PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+								//return RT_ERR_SMI;
+						}
+						else
+						{
+								if(0 != (s32RetVal = rtl8367b_setAsicPHYReg(phyNo,0x2000+(phyNo<<5),(data|0x0800))))
+								{
+										printf("[%s:%d] set PCS reg[0x%x] failed!!!\n",__func__,__LINE__,0x2000+(phyNo<<5));
+								}
+						}
+				}
+				
+				return -1;
+		}
+
+		for(i=EXT_PORT_1; i<EXT_PORT_END; i++)
+		{
+				if (i==EXT_PORT_1)	
+				{	
+						u8PortMode 	= 1;
+						u8TxDelay 	= 1;
+						u8RxDelay 	= 0;
+				}
+				else	
+				{
+						u8PortMode 	= 0;
+						u8TxDelay 	= 0;
+						u8RxDelay 	= 0;
+				}
+				
+				if(RT_ERR_OK !=	(s32RetVal = rtk_port_macForceLinkExt_set((rtk_port_t)i, (rtk_mode_ext_t)u8PortMode, (rtk_port_mac_ability_t *)&rtl8367_ext_port_cfg[i])))
+				{
+						printf("Set port %d force linking configuration mode %d failed! error = 0x%x\n", i, u8PortMode, s32RetVal);
+						return -1;
+				}
+
+				if(RT_ERR_OK != (s32RetVal = rtk_port_rgmiiDelayExt_set((rtk_ext_port_t)i, (rtk_data_t)u8TxDelay, (rtk_data_t)u8RxDelay)))
+				{
+						printf("Set extension port %d RGMII failed!, error = 0x%x\n", i, s32RetVal);
+						return -1;
+				}
+
+		}
+
+		stStaticRouterPortMask.bits[0] = (0x1<<6);
+		if(RT_ERR_OK != (s32RetVal = rtk_igmp_static_router_port_set(stStaticRouterPortMask)))
+		{
+				printf("Set IGMP static router port failed!, errno = 0x%x\n", s32RetVal);
+				return -1;
+		}
+		#if 0
+		if(RT_ERR_OK != (s32RetVal = rtk_l2_init()))
+		{
+				printf("Error enable L2 LUT, errno = 0x%x\n", s32RetVal);
+				return -1;
+		}
+
+		if(RT_ERR_OK != (s32RetVal = rtk_l2_ipMcastAddrLookup_set(LOOKUP_DIP)))
+		{
+				printf("Error enable L2 LUT IP look-up function, errno = 0x%x\n", s32RetVal);
+				return -1;
+		}
+		#endif
+		return 0;
+}
+#else
+int rtl_sw_init(void)
+{
+    u16 i;
+    u16 data;
+		u16 init_size;
+    u32 retVal;
+    u32 phyNo;
+		u32 regAddr;
+		
+		u16 (*init_para)[2];
+
+		#if defined(RTK_DBG)
+		printf("[%s:%d]\n",__func__,__LINE__);
+		#endif
+
+    if((retVal = rtl_smi_write(0x13C2, 0x0249)) != 0)
+    {
+				printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x13C2,retVal);
+				return retVal;
+		}
+        
+    if((retVal = rtl_smi_read(0x1301, &data)) != 0)
+    {
+				printf("[%s:%d] read reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x1301,retVal);
+				return retVal;
+    }
+		
+    if(data & 0xF000)
+    {
+        init_para = ChipData31;
+        init_size = (sizeof(ChipData31) / ((sizeof(u16))*2));
+    }
+    else
+    {
+        init_para = ChipData30;
+        init_size = (sizeof(ChipData30) / ((sizeof(u16))*2));
+    }
+
+    /* Analog parameter update. ID:0001 */
+    for(phyNo=0; phyNo<=3/*RTK_PHY_ID_MAX*/; phyNo++)
+    {
+		    if((retVal = rtl_phyreg_set(phyNo, 31, 0x7)) != 0)
+		    {
+						printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,phyNo,31);
+						return retVal;
+				}
+
+		    if((retVal = rtl_phyreg_set(phyNo, 30, 0x2c)) != 0)
+		    {
+						printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,phyNo,30);
+						return retVal;
+				}
+
+		    if((retVal = rtl_phyreg_set(phyNo, 25, 0x0504)) != 0)
+		    {
+						printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,phyNo,25);
+						return retVal;
+				}
+
+		    if((retVal = rtl_phyreg_set(phyNo, 31, 0x0)) != 0)
+		    {
+						printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,phyNo,31);
+						return retVal;
+				}
+    }
+
+		/* Init parameters */
+    for(i=0; i<init_size; i++)
+    {
+        if((retVal = rtl_smi_write((u16)init_para[i][0], (u16)init_para[i][1])) != 0)
+		    {
+						printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,(u16)init_para[i][0],retVal);
+						return retVal;
+				}
+    }
+
+    /* Analog parameter update. ID:0002 */
+    if((retVal = rtl_phyreg_set(1, 31, 0x2)) != 0)
+    {
+				printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,1,31);
+				return retVal;
+		}
+
+	  regAddr = 0x2000 + (1 << 5) + 17;
+    if((retVal = rtl_smi_read(regAddr, &data)) != 0)
+    {
+				printf("[%s:%d] read reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,regAddr,retVal);
+				return retVal;
+		}
+		
+    data |= 0x01E0;
+
+    if((retVal = rtl_phyreg_set(1, 17, data)) != 0)
+    {
+				printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,1,17);
+				return retVal;
+		}
+
+    if((retVal = rtl_phyreg_set(1, 31, 0)) != 0)
+    {
+				printf("[%s:%d] write phyNo=%d, reg=%d failed!, errno=%d\n",__func__,__LINE__,1,31);
+				return retVal;
+		}
+
+    if((retVal = rtl_smi_read(0x18e0, &data)) != 0)
+    {
+				printf("[%s:%d] read reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x18e0,retVal);
+				return retVal;
+		}
+		
+		data &= ~(0x0001);
+
+		if((retVal = rtl_smi_write(0x18e0, data)) != 0)
+    {
+				printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x18e0,retVal);
+				return retVal;
+		}
+
+		if((retVal = rtl_smi_write(0x1303, 0x0778)) != 0)
+    {
+				printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x1303,retVal);
+				return retVal;
+		}
+
+		if((retVal = rtl_smi_write(0x1304, 0x7777)) != 0)
+    {
+				printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x1304,retVal);
+				return retVal;
+		}
+
+		if((retVal = rtl_smi_write(0x13E2, 0x01FE)) != 0)
+    {
+				printf("[%s:%d] write reg[0x%x] failed!, errno=%d\n",__func__,__LINE__,0x13E2,retVal);
+				return retVal;
+		}
+
+    return 0;
+}
+#endif
+
+#endif /* CONFIG_DRIVER_VR9 */ /* ctc for RTL8367RB */
 
 
diff --git a/include/configs/lq_extra_env.h b/include/configs/lq_extra_env.h
index 373bb51..9b22fc9 100755
--- a/include/configs/lq_extra_env.h
+++ b/include/configs/lq_extra_env.h
@@ -44,6 +44,13 @@
   "update_uboot=" CONFIG_UPDATE_UBOOT "\0"
   "update_kernel=" CONFIG_UPDATE_KERNEL "\0"
   "update_rootfs=" CONFIG_UPDATE_ROOTFS "\0"
+  "update_all=" CONFIG_UPDATE_ALL "\0"
+ #ifdef CONFIG_DUAL_IMAGE
+  "update_kernel2=" CONFIG_UPDATE_KERNEL2 "\0"
+  "update_rootfs2=" CONFIG_UPDATE_ROOTFS2 "\0"
+  "update_all2=" CONFIG_UPDATE_ALL2 "\0"
+  "update_dual=" CONFIG_UPDATE_DUAL "\0"
+ #endif
 #ifndef CONFIG_FIRMWARE_IN_ROOTFS
   "update_firmware=" CONFIG_UPDATE_FIRMWARE "\0"
 #endif
@@ -52,6 +59,7 @@
   "update_totalimage=" CONFIG_UPDATE_TOTALIMAGE "\0"
 #endif
 #ifdef CONFIG_UPDATE_SYSCONFIG
+  "sysconfig=" CONFIG_SYSCONFIG "\0"
   "update_sysconfig=" CONFIG_UPDATE_SYSCONFIG "\0"
 #endif
 #ifndef CONFIG_ENV_IS_NOWHERE
@@ -75,37 +83,68 @@
   "f_uboot_size=" MK_STR(IFX_CFG_FLASH_UBOOT_IMAGE_SIZE) "\0"
   "f_ubootconfig_addr=" MK_STR(IFX_CFG_FLASH_UBOOT_CFG_START_ADDR) "\0"
   "f_ubootconfig_size=" MK_STR(IFX_CFG_FLASH_UBOOT_CFG_SIZE) "\0"
-  "f_ubootconfig_end=" MK_STR(IFX_CFG_FLASH_UBOOT_CFG_END_ADDR) "\0"
+  "f_ubootconfig_end="  MK_STR(IFX_CFG_FLASH_UBOOT_CFG_END_ADDR) "\0"
   "f_kernel_addr=" MK_STR(IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR) "\0"
   "f_kernel_size=" MK_STR(IFX_CFG_FLASH_KERNEL_IMAGE_SIZE) "\0"
-  "f_kernel_end=" MK_STR(IFX_CFG_FLASH_KERNEL_IMAGE_END_ADDR) "\0"
+  "f_kernel_end="  MK_STR(IFX_CFG_FLASH_KERNEL_IMAGE_END_ADDR) "\0"
   "f_rootfs_addr=" MK_STR(IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR) "\0"
   "f_rootfs_size=" MK_STR(IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE) "\0"
-  "f_rootfs_end=" MK_STR(IFX_CFG_FLASH_ROOTFS_IMAGE_END_ADDR) "\0"
+  "f_rootfs_end="  MK_STR(IFX_CFG_FLASH_ROOTFS_IMAGE_END_ADDR) "\0"
 #ifdef CONFIG_DUAL_IMAGE
   "f_kernel2_addr=" MK_STR(IFX_CFG_FLASH_KERNEL2_IMAGE_START_ADDR) "\0"
   "f_kernel2_size=" MK_STR(IFX_CFG_FLASH_KERNEL2_IMAGE_SIZE) "\0"
-  "f_kernel2_end=" MK_STR(IFX_CFG_FLASH_KERNEL2_IMAGE_END_ADDR) "\0"
+  "f_kernel2_end="  MK_STR(IFX_CFG_FLASH_KERNEL2_IMAGE_END_ADDR) "\0"
   "f_rootfs2_addr=" MK_STR(IFX_CFG_FLASH_ROOTFS2_IMAGE_START_ADDR) "\0"
   "f_rootfs2_size=" MK_STR(IFX_CFG_FLASH_ROOTFS2_IMAGE_SIZE) "\0"
-  "f_rootfs2_end=" MK_STR(IFX_CFG_FLASH_ROOTFS2_IMAGE_END_ADDR) "\0"
+  "f_rootfs2_end="  MK_STR(IFX_CFG_FLASH_ROOTFS2_IMAGE_END_ADDR) "\0"
   "rootfsmtd2="CONFIG_ROOTFSMTD2"\0"
   "flashargs2=" CONFIG_FLASHARGS2 "\0"
   "flash_flash2=" CONFIG_FLASH_FLASH2 "\0"
 #endif
-#ifdef IFX_CFG_FLASH_VOICE_MAIL_BLOCK_NAME
-  "f_voicemail_addr=" MK_STR(IFX_CFG_FLASH_VOICE_MAIL_START_ADDR) "\0"
-  "f_voicemail_size=" MK_STR(IFX_CFG_FLASH_VOICE_MAIL_SIZE) "\0"
-  "f_voicemail_end=" MK_STR(IFX_CFG_FLASH_VOICE_MAIL_END_ADDR) "\0"
+#ifdef IFX_CFG_FLASH_LCD_IMAGE_BLOCK_NAME
+  "f_lcdimage_addr=" MK_STR(IFX_CFG_FLASH_LCD_IMAGE_START_ADDR) "\0"
+  "f_lcdimage_size=" MK_STR(IFX_CFG_FLASH_LCD_IMAGE_SIZE) "\0"
+  "f_lcdimage_end="  MK_STR(IFX_CFG_FLASH_LCD_IMAGE_END_ADDR) "\0"
+  "lcdimage=lcd_boot_image\0"
+  "update_lcdimage=tftp $(loadaddr) $(lcdimage) ; nand erase $(f_lcdimage_addr) $(f_lcdimage_size) ; nand write $(loadaddr) $(f_lcdimage_addr) $(filesize)\0"
+  "bootlcd=1\0"
+#endif
+#ifdef IFX_CFG_FLASH_MFG_CFG_BLOCK_NAME
+  "f_mfgconfig_addr=" MK_STR(IFX_CFG_FLASH_MFG_CFG_START_ADDR) "\0"
+  "f_mfgconfig_size=" MK_STR(IFX_CFG_FLASH_MFG_CFG_SIZE) "\0"
+  "f_mfgconfig_end="  MK_STR(IFX_CFG_FLASH_MFG_CFG_END_ADDR) "\0"
+#endif
+#ifdef IFX_CFG_FLASH_SIP_DATA_BLOCK_NAME
+  "f_sipdata_addr=" MK_STR(IFX_CFG_FLASH_SIP_DATA_START_ADDR) "\0"
+  "f_sipdata_size=" MK_STR(IFX_CFG_FLASH_SIP_DATA_SIZE) "\0"
+  "f_sipdata_end="  MK_STR(IFX_CFG_FLASH_SIP_DATA_END_ADDR) "\0"
+#endif
+#ifdef IFX_CFG_FLASH_VOICE_BLOCK_NAME
+  "f_voice_addr=" MK_STR(IFX_CFG_FLASH_VOICE_START_ADDR) "\0"
+  "f_voice_size=" MK_STR(IFX_CFG_FLASH_VOICE_SIZE) "\0"
+  "f_voice_end="  MK_STR(IFX_CFG_FLASH_VOICE_END_ADDR) "\0"
+#endif
+#ifdef IFX_CFG_FLASH_MISC_BLOCK_NAME
+  "f_misc_addr=" MK_STR(IFX_CFG_FLASH_MISC_START_ADDR) "\0"
+  "f_misc_size=" MK_STR(IFX_CFG_FLASH_MISC_SIZE) "\0"
+  "f_misc_end="  MK_STR(IFX_CFG_FLASH_MISC_END_ADDR) "\0"
 #endif
 #ifndef CONFIG_FIRMWARE_IN_ROOTFS
   "f_firmware_addr=" MK_STR(IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR) "\0"
   "f_firmware_size=" MK_STR(IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE) "\0"
 #endif
+  "f_tmp1_addr=" MK_STR(IFX_CFG_FLASH_TMP1_START_ADDR) "\0"
+  "f_tmp1_size=" MK_STR(IFX_CFG_FLASH_TMP1_SIZE) "\0"
+  "f_tmp1_end=" MK_STR(IFX_CFG_FLASH_TMP1_END_ADDR) "\0"
+  "f_tmp2_addr=" MK_STR(IFX_CFG_FLASH_TMP2_START_ADDR) "\0"
+  "f_tmp2_size=" MK_STR(IFX_CFG_FLASH_TMP2_SIZE) "\0"
+  "f_tmp2_end=" MK_STR(IFX_CFG_FLASH_TMP2_END_ADDR) "\0"
   "f_sysconfig_addr=" MK_STR(IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR) "\0"
   "f_sysconfig_size=" MK_STR(IFX_CFG_FLASH_SYSTEM_CFG_SIZE) "\0"
+  "f_sysconfig_end=" MK_STR(IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR) "\0"
   "f_fwdiag_addr=" MK_STR(IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR) "\0"
   "f_fwdiag_size=" MK_STR(IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE) "\0"
+  "f_fwdiag_end=" MK_STR(IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR) "\0"
 #if 0
   "f_calibration_addr= " MK_STR(IFX_CFG_FLASH_CALIBRATION_START_ADDR) "\0"
   "f_calibration_size=" MK_STR(IFX_CFG_FLASH_CALIBRATION_CFG_SIZE) "\0"
@@ -123,6 +162,9 @@
 #endif //CONFIG_ENV_IS_NOWHERE
 #ifdef CONFIG_UPDATE_JFFS2IMAGE
   "update_jffs2image=" CONFIG_UPDATE_JFFS2IMAGE "\0"
+ #ifdef CONFIG_DUAL_IMAGE
+  "update_jffs2image2=" CONFIG_UPDATE_JFFS2IMAGE2 "\0"
+ #endif
 #endif
 #ifdef CONFIG_UPDATE_FLASH
   "update_flash=" CONFIG_UPDATE_FLASH "\0"
@@ -130,3 +172,4 @@
   "sw_version=" CONFIG_SW_VERSION "\0"
   "hw_version=" CONFIG_HW_VERSION "\0"
   "serial=" CONFIG_SERIAL "\0"
+  "wpa_key=1234567890\0"
diff --git a/include/configs/vr9.h b/include/configs/vr9.h
index 2d1061e..b680c75 100755
--- a/include/configs/vr9.h
+++ b/include/configs/vr9.h
@@ -87,7 +87,7 @@
 #endif
 
 #if 1 /* ctc */
- #define CONFIG_BOOTDELAY	3	/* autoboot after 3 seconds	*/
+ #define CONFIG_BOOTDELAY	1	/* autoboot after 1 seconds	*/
 #else
  #define CONFIG_BOOTDELAY	5	/* autoboot after 5 seconds	*/
 #endif
@@ -238,9 +238,7 @@
  #if CONFIG_SYS_NAND_PAGE_SIZE <= 512
   #define CONFIG_SYS_NAND_BLOCK_SIZE  ( CONFIG_SYS_NAND_PAGE_SIZE << 5 ) /* NAND chip block size       */
  #else
-  #if CONFIG_NAND_FLASH_SIZE>=128
-  #define CONFIG_SYS_NAND_BLOCK_SIZE  0x20000 /* NAND chip block size, some flashes are 0x40000       */
-  #endif
+  #define CONFIG_SYS_NAND_BLOCK_SIZE  ( CONFIG_SYS_NAND_PAGE_SIZE << 7 ) /* NAND chip block size       */
  #endif
 #else
  #define CONFIG_SYS_NAND_PAGE_SIZE   ( 2<<10 )   /* NAND chip page size        */
diff --git a/include/configs/vr9_cfg.h b/include/configs/vr9_cfg.h
index b12b055..2c11e50 100755
--- a/include/configs/vr9_cfg.h
+++ b/include/configs/vr9_cfg.h
@@ -171,7 +171,7 @@
   #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
 
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB0040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB0020000
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
 
@@ -1420,17 +1420,16 @@
   #define IFX_CFG_FLASH_PARTITIONS_INFO                                 \
         "part0_begin=0x00000000\0"                                      \
         "part1_begin=0x00040000\0"                                      \
-        "part2_begin=0x07A00000\0"                                      \
-        "part3_begin=0x07D00000\0"                                      \
-        "part4_begin=0x07D80000\0"                                      \
-        "part5_begin=0x07DC0000\0"                                      \
-        "part6_begin=0x07F00000\0"                                      \
-        "total_part=7\0"
+        "part2_begin=0x002C0000\0"                                      \
+        "part3_begin=0x07000000\0"                                      \
+        "part4_begin=0x07040000\0"                                      \
+        "part5_begin=0x07080000\0"                                      \
+        "total_part=6\0"
 
   #define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                \
         "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
-        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
-        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block1=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
         "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
         "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
         "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
@@ -1438,41 +1437,38 @@
 
   #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
   #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
-  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x00040000
-  #define IFX_CFG_FLASH_UBOOT_IMAGE_END_ADDR              0x0003FFFF
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x40000
   #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
 
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00040000
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x079C0000
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_END_ADDR             0x079FFFFF
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
-
   #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x07A00000
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x00300000
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_END_ADDR             0x07CFFFFF
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x00040000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x002C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x06D40000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
 
   #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
-  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x07D00000
-  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x00100000
-  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x07DFFFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x7000000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x40000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x0703FFFF
   #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock3"
 
   #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
-  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x07E00000
-  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x00100000
-  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x07EFFFFF
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x7040000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x0704FFFF
   #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock4"
 
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
-  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x07F00000
-  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x00080000
-  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x07F7FFFF
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x07080000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x40000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x070BFFFF
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_MTDBLOCK_NAME       "/dev/mtdblock5"
 
-  #define IFX_CFG_FLASH_END_ADDR                          0x07FFFFFF
+  #define IFX_CFG_FLASH_END_ADDR                         0x07FFFFFF
 
 #elif (IFX_CONFIG_FLASH_SIZE == 512)
 
@@ -1538,29 +1534,41 @@
  #else /* CONFIG_DUAL_IMAGE */
 
   #define IFX_CFG_FLASH_PARTITIONS_INFO							\
-        "part0_begin=0x00000000\0" /* uboot, 256KB*/			\
-        "part1_begin=0x00040000\0" /* rootfs, 30M*/				\
-        "part2_begin=0x01E40000\0" /* kernel, 4M*/				\
-        "part3_begin=0x02240000\0" /* rootfs2, 30M*/			\
-        "part4_begin=0x04040000\0" /* kernel2, 4M*/				\
-        "part5_begin=0x04440000\0" /* sysconfig, 1M*/		\
-        "part6_begin=0x04540000\0" /* ubootconfig, 1M*/		\
-        "part7_begin=0x04640000\0" /* fwdiag, 768K*/			\
-        "part8_begin=0x04700000\0" /* voicemail, 440M*/	\
-        "part9_begin=0x1FF00000\0" /* BBT, 1M*/				\
-        "total_part=10\0"
+        "part0_begin=0x00000000\0"  /* uboot, 256K*/			\
+        "part1_begin=0x00040000\0"  /* rootfs, 60M*/			\
+        "part2_begin=0x03C40000\0"  /* kernel, 5M*/				\
+        "part3_begin=0x04140000\0"  /* tmp1, 1M*/				\
+        "part4_begin=0x04240000\0"  /* tmp2, 2M*/				\
+        "part5_begin=0x04440000\0"  /* sysconfig, 1M*/			\
+        "part6_begin=0x04540000\0"  /* ubootconfig, 1M*/		\
+        "part7_begin=0x04640000\0"  /* fwdiag, 768K*/			\
+        "part8_begin=0x04700000\0"  /* lcdimage, 3M*/			\
+        "part9_begin=0x04A00000\0"  /* mfgconfig, 1M*/			\
+        "part10_begin=0x04B00000\0" /* sipdata, 1M*/			\
+        "part11_begin=0x04C00000\0" /* voice, 64M*/				\
+        "part12_begin=0x08C00000\0" /* misc, 306M*/				\
+        "part13_begin=0x1BE00000\0"  /* rootfs2, 60M*/			\
+        "part14_begin=0x1FA00000\0"  /* kernel2, 5M*/			\
+        "part15_begin=0x1FF00000\0" /* BBT, 1M*/				\
+        "total_part=16\0"
 
   #define IFX_CFG_FLASH_DATA_BLOCKS_INFO							\
         "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"	\
         "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"	\
         "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"	\
-        "data_block3=" IFX_CFG_FLASH_ROOTFS2_IMAGE_BLOCK_NAME "\0"	\
-        "data_block4=" IFX_CFG_FLASH_KERNEL2_IMAGE_BLOCK_NAME "\0"	\
+        "data_block3=" IFX_CFG_FLASH_TMP1_BLOCK_NAME "\0"			\
+        "data_block4=" IFX_CFG_FLASH_TMP2_BLOCK_NAME "\0"			\
         "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"		\
         "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"		\
         "data_block7=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"	\
-        "data_block8=" IFX_CFG_FLASH_VOICE_MAIL_BLOCK_NAME "\0"		\
-        "total_db=9\0"
+        "data_block8=" IFX_CFG_FLASH_LCD_IMAGE_BLOCK_NAME "\0"		\
+        "data_block9=" IFX_CFG_FLASH_MFG_CFG_BLOCK_NAME "\0"		\
+        "data_block10=" IFX_CFG_FLASH_SIP_DATA_BLOCK_NAME "\0"		\
+        "data_block11=" IFX_CFG_FLASH_VOICE_BLOCK_NAME "\0"			\
+        "data_block12=" IFX_CFG_FLASH_MISC_BLOCK_NAME "\0"			\
+        "data_block13=" IFX_CFG_FLASH_ROOTFS2_IMAGE_BLOCK_NAME "\0"	\
+        "data_block14=" IFX_CFG_FLASH_KERNEL2_IMAGE_BLOCK_NAME "\0"	\
+        "total_db=15\0"
 
   #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
   #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
@@ -1570,28 +1578,28 @@
 
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00040000
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x01E00000
-  #define IFX_CFG_FLASH_ROOTFS_IMAGE_END_ADDR             0x01E3FFFF
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x03C00000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_END_ADDR             0x03C3FFFF
   #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
 
   #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x01E40000
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x00400000
-  #define IFX_CFG_FLASH_KERNEL_IMAGE_END_ADDR             0x0223FFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x03C40000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x00500000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_END_ADDR             0x0443FFFF
   #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
 
-  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_BLOCK_NAME          "rootfs2"
-  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_START_ADDR          0x02240000
-  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_SIZE                0x01E00000
-  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_END_ADDR            0x0403FFFF
-  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock3"
-
-  #define IFX_CFG_FLASH_KERNEL2_IMAGE_BLOCK_NAME          "kernel2"
-  #define IFX_CFG_FLASH_KERNEL2_IMAGE_START_ADDR          0x04040000
-  #define IFX_CFG_FLASH_KERNEL2_IMAGE_SIZE                0x00400000
-  #define IFX_CFG_FLASH_KERNEL2_IMAGE_END_ADDR            0x0443FFFF
-  #define IFX_CFG_FLASH_KERNEL2_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock4"
-
+  #define IFX_CFG_FLASH_TMP1_BLOCK_NAME           "tmp1"
+  #define IFX_CFG_FLASH_TMP1_START_ADDR           0x04140000
+  #define IFX_CFG_FLASH_TMP1_SIZE                 0x00100000
+  #define IFX_CFG_FLASH_TMP1_END_ADDR             0x0423FFFF
+  #define IFX_CFG_FLASH_TMP1_MTDBLOCK_NAME        "/dev/mtdblock3"
+  
+  #define IFX_CFG_FLASH_TMP2_BLOCK_NAME           "tmp2"
+  #define IFX_CFG_FLASH_TMP2_START_ADDR           0x04240000
+  #define IFX_CFG_FLASH_TMP2_SIZE                 0x00200000
+  #define IFX_CFG_FLASH_TMP2_END_ADDR             0x0433FFFF
+  #define IFX_CFG_FLASH_TMP2_MTDBLOCK_NAME        "/dev/mtdblock4"
+  
   #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
   #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x04440000
   #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x00100000
@@ -1607,15 +1615,51 @@
 
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x04640000
-  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x000C0000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x00100000
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x046FFFFF
   #define IFX_CFG_FLASH_FIRMWARE_DIAG_MTDBLOCK_NAME       "/dev/mtdblock7"
 
-  #define IFX_CFG_FLASH_VOICE_MAIL_BLOCK_NAME             "voicemail"
-  #define IFX_CFG_FLASH_VOICE_MAIL_START_ADDR             0x04700000
-  #define IFX_CFG_FLASH_VOICE_MAIL_SIZE                   0x1B800000
-  #define IFX_CFG_FLASH_VOICE_MAIL_END_ADDR               0x1FEFFFFF
-  #define IFX_CFG_FLASH_VOICE_MAIL_MTDBLOCK_NAME          "/dev/mtdblock8"
+  #define IFX_CFG_FLASH_LCD_IMAGE_BLOCK_NAME			"lcdimage"
+  #define IFX_CFG_FLASH_LCD_IMAGE_START_ADDR			0x04700000
+  #define IFX_CFG_FLASH_LCD_IMAGE_SIZE					0x00300000
+  #define IFX_CFG_FLASH_LCD_IMAGE_END_ADDR				0x049FFFFF
+  #define IFX_CFG_FLASH_LCD_IMAGE_MTDBLOCK_NAME			"/dev/mtdblock8"
+
+  #define IFX_CFG_FLASH_MFG_CFG_BLOCK_NAME				"mfgconfig"
+  #define IFX_CFG_FLASH_MFG_CFG_START_ADDR				0x04A00000
+  #define IFX_CFG_FLASH_MFG_CFG_SIZE					0x00100000
+  #define IFX_CFG_FLASH_MFG_CFG_END_ADDR				0x04AFFFFF
+  #define IFX_CFG_FLASH_MFG_CFG_MTDBLOCK_NAME			"/dev/mtdblock9"
+
+  #define IFX_CFG_FLASH_SIP_DATA_BLOCK_NAME				"sipdata"
+  #define IFX_CFG_FLASH_SIP_DATA_START_ADDR				0x04B00000
+  #define IFX_CFG_FLASH_SIP_DATA_SIZE 					0x00100000
+  #define IFX_CFG_FLASH_SIP_DATA_END_ADDR				0x04BFFFFF
+  #define IFX_CFG_FLASH_SIP_DATA_MTDBLOCK_NAME			"/dev/mtdblock10"
+
+  #define IFX_CFG_FLASH_VOICE_BLOCK_NAME				"voice"
+  #define IFX_CFG_FLASH_VOICE_START_ADDR				0x04C00000
+  #define IFX_CFG_FLASH_VOICE_SIZE 						0x04000000
+  #define IFX_CFG_FLASH_VOICE_END_ADDR					0x08BFFFFF
+  #define IFX_CFG_FLASH_VOICE_MTDBLOCK_NAME				"/dev/mtdblock11"
+
+  #define IFX_CFG_FLASH_MISC_BLOCK_NAME					"misc"
+  #define IFX_CFG_FLASH_MISC_START_ADDR					0x08C00000
+  #define IFX_CFG_FLASH_MISC_SIZE						0x13200000
+  #define IFX_CFG_FLASH_MISC_END_ADDR					0x1BDFFFFF
+  #define IFX_CFG_FLASH_MISC_MTDBLOCK_NAME				"/dev/mtdblock12"
+
+  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_BLOCK_NAME          "rootfs2"
+  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_START_ADDR          0x1BE00000
+  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_SIZE                0x03C00000
+  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_END_ADDR            0x1F9FFFFF
+  #define IFX_CFG_FLASH_ROOTFS2_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock13"
+
+  #define IFX_CFG_FLASH_KERNEL2_IMAGE_BLOCK_NAME          "kernel2"
+  #define IFX_CFG_FLASH_KERNEL2_IMAGE_START_ADDR          0x1FA00000
+  #define IFX_CFG_FLASH_KERNEL2_IMAGE_SIZE                0x00500000
+  #define IFX_CFG_FLASH_KERNEL2_IMAGE_END_ADDR            0x1FEFFFFF
+  #define IFX_CFG_FLASH_KERNEL2_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock14"
 
   #define IFX_CFG_FLASH_END_ADDR                          0x1FFFFFFF
 
diff --git a/include/rtk_error.h b/include/rtk_error.h
new file mode 100644
index 0000000..7a351bc
--- /dev/null
+++ b/include/rtk_error.h
@@ -0,0 +1,225 @@
+/*
+ * Copyright(c) Realtek Semiconductor Corporation, 2008
+ * All rights reserved.
+ *
+ * $Revision: 28599 $
+ * $Date: 2012-05-07 09:41:37 +0800 (星期一, 07 五月 2012) $
+ *
+ * Purpose : Definition the error number in the SDK.
+ *
+ * Feature : error definition
+ *
+ */
+
+#ifndef __COMMON_RT_ERROR_H__
+#define __COMMON_RT_ERROR_H__
+
+/*
+ * Include Files
+ */
+
+/*
+ * Data Type Declaration
+ */
+typedef enum rt_error_code_e
+{
+    RT_ERR_FAILED = -1,                             /* General Error                                                                    */
+
+    /* 0x0000xxxx for common error code */
+    RT_ERR_OK = 0,                                  /* 0x00000000, OK                                                                   */
+    RT_ERR_INPUT,                                   /* 0x00000001, invalid input parameter                                              */
+    RT_ERR_UNIT_ID,                                 /* 0x00000002, invalid unit id                                                      */
+    RT_ERR_PORT_ID,                                 /* 0x00000003, invalid port id                                                      */
+    RT_ERR_PORT_MASK,                               /* 0x00000004, invalid port mask                                                    */
+    RT_ERR_PORT_LINKDOWN,                           /* 0x00000005, link down port status                                                */
+    RT_ERR_ENTRY_INDEX,                             /* 0x00000006, invalid entry index                                                  */
+    RT_ERR_NULL_POINTER,                            /* 0x00000007, input parameter is null pointer                                      */
+    RT_ERR_QUEUE_ID,                                /* 0x00000008, invalid queue id                                                     */
+    RT_ERR_QUEUE_NUM,                               /* 0x00000009, invalid queue number                                                 */
+    RT_ERR_BUSYWAIT_TIMEOUT,                        /* 0x0000000a, busy watting time out                                                */
+    RT_ERR_MAC,                                     /* 0x0000000b, invalid mac address                                                  */
+    RT_ERR_OUT_OF_RANGE,                            /* 0x0000000c, input parameter out of range                                         */
+    RT_ERR_CHIP_NOT_SUPPORTED,                      /* 0x0000000d, functions not supported by this chip model                           */
+    RT_ERR_SMI,                                     /* 0x0000000e, SMI error                                                            */
+    RT_ERR_NOT_INIT,                                /* 0x0000000f, The module is not initial                                            */
+    RT_ERR_CHIP_NOT_FOUND,                          /* 0x00000010, The chip can not found                                               */
+    RT_ERR_NOT_ALLOWED,                             /* 0x00000011, actions not allowed by the function                                  */
+    RT_ERR_DRIVER_NOT_FOUND,                        /* 0x00000012, The driver can not found                                             */
+    RT_ERR_SEM_LOCK_FAILED,                         /* 0x00000013, Failed to lock semaphore                                             */
+    RT_ERR_SEM_UNLOCK_FAILED,                       /* 0x00000014, Failed to unlock semaphore                                           */
+    RT_ERR_ENABLE,                                  /* 0x00000015, invalid enable parameter                                             */
+    RT_ERR_TBL_FULL,                                /* 0x00000016, input table full                                                     */
+
+    /* 0x0001xxxx for vlan */
+    RT_ERR_VLAN_VID = 0x00010000,                   /* 0x00010000, invalid vid                                                          */
+    RT_ERR_VLAN_PRIORITY,                           /* 0x00010001, invalid 1p priority                                                  */
+    RT_ERR_VLAN_EMPTY_ENTRY,                        /* 0x00010002, emtpy entry of vlan table                                            */
+    RT_ERR_VLAN_ACCEPT_FRAME_TYPE,                  /* 0x00010003, invalid accept frame type                                            */
+    RT_ERR_VLAN_EXIST,                              /* 0x00010004, vlan is exist                                                        */
+    RT_ERR_VLAN_ENTRY_NOT_FOUND,                    /* 0x00010005, specified vlan entry not found                                       */
+    RT_ERR_VLAN_PORT_MBR_EXIST,                     /* 0x00010006, member port exist in the specified vlan                              */
+    RT_ERR_VLAN_PROTO_AND_PORT,                     /* 0x00010008, invalid protocol and port based vlan                              */
+
+    /* 0x0002xxxx for svlan */
+    RT_ERR_SVLAN_ENTRY_INDEX = 0x00020000,          /* 0x00020000, invalid svid entry no                                                */
+    RT_ERR_SVLAN_ETHER_TYPE,                        /* 0x00020001, invalid SVLAN ether type                                             */
+    RT_ERR_SVLAN_TABLE_FULL,                        /* 0x00020002, no empty entry in SVLAN table                                        */
+    RT_ERR_SVLAN_ENTRY_NOT_FOUND,                   /* 0x00020003, specified svlan entry not found                                      */
+    RT_ERR_SVLAN_EXIST,                             /* 0x00020004, SVLAN entry is exist                                                 */
+    RT_ERR_SVLAN_VID,                               /* 0x00020005, invalid svid                                                         */
+
+    /* 0x0003xxxx for MSTP */
+    RT_ERR_MSTI = 0x00030000,                       /* 0x00030000, invalid msti                                                         */
+    RT_ERR_MSTP_STATE,                              /* 0x00030001, invalid spanning tree status                                         */
+    RT_ERR_MSTI_EXIST,                              /* 0x00030002, MSTI exist                                                           */
+    RT_ERR_MSTI_NOT_EXIST,                          /* 0x00030003, MSTI not exist                                                       */
+
+    /* 0x0004xxxx for BUCKET */
+    RT_ERR_TIMESLOT = 0x00040000,                   /* 0x00040000, invalid time slot                                                    */
+    RT_ERR_TOKEN,                                   /* 0x00040001, invalid token amount                                                 */
+    RT_ERR_RATE,                                    /* 0x00040002, invalid rate                                                         */
+    RT_ERR_TICK,                                    /* 0x00040003, invalid tick                                                 */
+
+    /* 0x0005xxxx for RMA */
+    RT_ERR_RMA_ADDR = 0x00050000,                   /* 0x00050000, invalid rma mac address                                              */
+    RT_ERR_RMA_ACTION,                              /* 0x00050001, invalid rma action                                                   */
+
+    /* 0x0006xxxx for L2 */
+    RT_ERR_L2_HASH_KEY = 0x00060000,                /* 0x00060000, invalid L2 Hash key                                                  */
+    RT_ERR_L2_HASH_INDEX,                           /* 0x00060001, invalid L2 Hash index                                                */
+    RT_ERR_L2_CAM_INDEX,                            /* 0x00060002, invalid L2 CAM index                                                 */
+    RT_ERR_L2_ENRTYSEL,                             /* 0x00060003, invalid EntrySel                                                     */
+    RT_ERR_L2_INDEXTABLE_INDEX,                     /* 0x00060004, invalid L2 index table(=portMask table) index                        */
+    RT_ERR_LIMITED_L2ENTRY_NUM,                     /* 0x00060005, invalid limited L2 entry number                                      */
+    RT_ERR_L2_AGGREG_PORT,                          /* 0x00060006, this aggregated port is not the lowest physical
+                                                                   port of its aggregation group                                        */
+    RT_ERR_L2_FID,                                  /* 0x00060007, invalid fid                                                          */
+    RT_ERR_L2_VID,                                 /* 0x00060008, invalid cvid                                                         */
+    RT_ERR_L2_NO_EMPTY_ENTRY,                       /* 0x00060009, no empty entry in L2 table                                           */
+    RT_ERR_L2_ENTRY_NOTFOUND,                       /* 0x0006000a, specified entry not found                                            */
+    RT_ERR_L2_INDEXTBL_FULL,                        /* 0x0006000b, the L2 index table is full                                           */
+    RT_ERR_L2_INVALID_FLOWTYPE,                     /* 0x0006000c, invalid L2 flow type                                                 */
+    RT_ERR_L2_L2UNI_PARAM,                          /* 0x0006000d, invalid L2 unicast parameter                                         */
+    RT_ERR_L2_L2MULTI_PARAM,                        /* 0x0006000e, invalid L2 multicast parameter                                       */
+    RT_ERR_L2_IPMULTI_PARAM,                        /* 0x0006000f, invalid L2 ip multicast parameter                                    */
+    RT_ERR_L2_PARTIAL_HASH_KEY,                     /* 0x00060010, invalid L2 partial Hash key                                          */
+    RT_ERR_L2_EMPTY_ENTRY,                          /* 0x00060011, the entry is empty(invalid)                                          */
+    RT_ERR_L2_FLUSH_TYPE,                           /* 0x00060012, the flush type is invalid                                            */
+    RT_ERR_L2_NO_CPU_PORT,                          /* 0x00060013, CPU port not exist                                                   */
+
+    /* 0x0007xxxx for FILTER (PIE) */
+    RT_ERR_FILTER_BLOCKNUM = 0x00070000,            /* 0x00070000, invalid block number                                                 */
+    RT_ERR_FILTER_ENTRYIDX,                         /* 0x00070001, invalid entry index                                                  */
+    RT_ERR_FILTER_CUTLINE,                          /* 0x00070002, invalid cutline value                                                */
+    RT_ERR_FILTER_FLOWTBLBLOCK,                     /* 0x00070003, block belongs to flow table                                          */
+    RT_ERR_FILTER_INACLBLOCK,                       /* 0x00070004, block belongs to ingress ACL                                         */
+    RT_ERR_FILTER_ACTION,                           /* 0x00070005, action doesn't consist to entry type                                 */
+    RT_ERR_FILTER_INACL_RULENUM,                    /* 0x00070006, invalid ACL rulenum                                                  */
+    RT_ERR_FILTER_INACL_TYPE,                       /* 0x00070007, entry type isn't an ingress ACL rule                                 */
+    RT_ERR_FILTER_INACL_EXIST,                      /* 0x00070008, ACL entry is already exit                                            */
+    RT_ERR_FILTER_INACL_EMPTY,                      /* 0x00070009, ACL entry is empty                                                   */
+    RT_ERR_FILTER_FLOWTBL_TYPE,                     /* 0x0007000a, entry type isn't an flow table rule                                  */
+    RT_ERR_FILTER_FLOWTBL_RULENUM,                  /* 0x0007000b, invalid flow table rulenum                                           */
+    RT_ERR_FILTER_FLOWTBL_EMPTY,                    /* 0x0007000c, flow table entry is empty                                            */
+    RT_ERR_FILTER_FLOWTBL_EXIST,                    /* 0x0007000d, flow table entry is already exist                                    */
+    RT_ERR_FILTER_METER_ID,                         /* 0x0007000e, invalid metering id                                                  */
+    RT_ERR_FILTER_LOG_ID,                           /* 0x0007000f, invalid log id                                                       */
+    RT_ERR_FILTER_INACL_NONE_BEGIN_IDX,             /* 0x00070010, entry index is not starting index of a group of rules                */
+    RT_ERR_FILTER_INACL_ACT_NOT_SUPPORT,            /* 0x00070011, action not support                                                    */
+    RT_ERR_FILTER_INACL_RULE_NOT_SUPPORT,           /* 0x00070012, rule not support                                                   */
+
+    /* 0x0008xxxx for ACL Rate Limit */
+    RT_ERR_ACLRL_HTHR = 0x00080000,                 /* 0x00080000, invalid high threshold                                               */
+    RT_ERR_ACLRL_TIMESLOT,                          /* 0x00080001, invalid time slot                                                    */
+    RT_ERR_ACLRL_TOKEN,                             /* 0x00080002, invalid token amount                                                 */
+    RT_ERR_ACLRL_RATE,                              /* 0x00080003, invalid rate                                                         */
+
+    /* 0x0009xxxx for Link aggregation */
+    RT_ERR_LA_CPUPORT = 0x00090000,                 /* 0x00090000, CPU port can not be aggregated port                                  */
+    RT_ERR_LA_TRUNK_ID,                             /* 0x00090001, invalid trunk id                                                     */
+    RT_ERR_LA_PORTMASK,                             /* 0x00090002, invalid port mask                                                    */
+    RT_ERR_LA_HASHMASK,                             /* 0x00090003, invalid hash mask                                                    */
+    RT_ERR_LA_DUMB,                                 /* 0x00090004, this API should be used in 802.1ad dumb mode                         */
+    RT_ERR_LA_PORTNUM_DUMB,                         /* 0x00090005, it can only aggregate at most four ports when 802.1ad dumb mode      */
+    RT_ERR_LA_PORTNUM_NORMAL,                       /* 0x00090006, it can only aggregate at most eight ports when 802.1ad normal mode   */
+    RT_ERR_LA_MEMBER_OVERLAP,                       /* 0x00090007, the specified port mask is overlapped with other group               */
+    RT_ERR_LA_NOT_MEMBER_PORT,                      /* 0x00090008, the port is not a member port of the trunk                           */
+    RT_ERR_LA_TRUNK_NOT_EXIST,                      /* 0x00090009, the trunk doesn't exist                                              */
+
+
+    /* 0x000axxxx for storm filter */
+    RT_ERR_SFC_TICK_PERIOD = 0x000a0000,            /* 0x000a0000, invalid SFC tick period                                              */
+    RT_ERR_SFC_UNKNOWN_GROUP,                       /* 0x000a0001, Unknown Storm filter group                                           */
+
+    /* 0x000bxxxx for pattern match */
+    RT_ERR_PM_MASK = 0x000b0000,                    /* 0x000b0000, invalid pattern length. Pattern length should be 8                   */
+    RT_ERR_PM_LENGTH,                               /* 0x000b0001, invalid pattern match mask, first byte must care                     */
+    RT_ERR_PM_MODE,                                 /* 0x000b0002, invalid pattern match mode                                           */
+
+    /* 0x000cxxxx for input bandwidth control */
+    RT_ERR_INBW_TICK_PERIOD = 0x000c0000,           /* 0x000c0000, invalid tick period for input bandwidth control                      */
+    RT_ERR_INBW_TOKEN_AMOUNT,                       /* 0x000c0001, invalid amount of token for input bandwidth control                  */
+    RT_ERR_INBW_FCON_VALUE,                         /* 0x000c0002, invalid flow control ON threshold value for input bandwidth control  */
+    RT_ERR_INBW_FCOFF_VALUE,                        /* 0x000c0003, invalid flow control OFF threshold value for input bandwidth control */
+    RT_ERR_INBW_FC_ALLOWANCE,                       /* 0x000c0004, invalid allowance of incomming packet for input bandwidth control    */
+    RT_ERR_INBW_RATE,                               /* 0x000c0005, invalid input bandwidth                                              */
+
+    /* 0x000dxxxx for QoS */
+    RT_ERR_QOS_1P_PRIORITY = 0x000d0000,            /* 0x000d0000, invalid 802.1P priority                                              */
+    RT_ERR_QOS_DSCP_VALUE,                          /* 0x000d0001, invalid DSCP value                                                   */
+    RT_ERR_QOS_INT_PRIORITY,                        /* 0x000d0002, invalid internal priority                                            */
+    RT_ERR_QOS_SEL_DSCP_PRI,                        /* 0x000d0003, invalid DSCP selection priority                                      */
+    RT_ERR_QOS_SEL_PORT_PRI,                        /* 0x000d0004, invalid port selection priority                                      */
+    RT_ERR_QOS_SEL_IN_ACL_PRI,                      /* 0x000d0005, invalid ingress ACL selection priority                               */
+    RT_ERR_QOS_SEL_CLASS_PRI,                       /* 0x000d0006, invalid classifier selection priority                                */
+    RT_ERR_QOS_EBW_RATE,                            /* 0x000d0007, invalid egress bandwidth rate                                        */
+    RT_ERR_QOS_SCHE_TYPE,                           /* 0x000d0008, invalid QoS scheduling type                                          */
+    RT_ERR_QOS_QUEUE_WEIGHT,                        /* 0x000d0009, invalid Queue weight                                                 */
+    RT_ERR_QOS_SEL_PRI_SOURCE,                      /* 0x000d000a, invalid selection of priority source                                                 */
+
+    /* 0x000exxxx for port ability */
+    RT_ERR_PHY_PAGE_ID = 0x000e0000,                /* 0x000e0000, invalid PHY page id                                                  */
+    RT_ERR_PHY_REG_ID,                              /* 0x000e0001, invalid PHY reg id                                                   */
+    RT_ERR_PHY_DATAMASK,                            /* 0x000e0002, invalid PHY data mask                                                */
+    RT_ERR_PHY_AUTO_NEGO_MODE,                      /* 0x000e0003, invalid PHY auto-negotiation mode*/
+    RT_ERR_PHY_SPEED,                               /* 0x000e0004, invalid PHY speed setting                                            */
+    RT_ERR_PHY_DUPLEX,                              /* 0x000e0005, invalid PHY duplex setting                                           */
+    RT_ERR_PHY_FORCE_ABILITY,                       /* 0x000e0006, invalid PHY force mode ability parameter                             */
+    RT_ERR_PHY_FORCE_1000,                          /* 0x000e0007, invalid PHY force mode 1G speed setting                              */
+    RT_ERR_PHY_TXRX,                                /* 0x000e0008, invalid PHY tx/rx                                                    */
+    RT_ERR_PHY_ID,                                  /* 0x000e0009, invalid PHY id                                                       */
+    RT_ERR_PHY_RTCT_NOT_FINISH,                     /* 0x000e000a, PHY RTCT in progress                                                 */
+
+    /* 0x000fxxxx for mirror */
+    RT_ERR_MIRROR_DIRECTION = 0x000f0000,           /* 0x000f0000, invalid error mirror direction                                       */
+    RT_ERR_MIRROR_SESSION_FULL,                     /* 0x000f0001, mirroring session is full                                            */
+    RT_ERR_MIRROR_SESSION_NOEXIST,                  /* 0x000f0002, mirroring session not exist                                          */
+    RT_ERR_MIRROR_PORT_EXIST,                       /* 0x000f0003, mirroring port already exists                                        */
+    RT_ERR_MIRROR_PORT_NOT_EXIST,                   /* 0x000f0004, mirroring port does not exists                                       */
+    RT_ERR_MIRROR_PORT_FULL,                        /* 0x000f0005, Exceeds maximum number of supported mirroring port                   */
+
+    /* 0x0010xxxx for stat */
+    RT_ERR_STAT_INVALID_GLOBAL_CNTR = 0x00100000,   /* 0x00100000, Invalid Global Counter                                               */
+    RT_ERR_STAT_INVALID_PORT_CNTR,                  /* 0x00100001, Invalid Port Counter                                                 */
+    RT_ERR_STAT_GLOBAL_CNTR_FAIL,                   /* 0x00100002, Could not retrieve/reset Global Counter                              */
+    RT_ERR_STAT_PORT_CNTR_FAIL,                     /* 0x00100003, Could not retrieve/reset Port Counter                                */
+    RT_ERR_STAT_INVALID_CNTR,                       /* 0x00100004, Invalid Counter                                                      */
+    RT_ERR_STAT_CNTR_FAIL,                          /* 0x00100005, Could not retrieve/reset Counter                                     */
+
+    /* 0x0011xxxx for dot1x */
+    RT_ERR_DOT1X_INVALID_DIRECTION = 0x00110000,    /* 0x00110000, Invalid Authentication Direction                                     */
+    RT_ERR_DOT1X_PORTBASEDPNEN,                     /* 0x00110001, Port-based enable port error                                         */
+    RT_ERR_DOT1X_PORTBASEDAUTH,                     /* 0x00110002, Port-based auth port error                                           */
+    RT_ERR_DOT1X_PORTBASEDOPDIR,                    /* 0x00110003, Port-based opdir error                                               */
+    RT_ERR_DOT1X_MACBASEDPNEN,                      /* 0x00110004, MAC-based enable port error                                          */
+    RT_ERR_DOT1X_MACBASEDOPDIR,                     /* 0x00110005, MAC-based opdir error                                                */
+    RT_ERR_DOT1X_PROC,                              /* 0x00110006, unauthorized behavior error                                          */
+    RT_ERR_DOT1X_GVLANIDX,                          /* 0x00110007, guest vlan index error                                               */
+    RT_ERR_DOT1X_GVLANTALK,                         /* 0x00110008, guest vlan OPDIR error                                               */
+    RT_ERR_DOT1X_MAC_PORT_MISMATCH,                 /* 0x00110009, Auth MAC and port mismatch eror                                      */
+
+    RT_ERR_END                                       /* The symbol is the latest symbol                                                  */
+} rt_error_code_t;
+
+
+#endif /* __COMMON_RT_ERROR_H__ */
diff --git a/include/rtl8367b_reg.h b/include/rtl8367b_reg.h
new file mode 100644
index 0000000..ccf3c6f
--- /dev/null
+++ b/include/rtl8367b_reg.h
@@ -0,0 +1,16719 @@
+#ifndef _RTL8367B_REG_H_
+#define _RTL8367B_REG_H_
+
+/************************************************************
+auto-generated register address and field data
+*************************************************************/
+
+/* (16'h0000)port_reg */
+
+#define    RTL8367B_REG_PKTGEN_PORT0_CTRL    0x0001
+#define    RTL8367B_PKTGEN_PORT0_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT0_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT0_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT0_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT0_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT0_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT0_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT0_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT0_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT0_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT0_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT0    0x0002
+#define    RTL8367B_TX_ERR_CNT_PORT0_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT0_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT0_DA0    0x0003
+
+#define    RTL8367B_REG_PKTGEN_PORT0_DA1    0x0004
+
+#define    RTL8367B_REG_PKTGEN_PORT0_DA2    0x0005
+
+#define    RTL8367B_REG_PKTGEN_PORT0_SA0    0x0006
+
+#define    RTL8367B_REG_PKTGEN_PORT0_SA1    0x0007
+
+#define    RTL8367B_REG_PKTGEN_PORT0_SA2    0x0008
+
+#define    RTL8367B_REG_PKTGEN_PORT0_COUNTER0    0x0009
+
+#define    RTL8367B_REG_PKTGEN_PORT0_COUNTER1    0x000a
+#define    RTL8367B_PKTGEN_PORT0_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT0_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT0_TX_LENGTH    0x000b
+#define    RTL8367B_PKTGEN_PORT0_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT0_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT0_MAX_LENGTH    0x000c
+#define    RTL8367B_PKTGEN_PORT0_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT0_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT0_TIMER    0x000d
+#define    RTL8367B_PKTGEN_PORT0_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT0_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT0_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT0_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT0_MISC_CFG    0x000e
+#define    RTL8367B_PORT0_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT0_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT0_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT0_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT0_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT0_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT0_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT0_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT0_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT0_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT0_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT0_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT0_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT0_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT0_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT0_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT0_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT0_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT0_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT0_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT0_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT0_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT0_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT0_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT0_RATE_CTRL0    0x000f
+
+#define    RTL8367B_REG_INGRESSBW_PORT0_RATE_CTRL1    0x0010
+#define    RTL8367B_INGRESSBW_PORT0_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT0_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT0_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT0_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT0_FORCE_RATE0    0x0011
+
+#define    RTL8367B_REG_PORT0_FORCE_RATE1    0x0012
+
+#define    RTL8367B_REG_PORT0_CURENT_RATE0    0x0013
+
+#define    RTL8367B_REG_PORT0_CURENT_RATE1    0x0014
+
+#define    RTL8367B_REG_PORT0_PAGE_COUNTER    0x0015
+#define    RTL8367B_PORT0_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT0_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT0_CTRL0    0x0016
+
+#define    RTL8367B_REG_PAGEMETER_PORT0_CTRL1    0x0017
+#define    RTL8367B_PAGEMETER_PORT0_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT0_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT0_EEECFG    0x0018
+#define    RTL8367B_PORT0_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT0_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT0_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT0_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT0_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT0_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT0_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT0_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT0_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT0_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT0_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT0_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT0_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT0_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT0_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT0_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT0_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT0_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT0_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT0_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT0_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT0_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT0_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT0_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT0_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT0_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT0_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT0_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT0_EEETXMTR    0x0019
+
+#define    RTL8367B_REG_PORT0_EEERXMTR    0x001a
+
+#define    RTL8367B_REG_PORT0_EEEPTXMTR    0x001b
+
+#define    RTL8367B_REG_PORT0_EEEPRXMTR    0x001c
+
+#define    RTL8367B_REG_PTP_PORT0_CFG0    0x001d
+
+#define    RTL8367B_REG_PTP_PORT0_CFG1    0x001e
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT0_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT0_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT0_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT0_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT0_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P0_MSIC1    0x001f
+#define    RTL8367B_P0_MSIC1_OFFSET    0
+#define    RTL8367B_P0_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT1_CTRL    0x0021
+#define    RTL8367B_PKTGEN_PORT1_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT1_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT1_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT1_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT1_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT1_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT1_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT1_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT1_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT1_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT1_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT1    0x0022
+#define    RTL8367B_TX_ERR_CNT_PORT1_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT1_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT1_DA0    0x0023
+
+#define    RTL8367B_REG_PKTGEN_PORT1_DA1    0x0024
+
+#define    RTL8367B_REG_PKTGEN_PORT1_DA2    0x0025
+
+#define    RTL8367B_REG_PKTGEN_PORT1_SA0    0x0026
+
+#define    RTL8367B_REG_PKTGEN_PORT1_SA1    0x0027
+
+#define    RTL8367B_REG_PKTGEN_PORT1_SA2    0x0028
+
+#define    RTL8367B_REG_PKTGEN_PORT1_COUNTER0    0x0029
+
+#define    RTL8367B_REG_PKTGEN_PORT1_COUNTER1    0x002a
+#define    RTL8367B_PKTGEN_PORT1_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT1_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT1_TX_LENGTH    0x002b
+#define    RTL8367B_PKTGEN_PORT1_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT1_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT1_MAX_LENGTH    0x002c
+#define    RTL8367B_PKTGEN_PORT1_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT1_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT1_TIMER    0x002d
+#define    RTL8367B_PKTGEN_PORT1_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT1_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT1_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT1_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT1_MISC_CFG    0x002e
+#define    RTL8367B_PORT1_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT1_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT1_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT1_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT1_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT1_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT1_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT1_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT1_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT1_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT1_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT1_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT1_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT1_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT1_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT1_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT1_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT1_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT1_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT1_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT1_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT1_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT1_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT1_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT1_RATE_CTRL0    0x002f
+
+#define    RTL8367B_REG_INGRESSBW_PORT1_RATE_CTRL1    0x0030
+#define    RTL8367B_INGRESSBW_PORT1_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT1_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT1_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT1_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT1_FORCE_RATE0    0x0031
+
+#define    RTL8367B_REG_PORT1_FORCE_RATE1    0x0032
+
+#define    RTL8367B_REG_PORT1_CURENT_RATE0    0x0033
+
+#define    RTL8367B_REG_PORT1_CURENT_RATE1    0x0034
+
+#define    RTL8367B_REG_PORT1_PAGE_COUNTER    0x0035
+#define    RTL8367B_PORT1_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT1_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT1_CTRL0    0x0036
+
+#define    RTL8367B_REG_PAGEMETER_PORT1_CTRL1    0x0037
+#define    RTL8367B_PAGEMETER_PORT1_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT1_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT1_EEECFG    0x0038
+#define    RTL8367B_PORT1_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT1_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT1_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT1_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT1_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT1_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT1_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT1_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT1_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT1_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT1_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT1_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT1_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT1_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT1_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT1_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT1_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT1_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT1_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT1_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT1_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT1_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT1_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT1_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT1_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT1_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT1_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT1_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT1_EEETXMTR    0x0039
+
+#define    RTL8367B_REG_PORT1_EEERXMTR    0x003a
+
+#define    RTL8367B_REG_PORT1_EEEPTXMTR    0x003b
+
+#define    RTL8367B_REG_PORT1_EEEPRXMTR    0x003c
+
+#define    RTL8367B_REG_PTP_PORT1_CFG0    0x003d
+
+#define    RTL8367B_REG_PTP_PORT1_CFG1    0x003e
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT1_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT1_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT1_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT1_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT1_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P1_MSIC1    0x003f
+#define    RTL8367B_P1_MSIC1_OFFSET    0
+#define    RTL8367B_P1_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT2_CTRL    0x0041
+#define    RTL8367B_PKTGEN_PORT2_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT2_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT2_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT2_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT2_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT2_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT2_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT2_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT2_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT2_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT2_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT2    0x0042
+#define    RTL8367B_TX_ERR_CNT_PORT2_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT2_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT2_DA0    0x0043
+
+#define    RTL8367B_REG_PKTGEN_PORT2_DA1    0x0044
+
+#define    RTL8367B_REG_PKTGEN_PORT2_DA2    0x0045
+
+#define    RTL8367B_REG_PKTGEN_PORT2_SA0    0x0046
+
+#define    RTL8367B_REG_PKTGEN_PORT2_SA1    0x0047
+
+#define    RTL8367B_REG_PKTGEN_PORT2_SA2    0x0048
+
+#define    RTL8367B_REG_PKTGEN_PORT2_COUNTER0    0x0049
+
+#define    RTL8367B_REG_PKTGEN_PORT2_COUNTER1    0x004a
+#define    RTL8367B_PKTGEN_PORT2_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT2_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT2_TX_LENGTH    0x004b
+#define    RTL8367B_PKTGEN_PORT2_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT2_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT2_MAX_LENGTH    0x004c
+#define    RTL8367B_PKTGEN_PORT2_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT2_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT2_TIMER    0x004d
+#define    RTL8367B_PKTGEN_PORT2_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT2_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT2_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT2_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT2_MISC_CFG    0x004e
+#define    RTL8367B_PORT2_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT2_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT2_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT2_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT2_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT2_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT2_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT2_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT2_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT2_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT2_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT2_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT2_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT2_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT2_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT2_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT2_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT2_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT2_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT2_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT2_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT2_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT2_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT2_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT2_RATE_CTRL0    0x004f
+
+#define    RTL8367B_REG_INGRESSBW_PORT2_RATE_CTRL1    0x0050
+#define    RTL8367B_INGRESSBW_PORT2_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT2_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT2_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT2_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT2_FORCE_RATE0    0x0051
+
+#define    RTL8367B_REG_PORT2_FORCE_RATE1    0x0052
+
+#define    RTL8367B_REG_PORT2_CURENT_RATE0    0x0053
+
+#define    RTL8367B_REG_PORT2_CURENT_RATE1    0x0054
+
+#define    RTL8367B_REG_PORT2_PAGE_COUNTER    0x0055
+#define    RTL8367B_PORT2_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT2_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT2_CTRL0    0x0056
+
+#define    RTL8367B_REG_PAGEMETER_PORT2_CTRL1    0x0057
+#define    RTL8367B_PAGEMETER_PORT2_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT2_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT2_EEECFG    0x0058
+#define    RTL8367B_PORT2_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT2_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT2_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT2_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT2_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT2_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT2_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT2_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT2_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT2_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT2_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT2_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT2_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT2_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT2_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT2_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT2_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT2_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT2_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT2_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT2_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT2_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT2_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT2_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT2_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT2_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT2_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT2_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT2_EEETXMTR    0x0059
+
+#define    RTL8367B_REG_PORT2_EEERXMTR    0x005a
+
+#define    RTL8367B_REG_PORT2_EEEPTXMTR    0x005b
+
+#define    RTL8367B_REG_PORT2_EEEPRXMTR    0x005c
+
+#define    RTL8367B_REG_PTP_PORT2_CFG0    0x005d
+
+#define    RTL8367B_REG_PTP_PORT2_CFG1    0x005e
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT2_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT2_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT2_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT2_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT2_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P2_MSIC1    0x005f
+#define    RTL8367B_P2_MSIC1_OFFSET    0
+#define    RTL8367B_P2_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT3_CTRL    0x0061
+#define    RTL8367B_PKTGEN_PORT3_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT3_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT3_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT3_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT3_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT3_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT3_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT3_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT3_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT3_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT3_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT3    0x0062
+#define    RTL8367B_TX_ERR_CNT_PORT3_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT3_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT3_DA0    0x0063
+
+#define    RTL8367B_REG_PKTGEN_PORT3_DA1    0x0064
+
+#define    RTL8367B_REG_PKTGEN_PORT3_DA2    0x0065
+
+#define    RTL8367B_REG_PKTGEN_PORT3_SA0    0x0066
+
+#define    RTL8367B_REG_PKTGEN_PORT3_SA1    0x0067
+
+#define    RTL8367B_REG_PKTGEN_PORT3_SA2    0x0068
+
+#define    RTL8367B_REG_PKTGEN_PORT3_COUNTER0    0x0069
+
+#define    RTL8367B_REG_PKTGEN_PORT3_COUNTER1    0x006a
+#define    RTL8367B_PKTGEN_PORT3_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT3_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT3_TX_LENGTH    0x006b
+#define    RTL8367B_PKTGEN_PORT3_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT3_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT3_MAX_LENGTH    0x006c
+#define    RTL8367B_PKTGEN_PORT3_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT3_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT3_TIMER    0x006d
+#define    RTL8367B_PKTGEN_PORT3_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT3_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT3_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT3_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT3_MISC_CFG    0x006e
+#define    RTL8367B_PORT3_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT3_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT3_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT3_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT3_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT3_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT3_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT3_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT3_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT3_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT3_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT3_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT3_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT3_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT3_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT3_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT3_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT3_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT3_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT3_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT3_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT3_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT3_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT3_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT3_RATE_CTRL0    0x006f
+
+#define    RTL8367B_REG_INGRESSBW_PORT3_RATE_CTRL1    0x0070
+#define    RTL8367B_INGRESSBW_PORT3_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT3_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT3_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT3_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT3_FORCE_RATE0    0x0071
+
+#define    RTL8367B_REG_PORT3_FORCE_RATE1    0x0072
+
+#define    RTL8367B_REG_PORT3_CURENT_RATE0    0x0073
+
+#define    RTL8367B_REG_PORT3_CURENT_RATE1    0x0074
+
+#define    RTL8367B_REG_PORT3_PAGE_COUNTER    0x0075
+#define    RTL8367B_PORT3_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT3_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT3_CTRL0    0x0076
+
+#define    RTL8367B_REG_PAGEMETER_PORT3_CTRL1    0x0077
+#define    RTL8367B_PAGEMETER_PORT3_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT3_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT3_EEECFG    0x0078
+#define    RTL8367B_PORT3_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT3_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT3_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT3_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT3_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT3_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT3_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT3_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT3_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT3_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT3_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT3_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT3_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT3_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT3_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT3_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT3_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT3_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT3_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT3_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT3_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT3_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT3_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT3_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT3_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT3_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT3_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT3_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT3_EEETXMTR    0x0079
+
+#define    RTL8367B_REG_PORT3_EEERXMTR    0x007a
+
+#define    RTL8367B_REG_PORT3_EEEPTXMTR    0x007b
+
+#define    RTL8367B_REG_PORT3_EEEPRXMTR    0x007c
+
+#define    RTL8367B_REG_PTP_PORT3_CFG0    0x007d
+
+#define    RTL8367B_REG_PTP_PORT3_CFG1    0x007e
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT3_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT3_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT3_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT3_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT3_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P3_MSIC1    0x007f
+#define    RTL8367B_P3_MSIC1_OFFSET    0
+#define    RTL8367B_P3_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT4_CTRL    0x0081
+#define    RTL8367B_PKTGEN_PORT4_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT4_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT4_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT4_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT4_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT4_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT4_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT4_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT4_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT4_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT4_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT4    0x0082
+#define    RTL8367B_TX_ERR_CNT_PORT4_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT4_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT4_DA0    0x0083
+
+#define    RTL8367B_REG_PKTGEN_PORT4_DA1    0x0084
+
+#define    RTL8367B_REG_PKTGEN_PORT4_DA2    0x0085
+
+#define    RTL8367B_REG_PKTGEN_PORT4_SA0    0x0086
+
+#define    RTL8367B_REG_PKTGEN_PORT4_SA1    0x0087
+
+#define    RTL8367B_REG_PKTGEN_PORT4_SA2    0x0088
+
+#define    RTL8367B_REG_PKTGEN_PORT4_COUNTER0    0x0089
+
+#define    RTL8367B_REG_PKTGEN_PORT4_COUNTER1    0x008a
+#define    RTL8367B_PKTGEN_PORT4_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT4_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT4_TX_LENGTH    0x008b
+#define    RTL8367B_PKTGEN_PORT4_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT4_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT4_MAX_LENGTH    0x008c
+#define    RTL8367B_PKTGEN_PORT4_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT4_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT4_TIMER    0x008d
+#define    RTL8367B_PKTGEN_PORT4_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT4_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT4_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT4_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT4_MISC_CFG    0x008e
+#define    RTL8367B_PORT4_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT4_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT4_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT4_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT4_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT4_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT4_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT4_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT4_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT4_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT4_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT4_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT4_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT4_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT4_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT4_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT4_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT4_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT4_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT4_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT4_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT4_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT4_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT4_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT4_RATE_CTRL0    0x008f
+
+#define    RTL8367B_REG_INGRESSBW_PORT4_RATE_CTRL1    0x0090
+#define    RTL8367B_INGRESSBW_PORT4_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT4_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT4_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT4_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT4_FORCE_RATE0    0x0091
+
+#define    RTL8367B_REG_PORT4_FORCE_RATE1    0x0092
+
+#define    RTL8367B_REG_PORT4_CURENT_RATE0    0x0093
+
+#define    RTL8367B_REG_PORT4_CURENT_RATE1    0x0094
+
+#define    RTL8367B_REG_PORT4_PAGE_COUNTER    0x0095
+#define    RTL8367B_PORT4_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT4_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT4_CTRL0    0x0096
+
+#define    RTL8367B_REG_PAGEMETER_PORT4_CTRL1    0x0097
+#define    RTL8367B_PAGEMETER_PORT4_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT4_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT4_EEECFG    0x0098
+#define    RTL8367B_PORT4_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT4_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT4_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT4_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT4_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT4_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT4_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT4_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT4_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT4_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT4_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT4_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT4_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT4_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT4_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT4_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT4_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT4_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT4_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT4_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT4_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT4_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT4_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT4_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT4_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT4_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT4_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT4_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT4_EEETXMTR    0x0099
+
+#define    RTL8367B_REG_PORT4_EEERXMTR    0x009a
+
+#define    RTL8367B_REG_PORT4_EEEPTXMTR    0x009b
+
+#define    RTL8367B_REG_PORT4_EEEPRXMTR    0x009c
+
+#define    RTL8367B_REG_PTP_PORT4_CFG0    0x009d
+
+#define    RTL8367B_REG_PTP_PORT4_CFG1    0x009e
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT4_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT4_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT4_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT4_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT4_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P4_MSIC1    0x009f
+#define    RTL8367B_P4_MSIC1_OFFSET    0
+#define    RTL8367B_P4_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT5_CTRL    0x00a1
+#define    RTL8367B_PKTGEN_PORT5_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT5_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT5_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT5_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT5_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT5_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT5_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT5_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT5_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT5_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT5_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT5    0x00a2
+#define    RTL8367B_TX_ERR_CNT_PORT5_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT5_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT5_DA0    0x00a3
+
+#define    RTL8367B_REG_PKTGEN_PORT5_DA1    0x00a4
+
+#define    RTL8367B_REG_PKTGEN_PORT5_DA2    0x00a5
+
+#define    RTL8367B_REG_PKTGEN_PORT5_SA0    0x00a6
+
+#define    RTL8367B_REG_PKTGEN_PORT5_SA1    0x00a7
+
+#define    RTL8367B_REG_PKTGEN_PORT5_SA2    0x00a8
+
+#define    RTL8367B_REG_PKTGEN_PORT5_COUNTER0    0x00a9
+
+#define    RTL8367B_REG_PKTGEN_PORT5_COUNTER1    0x00aa
+#define    RTL8367B_PKTGEN_PORT5_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT5_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT5_TX_LENGTH    0x00ab
+#define    RTL8367B_PKTGEN_PORT5_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT5_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT5_MAX_LENGTH    0x00ac
+#define    RTL8367B_PKTGEN_PORT5_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT5_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT5_TIMER    0x00ad
+#define    RTL8367B_PKTGEN_PORT5_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT5_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT5_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT5_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT5_MISC_CFG    0x00ae
+#define    RTL8367B_PORT5_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT5_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT5_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT5_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT5_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT5_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT5_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT5_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT5_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT5_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT5_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT5_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT5_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT5_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT5_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT5_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT5_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT5_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT5_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT5_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT5_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT5_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT5_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT5_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT5_RATE_CTRL0    0x00af
+
+#define    RTL8367B_REG_INGRESSBW_PORT5_RATE_CTRL1    0x00b0
+#define    RTL8367B_INGRESSBW_PORT5_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT5_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT5_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT5_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT5_FORCE_RATE0    0x00b1
+
+#define    RTL8367B_REG_PORT5_FORCE_RATE1    0x00b2
+
+#define    RTL8367B_REG_PORT5_CURENT_RATE0    0x00b3
+
+#define    RTL8367B_REG_PORT5_CURENT_RATE1    0x00b4
+
+#define    RTL8367B_REG_PORT5_PAGE_COUNTER    0x00b5
+#define    RTL8367B_PORT5_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT5_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT5_CTRL0    0x00b6
+
+#define    RTL8367B_REG_PAGEMETER_PORT5_CTRL1    0x00b7
+#define    RTL8367B_PAGEMETER_PORT5_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT5_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT5_EEECFG    0x00b8
+#define    RTL8367B_PORT5_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT5_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT5_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT5_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT5_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT5_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT5_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT5_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT5_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT5_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT5_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT5_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT5_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT5_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT5_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT5_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT5_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT5_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT5_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT5_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT5_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT5_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT5_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT5_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT5_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT5_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT5_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT5_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT5_EEETXMTR    0x00b9
+
+#define    RTL8367B_REG_PORT5_EEERXMTR    0x00ba
+
+#define    RTL8367B_REG_PORT5_EEEPTXMTR    0x00bb
+
+#define    RTL8367B_REG_PORT5_EEEPRXMTR    0x00bc
+
+#define    RTL8367B_REG_PTP_PORT5_CFG0    0x00bd
+
+#define    RTL8367B_REG_PTP_PORT5_CFG1    0x00be
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT5_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT5_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT5_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT5_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT5_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P5_MSIC1    0x00bf
+#define    RTL8367B_P5_MSIC1_OFFSET    0
+#define    RTL8367B_P5_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT6_CTRL    0x00c1
+#define    RTL8367B_PKTGEN_PORT6_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT6_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT6_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT6_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT6_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT6_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT6_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT6_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT6_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT6_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT6_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT6    0x00c2
+#define    RTL8367B_TX_ERR_CNT_PORT6_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT6_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT6_DA0    0x00c3
+
+#define    RTL8367B_REG_PKTGEN_PORT6_DA1    0x00c4
+
+#define    RTL8367B_REG_PKTGEN_PORT6_DA2    0x00c5
+
+#define    RTL8367B_REG_PKTGEN_PORT6_SA0    0x00c6
+
+#define    RTL8367B_REG_PKTGEN_PORT6_SA1    0x00c7
+
+#define    RTL8367B_REG_PKTGEN_PORT6_SA2    0x00c8
+
+#define    RTL8367B_REG_PKTGEN_PORT6_COUNTER0    0x00c9
+
+#define    RTL8367B_REG_PKTGEN_PORT6_COUNTER1    0x00ca
+#define    RTL8367B_PKTGEN_PORT6_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT6_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT6_TX_LENGTH    0x00cb
+#define    RTL8367B_PKTGEN_PORT6_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT6_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT6_MAX_LENGTH    0x00cc
+#define    RTL8367B_PKTGEN_PORT6_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT6_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT6_TIMER    0x00cd
+#define    RTL8367B_PKTGEN_PORT6_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT6_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT6_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT6_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT6_MISC_CFG    0x00ce
+#define    RTL8367B_PORT6_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT6_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT6_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT6_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT6_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT6_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT6_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT6_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT6_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT6_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT6_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT6_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT6_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT6_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT6_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT6_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT6_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT6_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT6_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT6_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT6_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT6_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT6_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT6_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT6_RATE_CTRL0    0x00cf
+
+#define    RTL8367B_REG_INGRESSBW_PORT6_RATE_CTRL1    0x00d0
+#define    RTL8367B_INGRESSBW_PORT6_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT6_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT6_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT6_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT6_FORCE_RATE0    0x00d1
+
+#define    RTL8367B_REG_PORT6_FORCE_RATE1    0x00d2
+
+#define    RTL8367B_REG_PORT6_CURENT_RATE0    0x00d3
+
+#define    RTL8367B_REG_PORT6_CURENT_RATE1    0x00d4
+
+#define    RTL8367B_REG_PORT6_PAGE_COUNTER    0x00d5
+#define    RTL8367B_PORT6_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT6_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT6_CTRL0    0x00d6
+
+#define    RTL8367B_REG_PAGEMETER_PORT6_CTRL1    0x00d7
+#define    RTL8367B_PAGEMETER_PORT6_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT6_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT6_EEECFG    0x00d8
+#define    RTL8367B_PORT6_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT6_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT6_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT6_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT6_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT6_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT6_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT6_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT6_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT6_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT6_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT6_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT6_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT6_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT6_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT6_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT6_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT6_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT6_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT6_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT6_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT6_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT6_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT6_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT6_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT6_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT6_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT6_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT6_EEETXMTR    0x00d9
+
+#define    RTL8367B_REG_PORT6_EEERXMTR    0x00da
+
+#define    RTL8367B_REG_PORT6_EEEPTXMTR    0x00db
+
+#define    RTL8367B_REG_PORT6_EEEPRXMTR    0x00dc
+
+#define    RTL8367B_REG_PTP_PORT6_CFG0    0x00dd
+
+#define    RTL8367B_REG_PTP_PORT6_CFG1    0x00de
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT6_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT6_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT6_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT6_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT6_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P6_MSIC1    0x00df
+#define    RTL8367B_P6_MSIC1_OFFSET    0
+#define    RTL8367B_P6_MSIC1_MASK    0x1
+
+#define    RTL8367B_REG_PKTGEN_PORT7_CTRL    0x00e1
+#define    RTL8367B_PKTGEN_PORT7_CTRL_STATUS_OFFSET    15
+#define    RTL8367B_PKTGEN_PORT7_CTRL_STATUS_MASK    0x8000
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_STS_OFFSET    13
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_STS_MASK    0x2000
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_SUSPEND_OFFSET    12
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_SUSPEND_MASK    0x1000
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_LENGTH_FIELD_SEL_OFFSET    11
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PKTGEN_LENGTH_FIELD_SEL_MASK    0x800
+#define    RTL8367B_PKTGEN_PORT7_CTRL_RANDOM_LENTH_OFFSET    10
+#define    RTL8367B_PKTGEN_PORT7_CTRL_RANDOM_LENTH_MASK    0x400
+#define    RTL8367B_PKTGEN_PORT7_CTRL_ENABLED_OFFSET    9
+#define    RTL8367B_PKTGEN_PORT7_CTRL_ENABLED_MASK    0x200
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_BC_OFFSET    8
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_BC_MASK    0x100
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_SA_OFFSET    7
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_SA_MASK    0x80
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_DA_OFFSET    6
+#define    RTL8367B_PKTGEN_PORT7_CTRL_INC_DA_MASK    0x40
+#define    RTL8367B_PKTGEN_PORT7_CTRL_RANDOM_OFFSET    5
+#define    RTL8367B_PKTGEN_PORT7_CTRL_RANDOM_MASK    0x20
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CRC_NO_ERROR_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CRC_NO_ERROR_MASK    0x10
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CMD_STOP_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CMD_STOP_MASK    0x8
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CONTINUE_MODE_OFFSET    2
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CONTINUE_MODE_MASK    0x4
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PAUSE_MODE_OFFSET    1
+#define    RTL8367B_PKTGEN_PORT7_CTRL_PAUSE_MODE_MASK    0x2
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CMD_START_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT7_CTRL_CMD_START_MASK    0x1
+
+#define    RTL8367B_REG_TX_ERR_CNT_PORT7    0x00e2
+#define    RTL8367B_TX_ERR_CNT_PORT7_OFFSET    0
+#define    RTL8367B_TX_ERR_CNT_PORT7_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_PORT7_DA0    0x00e3
+
+#define    RTL8367B_REG_PKTGEN_PORT7_DA1    0x00e4
+
+#define    RTL8367B_REG_PKTGEN_PORT7_DA2    0x00e5
+
+#define    RTL8367B_REG_PKTGEN_PORT7_SA0    0x00e6
+
+#define    RTL8367B_REG_PKTGEN_PORT7_SA1    0x00e7
+
+#define    RTL8367B_REG_PKTGEN_PORT7_SA2    0x00e8
+
+#define    RTL8367B_REG_PKTGEN_PORT7_COUNTER0    0x00e9
+
+#define    RTL8367B_REG_PKTGEN_PORT7_COUNTER1    0x00ea
+#define    RTL8367B_PKTGEN_PORT7_COUNTER1_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT7_COUNTER1_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PORT7_TX_LENGTH    0x00eb
+#define    RTL8367B_PKTGEN_PORT7_TX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT7_TX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT7_MAX_LENGTH    0x00ec
+#define    RTL8367B_PKTGEN_PORT7_MAX_LENGTH_OFFSET    0
+#define    RTL8367B_PKTGEN_PORT7_MAX_LENGTH_MASK    0x3FFF
+
+#define    RTL8367B_REG_PKTGEN_PORT7_TIMER    0x00ed
+#define    RTL8367B_PKTGEN_PORT7_TIMER_TIMER_OFFSET    4
+#define    RTL8367B_PKTGEN_PORT7_TIMER_TIMER_MASK    0xF0
+#define    RTL8367B_PKTGEN_PORT7_TIMER_RX_DMA_ERR_FLAG_OFFSET    3
+#define    RTL8367B_PKTGEN_PORT7_TIMER_RX_DMA_ERR_FLAG_MASK    0x8
+
+#define    RTL8367B_REG_PORT7_MISC_CFG    0x00ee
+#define    RTL8367B_PORT7_MISC_CFG_SMALL_TAG_IPG_OFFSET    15
+#define    RTL8367B_PORT7_MISC_CFG_SMALL_TAG_IPG_MASK    0x8000
+#define    RTL8367B_PORT7_MISC_CFG_TX_ITFSP_MODE_OFFSET    14
+#define    RTL8367B_PORT7_MISC_CFG_TX_ITFSP_MODE_MASK    0x4000
+#define    RTL8367B_PORT7_MISC_CFG_FLOWCTRL_INDEP_OFFSET    13
+#define    RTL8367B_PORT7_MISC_CFG_FLOWCTRL_INDEP_MASK    0x2000
+#define    RTL8367B_PORT7_MISC_CFG_DOT1Q_REMARK_ENABLE_OFFSET    12
+#define    RTL8367B_PORT7_MISC_CFG_DOT1Q_REMARK_ENABLE_MASK    0x1000
+#define    RTL8367B_PORT7_MISC_CFG_INGRESSBW_FLOWCTRL_OFFSET    11
+#define    RTL8367B_PORT7_MISC_CFG_INGRESSBW_FLOWCTRL_MASK    0x800
+#define    RTL8367B_PORT7_MISC_CFG_INGRESSBW_IFG_OFFSET    10
+#define    RTL8367B_PORT7_MISC_CFG_INGRESSBW_IFG_MASK    0x400
+#define    RTL8367B_PORT7_MISC_CFG_RX_SPC_OFFSET    9
+#define    RTL8367B_PORT7_MISC_CFG_RX_SPC_MASK    0x200
+#define    RTL8367B_PORT7_MISC_CFG_CRC_SKIP_OFFSET    8
+#define    RTL8367B_PORT7_MISC_CFG_CRC_SKIP_MASK    0x100
+#define    RTL8367B_PORT7_MISC_CFG_PKTGEN_TX_FIRST_OFFSET    7
+#define    RTL8367B_PORT7_MISC_CFG_PKTGEN_TX_FIRST_MASK    0x80
+#define    RTL8367B_PORT7_MISC_CFG_MAC_LOOPBACK_OFFSET    6
+#define    RTL8367B_PORT7_MISC_CFG_MAC_LOOPBACK_MASK    0x40
+#define    RTL8367B_PORT7_MISC_CFG_VLAN_EGRESS_MODE_OFFSET    4
+#define    RTL8367B_PORT7_MISC_CFG_VLAN_EGRESS_MODE_MASK    0x30
+#define    RTL8367B_PORT7_MISC_CFG_CONGESTION_SUSTAIN_TIME_OFFSET    0
+#define    RTL8367B_PORT7_MISC_CFG_CONGESTION_SUSTAIN_TIME_MASK    0xF
+
+#define    RTL8367B_REG_INGRESSBW_PORT7_RATE_CTRL0    0x00ef
+
+#define    RTL8367B_REG_INGRESSBW_PORT7_RATE_CTRL1    0x00f0
+#define    RTL8367B_INGRESSBW_PORT7_RATE_CTRL1_DUMMY_OFFSET    1
+#define    RTL8367B_INGRESSBW_PORT7_RATE_CTRL1_DUMMY_MASK    0xFFFE
+#define    RTL8367B_INGRESSBW_PORT7_RATE_CTRL1_INGRESSBW_RATE16_OFFSET    0
+#define    RTL8367B_INGRESSBW_PORT7_RATE_CTRL1_INGRESSBW_RATE16_MASK    0x1
+
+#define    RTL8367B_REG_PORT7_FORCE_RATE0    0x00f1
+
+#define    RTL8367B_REG_PORT7_FORCE_RATE1    0x00f2
+
+#define    RTL8367B_REG_PORT7_CURENT_RATE0    0x00f3
+
+#define    RTL8367B_REG_PORT7_CURENT_RATE1    0x00f4
+
+#define    RTL8367B_REG_PORT7_PAGE_COUNTER    0x00f5
+#define    RTL8367B_PORT7_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_PORT7_PAGE_COUNTER_MASK    0x7F
+
+#define    RTL8367B_REG_PAGEMETER_PORT7_CTRL0    0x00f6
+
+#define    RTL8367B_REG_PAGEMETER_PORT7_CTRL1    0x00f7
+#define    RTL8367B_PAGEMETER_PORT7_CTRL1_OFFSET    0
+#define    RTL8367B_PAGEMETER_PORT7_CTRL1_MASK    0x1F
+
+#define    RTL8367B_REG_PORT7_EEECFG    0x00f8
+#define    RTL8367B_PORT7_EEECFG_EEEP_ENABLE_TX_OFFSET    14
+#define    RTL8367B_PORT7_EEECFG_EEEP_ENABLE_TX_MASK    0x4000
+#define    RTL8367B_PORT7_EEECFG_EEEP_ENABLE_RX_OFFSET    13
+#define    RTL8367B_PORT7_EEECFG_EEEP_ENABLE_RX_MASK    0x2000
+#define    RTL8367B_PORT7_EEECFG_EEE_FORCE_OFFSET    12
+#define    RTL8367B_PORT7_EEECFG_EEE_FORCE_MASK    0x1000
+#define    RTL8367B_PORT7_EEECFG_EEE_100M_OFFSET    11
+#define    RTL8367B_PORT7_EEECFG_EEE_100M_MASK    0x800
+#define    RTL8367B_PORT7_EEECFG_EEE_GIGA_OFFSET    10
+#define    RTL8367B_PORT7_EEECFG_EEE_GIGA_MASK    0x400
+#define    RTL8367B_PORT7_EEECFG_EEE_TX_OFFSET    9
+#define    RTL8367B_PORT7_EEECFG_EEE_TX_MASK    0x200
+#define    RTL8367B_PORT7_EEECFG_EEE_RX_OFFSET    8
+#define    RTL8367B_PORT7_EEECFG_EEE_RX_MASK    0x100
+#define    RTL8367B_PORT7_EEECFG_EEE_DSP_RX_OFFSET    6
+#define    RTL8367B_PORT7_EEECFG_EEE_DSP_RX_MASK    0x40
+#define    RTL8367B_PORT7_EEECFG_EEE_LPI_OFFSET    5
+#define    RTL8367B_PORT7_EEECFG_EEE_LPI_MASK    0x20
+#define    RTL8367B_PORT7_EEECFG_EEE_TX_LPI_OFFSET    4
+#define    RTL8367B_PORT7_EEECFG_EEE_TX_LPI_MASK    0x10
+#define    RTL8367B_PORT7_EEECFG_EEE_RX_LPI_OFFSET    3
+#define    RTL8367B_PORT7_EEECFG_EEE_RX_LPI_MASK    0x8
+#define    RTL8367B_PORT7_EEECFG_EEE_PAUSE_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT7_EEECFG_EEE_PAUSE_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT7_EEECFG_EEE_WAKE_REQ_OFFSET    1
+#define    RTL8367B_PORT7_EEECFG_EEE_WAKE_REQ_MASK    0x2
+#define    RTL8367B_PORT7_EEECFG_EEE_SLEEP_REQ_OFFSET    0
+#define    RTL8367B_PORT7_EEECFG_EEE_SLEEP_REQ_MASK    0x1
+
+#define    RTL8367B_REG_PORT7_EEETXMTR    0x00f9
+
+#define    RTL8367B_REG_PORT7_EEERXMTR    0x00fa
+
+#define    RTL8367B_REG_PORT7_EEEPTXMTR    0x00fb
+
+#define    RTL8367B_REG_PORT7_EEEPRXMTR    0x00fc
+
+#define    RTL8367B_REG_PTP_PORT7_CFG0    0x00fd
+
+#define    RTL8367B_REG_PTP_PORT7_CFG1    0x00fe
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_TS_SECOND_OFFSET    8
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_TS_SECOND_MASK    0xFF00
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_SYNC_EN_OFFSET    7
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_SYNC_EN_MASK    0x80
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_SYNC_TX_TS_FILL_EN_OFFSET    6
+#define    RTL8367B_PTP_PORT7_CFG1_TIME_SYNC_TX_TS_FILL_EN_MASK    0x40
+#define    RTL8367B_PTP_PORT7_CFG1_EGRESS_TS_VALID_OFFSET    5
+#define    RTL8367B_PTP_PORT7_CFG1_EGRESS_TS_VALID_MASK    0x20
+#define    RTL8367B_PTP_PORT7_CFG1_EGRESS_TS_512NS_OFFSET    0
+#define    RTL8367B_PTP_PORT7_CFG1_EGRESS_TS_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_P7_MSIC1    0x00ff
+#define    RTL8367B_P7_MSIC1_OFFSET    0
+#define    RTL8367B_P7_MSIC1_MASK    0x1
+
+/* (16'h0200)outq_reg */
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE0_DROP_ON    0x0200
+#define    RTL8367B_FLOWCTRL_QUEUE0_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE0_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE1_DROP_ON    0x0201
+#define    RTL8367B_FLOWCTRL_QUEUE1_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE1_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE2_DROP_ON    0x0202
+#define    RTL8367B_FLOWCTRL_QUEUE2_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE2_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE3_DROP_ON    0x0203
+#define    RTL8367B_FLOWCTRL_QUEUE3_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE3_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE4_DROP_ON    0x0204
+#define    RTL8367B_FLOWCTRL_QUEUE4_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE4_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE5_DROP_ON    0x0205
+#define    RTL8367B_FLOWCTRL_QUEUE5_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE5_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE6_DROP_ON    0x0206
+#define    RTL8367B_FLOWCTRL_QUEUE6_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE6_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE7_DROP_ON    0x0207
+#define    RTL8367B_FLOWCTRL_QUEUE7_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE7_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT0_DROP_ON    0x0208
+#define    RTL8367B_FLOWCTRL_PORT0_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT0_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT1_DROP_ON    0x0209
+#define    RTL8367B_FLOWCTRL_PORT1_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT1_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT2_DROP_ON    0x020a
+#define    RTL8367B_FLOWCTRL_PORT2_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT2_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT3_DROP_ON    0x020b
+#define    RTL8367B_FLOWCTRL_PORT3_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT3_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT4_DROP_ON    0x020c
+#define    RTL8367B_FLOWCTRL_PORT4_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT4_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT5_DROP_ON    0x020d
+#define    RTL8367B_FLOWCTRL_PORT5_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT5_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT6_DROP_ON    0x020e
+#define    RTL8367B_FLOWCTRL_PORT6_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT6_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT7_DROP_ON    0x020f
+#define    RTL8367B_FLOWCTRL_PORT7_DROP_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT7_DROP_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_GAP    0x0218
+#define    RTL8367B_FLOWCTRL_PORT_GAP_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_GAP_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE_GAP    0x0219
+#define    RTL8367B_FLOWCTRL_QUEUE_GAP_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE_GAP_MASK    0x3FF
+
+#define    RTL8367B_REG_PORT_QEMPTY    0x022d
+#define    RTL8367B_PORT_QEMPTY_OFFSET    0
+#define    RTL8367B_PORT_QEMPTY_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCTRL_DEBUG_CTRL0    0x022e
+#define    RTL8367B_FLOWCTRL_DEBUG_CTRL0_OFFSET    0
+#define    RTL8367B_FLOWCTRL_DEBUG_CTRL0_MASK    0xF
+
+#define    RTL8367B_REG_FLOWCTRL_DEBUG_CTRL1    0x022f
+#define    RTL8367B_TOTAL_OFFSET    9
+#define    RTL8367B_TOTAL_MASK    0x200
+#define    RTL8367B_PORT_MAX_OFFSET    8
+#define    RTL8367B_PORT_MAX_MASK    0x100
+#define    RTL8367B_QMAX_MASK_OFFSET    0
+#define    RTL8367B_QMAX_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE0_PAGE_COUNT    0x0230
+#define    RTL8367B_FLOWCTRL_QUEUE0_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE0_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE1_PAGE_COUNT    0x0231
+#define    RTL8367B_FLOWCTRL_QUEUE1_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE1_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE2_PAGE_COUNT    0x0232
+#define    RTL8367B_FLOWCTRL_QUEUE2_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE2_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE3_PAGE_COUNT    0x0233
+#define    RTL8367B_FLOWCTRL_QUEUE3_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE3_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE4_PAGE_COUNT    0x0234
+#define    RTL8367B_FLOWCTRL_QUEUE4_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE4_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE5_PAGE_COUNT    0x0235
+#define    RTL8367B_FLOWCTRL_QUEUE5_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE5_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE6_PAGE_COUNT    0x0236
+#define    RTL8367B_FLOWCTRL_QUEUE6_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE6_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE7_PAGE_COUNT    0x0237
+#define    RTL8367B_FLOWCTRL_QUEUE7_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE7_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_PAGE_COUNT    0x0238
+#define    RTL8367B_FLOWCTRL_PORT_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE0_MAX_PAGE_COUNT    0x0239
+#define    RTL8367B_FLOWCTRL_QUEUE0_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE0_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE1_MAX_PAGE_COUNT    0x023a
+#define    RTL8367B_FLOWCTRL_QUEUE1_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE1_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE2_MAX_PAGE_COUNT    0x023b
+#define    RTL8367B_FLOWCTRL_QUEUE2_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE2_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE3_MAX_PAGE_COUNT    0x023c
+#define    RTL8367B_FLOWCTRL_QUEUE3_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE3_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE4_MAX_PAGE_COUNT    0x023d
+#define    RTL8367B_FLOWCTRL_QUEUE4_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE4_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE5_MAX_PAGE_COUNT    0x023e
+#define    RTL8367B_FLOWCTRL_QUEUE5_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE5_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE6_MAX_PAGE_COUNT    0x023f
+#define    RTL8367B_FLOWCTRL_QUEUE6_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE6_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_QUEUE7_MAX_PAGE_COUNT    0x0240
+#define    RTL8367B_FLOWCTRL_QUEUE7_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_QUEUE7_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_MAX_PAGE_COUNT    0x0241
+#define    RTL8367B_FLOWCTRL_PORT_MAX_PAGE_COUNT_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_MAX_PAGE_COUNT_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_TOTAL_PACKET_COUNT    0x0243
+
+#define    RTL8367B_REG_HIGH_QUEUE_MASK0    0x0244
+#define    RTL8367B_PORT1_HIGH_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT1_HIGH_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT0_HIGH_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT0_HIGH_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_HIGH_QUEUE_MASK1    0x0245
+#define    RTL8367B_PORT3_HIGH_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT3_HIGH_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT2_HIGH_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT2_HIGH_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_HIGH_QUEUE_MASK2    0x0246
+#define    RTL8367B_PORT5_HIGH_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT5_HIGH_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT4_HIGH_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT4_HIGH_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_HIGH_QUEUE_MASK3    0x0247
+#define    RTL8367B_PORT7_HIGH_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT7_HIGH_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT6_HIGH_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT6_HIGH_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_LOW_QUEUE_TH    0x024c
+#define    RTL8367B_LOW_QUEUE_TH_OFFSET    0
+#define    RTL8367B_LOW_QUEUE_TH_MASK    0x3FF
+
+#define    RTL8367B_REG_TH_TX_PREFET    0x0250
+#define    RTL8367B_TH_TX_PREFET_OFFSET    0
+#define    RTL8367B_TH_TX_PREFET_MASK    0xFF
+
+#define    RTL8367B_REG_DUMMY_0251    0x0251
+
+#define    RTL8367B_REG_DUMMY_0252    0x0252
+
+#define    RTL8367B_REG_DUMMY_0253    0x0253
+
+#define    RTL8367B_REG_DUMMY_0254    0x0254
+
+#define    RTL8367B_REG_DUMMY_0255    0x0255
+
+#define    RTL8367B_REG_DUMMY_0256    0x0256
+
+#define    RTL8367B_REG_DUMMY_0257    0x0257
+
+#define    RTL8367B_REG_DUMMY_0258    0x0258
+
+#define    RTL8367B_REG_DUMMY_0259    0x0259
+
+#define    RTL8367B_REG_DUMMY_025A    0x025A
+
+#define    RTL8367B_REG_DUMMY_025B    0x025B
+
+#define    RTL8367B_REG_DUMMY_025C    0x025C
+
+/* (16'h0300)sch_reg */
+
+#define    RTL8367B_REG_SCHEDULE_WFQ_CTRL    0x0300
+#define    RTL8367B_SCHEDULE_WFQ_CTRL_OFFSET    0
+#define    RTL8367B_SCHEDULE_WFQ_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_WFQ_BURST_SIZE    0x0301
+
+#define    RTL8367B_REG_SCHEDULE_QUEUE_TYPE_CTRL0    0x0302
+#define    RTL8367B_PORT1_QUEUE7_TYPE_OFFSET    15
+#define    RTL8367B_PORT1_QUEUE7_TYPE_MASK    0x8000
+#define    RTL8367B_PORT1_QUEUE6_TYPE_OFFSET    14
+#define    RTL8367B_PORT1_QUEUE6_TYPE_MASK    0x4000
+#define    RTL8367B_PORT1_QUEUE5_TYPE_OFFSET    13
+#define    RTL8367B_PORT1_QUEUE5_TYPE_MASK    0x2000
+#define    RTL8367B_PORT1_QUEUE4_TYPE_OFFSET    12
+#define    RTL8367B_PORT1_QUEUE4_TYPE_MASK    0x1000
+#define    RTL8367B_PORT1_QUEUE3_TYPE_OFFSET    11
+#define    RTL8367B_PORT1_QUEUE3_TYPE_MASK    0x800
+#define    RTL8367B_PORT1_QUEUE2_TYPE_OFFSET    10
+#define    RTL8367B_PORT1_QUEUE2_TYPE_MASK    0x400
+#define    RTL8367B_PORT1_QUEUE1_TYPE_OFFSET    9
+#define    RTL8367B_PORT1_QUEUE1_TYPE_MASK    0x200
+#define    RTL8367B_PORT1_QUEUE0_TYPE_OFFSET    8
+#define    RTL8367B_PORT1_QUEUE0_TYPE_MASK    0x100
+#define    RTL8367B_PORT0_QUEUE7_TYPE_OFFSET    7
+#define    RTL8367B_PORT0_QUEUE7_TYPE_MASK    0x80
+#define    RTL8367B_PORT0_QUEUE6_TYPE_OFFSET    6
+#define    RTL8367B_PORT0_QUEUE6_TYPE_MASK    0x40
+#define    RTL8367B_PORT0_QUEUE5_TYPE_OFFSET    5
+#define    RTL8367B_PORT0_QUEUE5_TYPE_MASK    0x20
+#define    RTL8367B_PORT0_QUEUE4_TYPE_OFFSET    4
+#define    RTL8367B_PORT0_QUEUE4_TYPE_MASK    0x10
+#define    RTL8367B_PORT0_QUEUE3_TYPE_OFFSET    3
+#define    RTL8367B_PORT0_QUEUE3_TYPE_MASK    0x8
+#define    RTL8367B_PORT0_QUEUE2_TYPE_OFFSET    2
+#define    RTL8367B_PORT0_QUEUE2_TYPE_MASK    0x4
+#define    RTL8367B_PORT0_QUEUE1_TYPE_OFFSET    1
+#define    RTL8367B_PORT0_QUEUE1_TYPE_MASK    0x2
+#define    RTL8367B_PORT0_QUEUE0_TYPE_OFFSET    0
+#define    RTL8367B_PORT0_QUEUE0_TYPE_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_QUEUE_TYPE_CTRL1    0x0303
+#define    RTL8367B_PORT3_QUEUE7_TYPE_OFFSET    15
+#define    RTL8367B_PORT3_QUEUE7_TYPE_MASK    0x8000
+#define    RTL8367B_PORT3_QUEUE6_TYPE_OFFSET    14
+#define    RTL8367B_PORT3_QUEUE6_TYPE_MASK    0x4000
+#define    RTL8367B_PORT3_QUEUE5_TYPE_OFFSET    13
+#define    RTL8367B_PORT3_QUEUE5_TYPE_MASK    0x2000
+#define    RTL8367B_PORT3_QUEUE4_TYPE_OFFSET    12
+#define    RTL8367B_PORT3_QUEUE4_TYPE_MASK    0x1000
+#define    RTL8367B_PORT3_QUEUE3_TYPE_OFFSET    11
+#define    RTL8367B_PORT3_QUEUE3_TYPE_MASK    0x800
+#define    RTL8367B_PORT3_QUEUE2_TYPE_OFFSET    10
+#define    RTL8367B_PORT3_QUEUE2_TYPE_MASK    0x400
+#define    RTL8367B_PORT3_QUEUE1_TYPE_OFFSET    9
+#define    RTL8367B_PORT3_QUEUE1_TYPE_MASK    0x200
+#define    RTL8367B_PORT3_QUEUE0_TYPE_OFFSET    8
+#define    RTL8367B_PORT3_QUEUE0_TYPE_MASK    0x100
+#define    RTL8367B_PORT2_QUEUE7_TYPE_OFFSET    7
+#define    RTL8367B_PORT2_QUEUE7_TYPE_MASK    0x80
+#define    RTL8367B_PORT2_QUEUE6_TYPE_OFFSET    6
+#define    RTL8367B_PORT2_QUEUE6_TYPE_MASK    0x40
+#define    RTL8367B_PORT2_QUEUE5_TYPE_OFFSET    5
+#define    RTL8367B_PORT2_QUEUE5_TYPE_MASK    0x20
+#define    RTL8367B_PORT2_QUEUE4_TYPE_OFFSET    4
+#define    RTL8367B_PORT2_QUEUE4_TYPE_MASK    0x10
+#define    RTL8367B_PORT2_QUEUE3_TYPE_OFFSET    3
+#define    RTL8367B_PORT2_QUEUE3_TYPE_MASK    0x8
+#define    RTL8367B_PORT2_QUEUE2_TYPE_OFFSET    2
+#define    RTL8367B_PORT2_QUEUE2_TYPE_MASK    0x4
+#define    RTL8367B_PORT2_QUEUE1_TYPE_OFFSET    1
+#define    RTL8367B_PORT2_QUEUE1_TYPE_MASK    0x2
+#define    RTL8367B_PORT2_QUEUE0_TYPE_OFFSET    0
+#define    RTL8367B_PORT2_QUEUE0_TYPE_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_QUEUE_TYPE_CTRL2    0x0304
+#define    RTL8367B_PORT5_QUEUE7_TYPE_OFFSET    15
+#define    RTL8367B_PORT5_QUEUE7_TYPE_MASK    0x8000
+#define    RTL8367B_PORT5_QUEUE6_TYPE_OFFSET    14
+#define    RTL8367B_PORT5_QUEUE6_TYPE_MASK    0x4000
+#define    RTL8367B_PORT5_QUEUE5_TYPE_OFFSET    13
+#define    RTL8367B_PORT5_QUEUE5_TYPE_MASK    0x2000
+#define    RTL8367B_PORT5_QUEUE4_TYPE_OFFSET    12
+#define    RTL8367B_PORT5_QUEUE4_TYPE_MASK    0x1000
+#define    RTL8367B_PORT5_QUEUE3_TYPE_OFFSET    11
+#define    RTL8367B_PORT5_QUEUE3_TYPE_MASK    0x800
+#define    RTL8367B_PORT5_QUEUE2_TYPE_OFFSET    10
+#define    RTL8367B_PORT5_QUEUE2_TYPE_MASK    0x400
+#define    RTL8367B_PORT5_QUEUE1_TYPE_OFFSET    9
+#define    RTL8367B_PORT5_QUEUE1_TYPE_MASK    0x200
+#define    RTL8367B_PORT5_QUEUE0_TYPE_OFFSET    8
+#define    RTL8367B_PORT5_QUEUE0_TYPE_MASK    0x100
+#define    RTL8367B_PORT4_QUEUE7_TYPE_OFFSET    7
+#define    RTL8367B_PORT4_QUEUE7_TYPE_MASK    0x80
+#define    RTL8367B_PORT4_QUEUE6_TYPE_OFFSET    6
+#define    RTL8367B_PORT4_QUEUE6_TYPE_MASK    0x40
+#define    RTL8367B_PORT4_QUEUE5_TYPE_OFFSET    5
+#define    RTL8367B_PORT4_QUEUE5_TYPE_MASK    0x20
+#define    RTL8367B_PORT4_QUEUE4_TYPE_OFFSET    4
+#define    RTL8367B_PORT4_QUEUE4_TYPE_MASK    0x10
+#define    RTL8367B_PORT4_QUEUE3_TYPE_OFFSET    3
+#define    RTL8367B_PORT4_QUEUE3_TYPE_MASK    0x8
+#define    RTL8367B_PORT4_QUEUE2_TYPE_OFFSET    2
+#define    RTL8367B_PORT4_QUEUE2_TYPE_MASK    0x4
+#define    RTL8367B_PORT4_QUEUE1_TYPE_OFFSET    1
+#define    RTL8367B_PORT4_QUEUE1_TYPE_MASK    0x2
+#define    RTL8367B_PORT4_QUEUE0_TYPE_OFFSET    0
+#define    RTL8367B_PORT4_QUEUE0_TYPE_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_QUEUE_TYPE_CTRL3    0x0305
+#define    RTL8367B_PORT7_QUEUE7_TYPE_OFFSET    15
+#define    RTL8367B_PORT7_QUEUE7_TYPE_MASK    0x8000
+#define    RTL8367B_PORT7_QUEUE6_TYPE_OFFSET    14
+#define    RTL8367B_PORT7_QUEUE6_TYPE_MASK    0x4000
+#define    RTL8367B_PORT7_QUEUE5_TYPE_OFFSET    13
+#define    RTL8367B_PORT7_QUEUE5_TYPE_MASK    0x2000
+#define    RTL8367B_PORT7_QUEUE4_TYPE_OFFSET    12
+#define    RTL8367B_PORT7_QUEUE4_TYPE_MASK    0x1000
+#define    RTL8367B_PORT7_QUEUE3_TYPE_OFFSET    11
+#define    RTL8367B_PORT7_QUEUE3_TYPE_MASK    0x800
+#define    RTL8367B_PORT7_QUEUE2_TYPE_OFFSET    10
+#define    RTL8367B_PORT7_QUEUE2_TYPE_MASK    0x400
+#define    RTL8367B_PORT7_QUEUE1_TYPE_OFFSET    9
+#define    RTL8367B_PORT7_QUEUE1_TYPE_MASK    0x200
+#define    RTL8367B_PORT7_QUEUE0_TYPE_OFFSET    8
+#define    RTL8367B_PORT7_QUEUE0_TYPE_MASK    0x100
+#define    RTL8367B_PORT6_QUEUE7_TYPE_OFFSET    7
+#define    RTL8367B_PORT6_QUEUE7_TYPE_MASK    0x80
+#define    RTL8367B_PORT6_QUEUE6_TYPE_OFFSET    6
+#define    RTL8367B_PORT6_QUEUE6_TYPE_MASK    0x40
+#define    RTL8367B_PORT6_QUEUE5_TYPE_OFFSET    5
+#define    RTL8367B_PORT6_QUEUE5_TYPE_MASK    0x20
+#define    RTL8367B_PORT6_QUEUE4_TYPE_OFFSET    4
+#define    RTL8367B_PORT6_QUEUE4_TYPE_MASK    0x10
+#define    RTL8367B_PORT6_QUEUE3_TYPE_OFFSET    3
+#define    RTL8367B_PORT6_QUEUE3_TYPE_MASK    0x8
+#define    RTL8367B_PORT6_QUEUE2_TYPE_OFFSET    2
+#define    RTL8367B_PORT6_QUEUE2_TYPE_MASK    0x4
+#define    RTL8367B_PORT6_QUEUE1_TYPE_OFFSET    1
+#define    RTL8367B_PORT6_QUEUE1_TYPE_MASK    0x2
+#define    RTL8367B_PORT6_QUEUE0_TYPE_OFFSET    0
+#define    RTL8367B_PORT6_QUEUE0_TYPE_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_APR_CTRL0    0x030a
+#define    RTL8367B_PORT7_APR_ENABLE_OFFSET    7
+#define    RTL8367B_PORT7_APR_ENABLE_MASK    0x80
+#define    RTL8367B_PORT6_APR_ENABLE_OFFSET    6
+#define    RTL8367B_PORT6_APR_ENABLE_MASK    0x40
+#define    RTL8367B_PORT5_APR_ENABLE_OFFSET    5
+#define    RTL8367B_PORT5_APR_ENABLE_MASK    0x20
+#define    RTL8367B_PORT4_APR_ENABLE_OFFSET    4
+#define    RTL8367B_PORT4_APR_ENABLE_MASK    0x10
+#define    RTL8367B_PORT3_APR_ENABLE_OFFSET    3
+#define    RTL8367B_PORT3_APR_ENABLE_MASK    0x8
+#define    RTL8367B_PORT2_APR_ENABLE_OFFSET    2
+#define    RTL8367B_PORT2_APR_ENABLE_MASK    0x4
+#define    RTL8367B_PORT1_APR_ENABLE_OFFSET    1
+#define    RTL8367B_PORT1_APR_ENABLE_MASK    0x2
+#define    RTL8367B_PORT0_APR_ENABLE_OFFSET    0
+#define    RTL8367B_PORT0_APR_ENABLE_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE0_WFQ_WEIGHT    0x030c
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE1_WFQ_WEIGHT    0x030d
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE2_WFQ_WEIGHT    0x030e
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE3_WFQ_WEIGHT    0x030f
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE4_WFQ_WEIGHT    0x0310
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE5_WFQ_WEIGHT    0x0311
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE6_WFQ_WEIGHT    0x0312
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_QUEUE7_WFQ_WEIGHT    0x0313
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE0_WFQ_WEIGHT    0x0314
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE1_WFQ_WEIGHT    0x0315
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE2_WFQ_WEIGHT    0x0316
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE3_WFQ_WEIGHT    0x0317
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE4_WFQ_WEIGHT    0x0318
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE5_WFQ_WEIGHT    0x0319
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE6_WFQ_WEIGHT    0x031a
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_QUEUE7_WFQ_WEIGHT    0x031b
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE0_WFQ_WEIGHT    0x031c
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE1_WFQ_WEIGHT    0x031d
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE2_WFQ_WEIGHT    0x031e
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE3_WFQ_WEIGHT    0x031f
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE4_WFQ_WEIGHT    0x0320
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE5_WFQ_WEIGHT    0x0321
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE6_WFQ_WEIGHT    0x0322
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_QUEUE7_WFQ_WEIGHT    0x0323
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE0_WFQ_WEIGHT    0x0324
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE1_WFQ_WEIGHT    0x0325
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE2_WFQ_WEIGHT    0x0326
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE3_WFQ_WEIGHT    0x0327
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE4_WFQ_WEIGHT    0x0328
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE5_WFQ_WEIGHT    0x0329
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE6_WFQ_WEIGHT    0x032a
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_QUEUE7_WFQ_WEIGHT    0x032b
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE0_WFQ_WEIGHT    0x032c
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE1_WFQ_WEIGHT    0x032d
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE2_WFQ_WEIGHT    0x032e
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE3_WFQ_WEIGHT    0x032f
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE4_WFQ_WEIGHT    0x0330
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE5_WFQ_WEIGHT    0x0331
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE6_WFQ_WEIGHT    0x0332
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_QUEUE7_WFQ_WEIGHT    0x0333
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE0_WFQ_WEIGHT    0x0334
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE1_WFQ_WEIGHT    0x0335
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE2_WFQ_WEIGHT    0x0336
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE3_WFQ_WEIGHT    0x0337
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE4_WFQ_WEIGHT    0x0338
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE5_WFQ_WEIGHT    0x0339
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE6_WFQ_WEIGHT    0x033a
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_QUEUE7_WFQ_WEIGHT    0x033b
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE0_WFQ_WEIGHT    0x033c
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE1_WFQ_WEIGHT    0x033d
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE2_WFQ_WEIGHT    0x033e
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE3_WFQ_WEIGHT    0x033f
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE4_WFQ_WEIGHT    0x0340
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE5_WFQ_WEIGHT    0x0341
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE6_WFQ_WEIGHT    0x0342
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_QUEUE7_WFQ_WEIGHT    0x0343
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE0_WFQ_WEIGHT    0x0344
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE1_WFQ_WEIGHT    0x0345
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE1_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE1_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE2_WFQ_WEIGHT    0x0346
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE2_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE2_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE3_WFQ_WEIGHT    0x0347
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE3_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE3_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE4_WFQ_WEIGHT    0x0348
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE4_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE4_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE5_WFQ_WEIGHT    0x0349
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE5_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE5_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE6_WFQ_WEIGHT    0x034a
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE6_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE6_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_QUEUE7_WFQ_WEIGHT    0x034b
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE7_WFQ_WEIGHT_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_QUEUE7_WFQ_WEIGHT_MASK    0x7F
+
+#define    RTL8367B_REG_PORT0_EGRESSBW_CTRL0    0x038c
+
+#define    RTL8367B_REG_PORT0_EGRESSBW_CTRL1    0x038d
+#define    RTL8367B_PORT0_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT0_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT1_EGRESSBW_CTRL0    0x038e
+
+#define    RTL8367B_REG_PORT1_EGRESSBW_CTRL1    0x038f
+#define    RTL8367B_PORT1_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT1_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT2_EGRESSBW_CTRL0    0x0390
+
+#define    RTL8367B_REG_PORT2_EGRESSBW_CTRL1    0x0391
+#define    RTL8367B_PORT2_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT2_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT3_EGRESSBW_CTRL0    0x0392
+
+#define    RTL8367B_REG_PORT3_EGRESSBW_CTRL1    0x0393
+#define    RTL8367B_PORT3_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT3_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT4_EGRESSBW_CTRL0    0x0394
+
+#define    RTL8367B_REG_PORT4_EGRESSBW_CTRL1    0x0395
+#define    RTL8367B_PORT4_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT4_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT5_EGRESSBW_CTRL0    0x0396
+
+#define    RTL8367B_REG_PORT5_EGRESSBW_CTRL1    0x0397
+#define    RTL8367B_PORT5_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT5_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT6_EGRESSBW_CTRL0    0x0398
+
+#define    RTL8367B_REG_PORT6_EGRESSBW_CTRL1    0x0399
+#define    RTL8367B_PORT6_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT6_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_PORT7_EGRESSBW_CTRL0    0x039a
+
+#define    RTL8367B_REG_PORT7_EGRESSBW_CTRL1    0x039b
+#define    RTL8367B_PORT7_EGRESSBW_CTRL1_OFFSET    0
+#define    RTL8367B_PORT7_EGRESSBW_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_APR_METER_CTRL0    0x03ac
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT0_APR_METER_CTRL1    0x03ad
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT0_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_APR_METER_CTRL0    0x03b0
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT1_APR_METER_CTRL1    0x03b1
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT1_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_APR_METER_CTRL0    0x03b4
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT2_APR_METER_CTRL1    0x03b5
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT2_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_APR_METER_CTRL0    0x03b8
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT3_APR_METER_CTRL1    0x03b9
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT3_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_APR_METER_CTRL0    0x03bc
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT4_APR_METER_CTRL1    0x03bd
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT4_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_APR_METER_CTRL0    0x03c0
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT5_APR_METER_CTRL1    0x03c1
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT5_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_APR_METER_CTRL0    0x03c4
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT6_APR_METER_CTRL1    0x03c5
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT6_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_APR_METER_CTRL0    0x03c8
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE4_APR_METER_OFFSET    12
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE4_APR_METER_MASK    0x7000
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE3_APR_METER_OFFSET    9
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE3_APR_METER_MASK    0xE00
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE2_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE2_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE1_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE1_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE0_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL0_QUEUE0_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_SCHEDULE_PORT7_APR_METER_CTRL1    0x03c9
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE7_APR_METER_OFFSET    6
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE7_APR_METER_MASK    0x1C0
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE6_APR_METER_OFFSET    3
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE6_APR_METER_MASK    0x38
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE5_APR_METER_OFFSET    0
+#define    RTL8367B_SCHEDULE_PORT7_APR_METER_CTRL1_QUEUE5_APR_METER_MASK    0x7
+
+#define    RTL8367B_REG_LINE_RATE_1G_L    0x03ec
+
+#define    RTL8367B_REG_LINE_RATE_1G_H    0x03ed
+#define    RTL8367B_LINE_RATE_1G_H_OFFSET    0
+#define    RTL8367B_LINE_RATE_1G_H_MASK    0x1
+
+#define    RTL8367B_REG_LINE_RATE_100_L    0x03ee
+
+#define    RTL8367B_REG_LINE_RATE_100_H    0x03ef
+#define    RTL8367B_LINE_RATE_100_H_OFFSET    0
+#define    RTL8367B_LINE_RATE_100_H_MASK    0x1
+
+#define    RTL8367B_REG_LINE_RATE_10_L    0x03f0
+
+#define    RTL8367B_REG_LINE_RATE_10_H    0x03f1
+#define    RTL8367B_LINE_RATE_10_H_OFFSET    0
+#define    RTL8367B_LINE_RATE_10_H_MASK    0x1
+
+#define    RTL8367B_REG_DUMMY_03f2    0x03f2
+
+#define    RTL8367B_REG_DUMMY_03f3    0x03f3
+
+#define    RTL8367B_REG_DUMMY_03f4    0x03f4
+
+#define    RTL8367B_REG_DUMMY_03f5    0x03f5
+
+#define    RTL8367B_REG_DUMMY_03f6    0x03f6
+
+#define    RTL8367B_REG_BYPASS_LINE_RATE    0x03f7
+#define    RTL8367B_BYPASS_PORT7_CONSTRAINT_OFFSET    2
+#define    RTL8367B_BYPASS_PORT7_CONSTRAINT_MASK    0x4
+#define    RTL8367B_BYPASS_PORT6_CONSTRAINT_OFFSET    1
+#define    RTL8367B_BYPASS_PORT6_CONSTRAINT_MASK    0x2
+#define    RTL8367B_BYPASS_PORT5_CONSTRAINT_OFFSET    0
+#define    RTL8367B_BYPASS_PORT5_CONSTRAINT_MASK    0x1
+
+/* (16'h0500)table_reg */
+
+#define    RTL8367B_REG_TABLE_ACCESS_CTRL    0x0500
+#define    RTL8367B_SPA_OFFSET    8
+#define    RTL8367B_SPA_MASK    0x700
+#define    RTL8367B_ACCESS_METHOD_OFFSET    4
+#define    RTL8367B_ACCESS_METHOD_MASK    0x70
+#define    RTL8367B_COMMAND_TYPE_OFFSET    3
+#define    RTL8367B_COMMAND_TYPE_MASK    0x8
+#define    RTL8367B_TABLE_TYPE_OFFSET    0
+#define    RTL8367B_TABLE_TYPE_MASK    0x7
+
+#define    RTL8367B_REG_TABLE_ACCESS_ADDR    0x0501
+#define    RTL8367B_TABLE_ACCESS_ADDR_OFFSET    0
+#define    RTL8367B_TABLE_ACCESS_ADDR_MASK    0xFFF
+
+#define    RTL8367B_REG_TABLE_LUT_ADDR    0x0502
+#define    RTL8367B_TABLE_LUT_ADDR_BUSY_FLAG_OFFSET    13
+#define    RTL8367B_TABLE_LUT_ADDR_BUSY_FLAG_MASK    0x2000
+#define    RTL8367B_HIT_STATUS_OFFSET    12
+#define    RTL8367B_HIT_STATUS_MASK    0x1000
+#define    RTL8367B_TYPE_OFFSET    11
+#define    RTL8367B_TYPE_MASK    0x800
+#define    RTL8367B_TABLE_LUT_ADDR_ADDRESS_OFFSET    0
+#define    RTL8367B_TABLE_LUT_ADDR_ADDRESS_MASK    0x7FF
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA0    0x0510
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA1    0x0511
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA2    0x0512
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA3    0x0513
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA4    0x0514
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA5    0x0515
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA6    0x0516
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA7    0x0517
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA8    0x0518
+
+#define    RTL8367B_REG_TABLE_WRITE_DATA9    0x0519
+#define    RTL8367B_TABLE_WRITE_DATA9_OFFSET    0
+#define    RTL8367B_TABLE_WRITE_DATA9_MASK    0x1
+
+#define    RTL8367B_REG_TABLE_READ_DATA0    0x0520
+
+#define    RTL8367B_REG_TABLE_READ_DATA1    0x0521
+
+#define    RTL8367B_REG_TABLE_READ_DATA2    0x0522
+
+#define    RTL8367B_REG_TABLE_READ_DATA3    0x0523
+
+#define    RTL8367B_REG_TABLE_READ_DATA4    0x0524
+
+#define    RTL8367B_REG_TABLE_READ_DATA5    0x0525
+
+#define    RTL8367B_REG_TABLE_READ_DATA6    0x0526
+
+#define    RTL8367B_REG_TABLE_READ_DATA7    0x0527
+
+#define    RTL8367B_REG_TABLE_READ_DATA8    0x0528
+
+#define    RTL8367B_REG_TABLE_READ_DATA9    0x0529
+#define    RTL8367B_TABLE_READ_DATA9_OFFSET    0
+#define    RTL8367B_TABLE_READ_DATA9_MASK    0x1
+
+#define    RTL8367B_REG_TBL_DUMMY00    0x0550
+
+#define    RTL8367B_REG_TBL_DUMMY01    0x0551
+
+/* (16'h0600)acl_reg */
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE0_CTRL0    0x0600
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL0_FIELD1_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL0_FIELD1_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL0_FIELD0_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL0_FIELD0_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE0_CTRL1    0x0601
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL1_FIELD3_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL1_FIELD3_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL1_FIELD2_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL1_FIELD2_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE0_CTRL2    0x0602
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL2_FIELD5_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL2_FIELD5_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL2_FIELD4_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL2_FIELD4_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE0_CTRL3    0x0603
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL3_FIELD7_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL3_FIELD7_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL3_FIELD6_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE0_CTRL3_FIELD6_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE1_CTRL0    0x0604
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL0_FIELD1_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL0_FIELD1_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL0_FIELD0_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL0_FIELD0_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE1_CTRL1    0x0605
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL1_FIELD3_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL1_FIELD3_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL1_FIELD2_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL1_FIELD2_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE1_CTRL2    0x0606
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL2_FIELD5_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL2_FIELD5_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL2_FIELD4_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL2_FIELD4_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE1_CTRL3    0x0607
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL3_FIELD7_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL3_FIELD7_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL3_FIELD6_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE1_CTRL3_FIELD6_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE2_CTRL0    0x0608
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL0_FIELD1_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL0_FIELD1_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL0_FIELD0_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL0_FIELD0_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE2_CTRL1    0x0609
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL1_FIELD3_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL1_FIELD3_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL1_FIELD2_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL1_FIELD2_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE2_CTRL2    0x060a
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL2_FIELD5_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL2_FIELD5_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL2_FIELD4_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL2_FIELD4_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE2_CTRL3    0x060b
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL3_FIELD7_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL3_FIELD7_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL3_FIELD6_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE2_CTRL3_FIELD6_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE3_CTRL0    0x060c
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL0_FIELD1_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL0_FIELD1_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL0_FIELD0_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL0_FIELD0_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE3_CTRL1    0x060d
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL1_FIELD3_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL1_FIELD3_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL1_FIELD2_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL1_FIELD2_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE3_CTRL2    0x060e
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL2_FIELD5_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL2_FIELD5_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL2_FIELD4_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL2_FIELD4_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE3_CTRL3    0x060f
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL3_FIELD7_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL3_FIELD7_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL3_FIELD6_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE3_CTRL3_FIELD6_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE4_CTRL0    0x0610
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL0_FIELD1_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL0_FIELD1_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL0_FIELD0_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL0_FIELD0_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE4_CTRL1    0x0611
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL1_FIELD3_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL1_FIELD3_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL1_FIELD2_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL1_FIELD2_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE4_CTRL2    0x0612
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL2_FIELD5_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL2_FIELD5_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL2_FIELD4_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL2_FIELD4_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_RULE_TEMPLATE4_CTRL3    0x0613
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL3_FIELD7_OFFSET    8
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL3_FIELD7_MASK    0x7F00
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL3_FIELD6_OFFSET    0
+#define    RTL8367B_ACL_RULE_TEMPLATE4_CTRL3_FIELD6_MASK    0x7F
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL0    0x0614
+#define    RTL8367B_OP1_NOT_OFFSET    14
+#define    RTL8367B_OP1_NOT_MASK    0x4000
+#define    RTL8367B_ACT1_GPIO_OFFSET    13
+#define    RTL8367B_ACT1_GPIO_MASK    0x2000
+#define    RTL8367B_ACT1_FORWARD_OFFSET    12
+#define    RTL8367B_ACT1_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT1_POLICING_OFFSET    11
+#define    RTL8367B_ACT1_POLICING_MASK    0x800
+#define    RTL8367B_ACT1_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT1_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT1_SVID_OFFSET    9
+#define    RTL8367B_ACT1_SVID_MASK    0x200
+#define    RTL8367B_ACT1_CVID_OFFSET    8
+#define    RTL8367B_ACT1_CVID_MASK    0x100
+#define    RTL8367B_OP0_NOT_OFFSET    6
+#define    RTL8367B_OP0_NOT_MASK    0x40
+#define    RTL8367B_ACT0_GPIO_OFFSET    5
+#define    RTL8367B_ACT0_GPIO_MASK    0x20
+#define    RTL8367B_ACT0_FORWARD_OFFSET    4
+#define    RTL8367B_ACT0_FORWARD_MASK    0x10
+#define    RTL8367B_ACT0_POLICING_OFFSET    3
+#define    RTL8367B_ACT0_POLICING_MASK    0x8
+#define    RTL8367B_ACT0_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT0_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT0_SVID_OFFSET    1
+#define    RTL8367B_ACT0_SVID_MASK    0x2
+#define    RTL8367B_ACT0_CVID_OFFSET    0
+#define    RTL8367B_ACT0_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL1    0x0615
+#define    RTL8367B_OP3_NOT_OFFSET    14
+#define    RTL8367B_OP3_NOT_MASK    0x4000
+#define    RTL8367B_ACT3_GPIO_OFFSET    13
+#define    RTL8367B_ACT3_GPIO_MASK    0x2000
+#define    RTL8367B_ACT3_FORWARD_OFFSET    12
+#define    RTL8367B_ACT3_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT3_POLICING_OFFSET    11
+#define    RTL8367B_ACT3_POLICING_MASK    0x800
+#define    RTL8367B_ACT3_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT3_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT3_SVID_OFFSET    9
+#define    RTL8367B_ACT3_SVID_MASK    0x200
+#define    RTL8367B_ACT3_CVID_OFFSET    8
+#define    RTL8367B_ACT3_CVID_MASK    0x100
+#define    RTL8367B_OP2_NOT_OFFSET    6
+#define    RTL8367B_OP2_NOT_MASK    0x40
+#define    RTL8367B_ACT2_GPIO_OFFSET    5
+#define    RTL8367B_ACT2_GPIO_MASK    0x20
+#define    RTL8367B_ACT2_FORWARD_OFFSET    4
+#define    RTL8367B_ACT2_FORWARD_MASK    0x10
+#define    RTL8367B_ACT2_POLICING_OFFSET    3
+#define    RTL8367B_ACT2_POLICING_MASK    0x8
+#define    RTL8367B_ACT2_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT2_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT2_SVID_OFFSET    1
+#define    RTL8367B_ACT2_SVID_MASK    0x2
+#define    RTL8367B_ACT2_CVID_OFFSET    0
+#define    RTL8367B_ACT2_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL2    0x0616
+#define    RTL8367B_OP5_NOT_OFFSET    14
+#define    RTL8367B_OP5_NOT_MASK    0x4000
+#define    RTL8367B_ACT5_GPIO_OFFSET    13
+#define    RTL8367B_ACT5_GPIO_MASK    0x2000
+#define    RTL8367B_ACT5_FORWARD_OFFSET    12
+#define    RTL8367B_ACT5_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT5_POLICING_OFFSET    11
+#define    RTL8367B_ACT5_POLICING_MASK    0x800
+#define    RTL8367B_ACT5_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT5_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT5_SVID_OFFSET    9
+#define    RTL8367B_ACT5_SVID_MASK    0x200
+#define    RTL8367B_ACT5_CVID_OFFSET    8
+#define    RTL8367B_ACT5_CVID_MASK    0x100
+#define    RTL8367B_OP4_NOT_OFFSET    6
+#define    RTL8367B_OP4_NOT_MASK    0x40
+#define    RTL8367B_ACT4_GPIO_OFFSET    5
+#define    RTL8367B_ACT4_GPIO_MASK    0x20
+#define    RTL8367B_ACT4_FORWARD_OFFSET    4
+#define    RTL8367B_ACT4_FORWARD_MASK    0x10
+#define    RTL8367B_ACT4_POLICING_OFFSET    3
+#define    RTL8367B_ACT4_POLICING_MASK    0x8
+#define    RTL8367B_ACT4_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT4_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT4_SVID_OFFSET    1
+#define    RTL8367B_ACT4_SVID_MASK    0x2
+#define    RTL8367B_ACT4_CVID_OFFSET    0
+#define    RTL8367B_ACT4_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL3    0x0617
+#define    RTL8367B_OP7_NOT_OFFSET    14
+#define    RTL8367B_OP7_NOT_MASK    0x4000
+#define    RTL8367B_ACT7_GPIO_OFFSET    13
+#define    RTL8367B_ACT7_GPIO_MASK    0x2000
+#define    RTL8367B_ACT7_FORWARD_OFFSET    12
+#define    RTL8367B_ACT7_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT7_POLICING_OFFSET    11
+#define    RTL8367B_ACT7_POLICING_MASK    0x800
+#define    RTL8367B_ACT7_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT7_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT7_SVID_OFFSET    9
+#define    RTL8367B_ACT7_SVID_MASK    0x200
+#define    RTL8367B_ACT7_CVID_OFFSET    8
+#define    RTL8367B_ACT7_CVID_MASK    0x100
+#define    RTL8367B_OP6_NOT_OFFSET    6
+#define    RTL8367B_OP6_NOT_MASK    0x40
+#define    RTL8367B_ACT6_GPIO_OFFSET    5
+#define    RTL8367B_ACT6_GPIO_MASK    0x20
+#define    RTL8367B_ACT6_FORWARD_OFFSET    4
+#define    RTL8367B_ACT6_FORWARD_MASK    0x10
+#define    RTL8367B_ACT6_POLICING_OFFSET    3
+#define    RTL8367B_ACT6_POLICING_MASK    0x8
+#define    RTL8367B_ACT6_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT6_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT6_SVID_OFFSET    1
+#define    RTL8367B_ACT6_SVID_MASK    0x2
+#define    RTL8367B_ACT6_CVID_OFFSET    0
+#define    RTL8367B_ACT6_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL4    0x0618
+#define    RTL8367B_OP9_NOT_OFFSET    14
+#define    RTL8367B_OP9_NOT_MASK    0x4000
+#define    RTL8367B_ACT9_GPIO_OFFSET    13
+#define    RTL8367B_ACT9_GPIO_MASK    0x2000
+#define    RTL8367B_ACT9_FORWARD_OFFSET    12
+#define    RTL8367B_ACT9_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT9_POLICING_OFFSET    11
+#define    RTL8367B_ACT9_POLICING_MASK    0x800
+#define    RTL8367B_ACT9_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT9_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT9_SVID_OFFSET    9
+#define    RTL8367B_ACT9_SVID_MASK    0x200
+#define    RTL8367B_ACT9_CVID_OFFSET    8
+#define    RTL8367B_ACT9_CVID_MASK    0x100
+#define    RTL8367B_OP8_NOT_OFFSET    6
+#define    RTL8367B_OP8_NOT_MASK    0x40
+#define    RTL8367B_ACT8_GPIO_OFFSET    5
+#define    RTL8367B_ACT8_GPIO_MASK    0x20
+#define    RTL8367B_ACT8_FORWARD_OFFSET    4
+#define    RTL8367B_ACT8_FORWARD_MASK    0x10
+#define    RTL8367B_ACT8_POLICING_OFFSET    3
+#define    RTL8367B_ACT8_POLICING_MASK    0x8
+#define    RTL8367B_ACT8_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT8_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT8_SVID_OFFSET    1
+#define    RTL8367B_ACT8_SVID_MASK    0x2
+#define    RTL8367B_ACT8_CVID_OFFSET    0
+#define    RTL8367B_ACT8_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL5    0x0619
+#define    RTL8367B_OP11_NOT_OFFSET    14
+#define    RTL8367B_OP11_NOT_MASK    0x4000
+#define    RTL8367B_ACT11_GPIO_OFFSET    13
+#define    RTL8367B_ACT11_GPIO_MASK    0x2000
+#define    RTL8367B_ACT11_FORWARD_OFFSET    12
+#define    RTL8367B_ACT11_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT11_POLICING_OFFSET    11
+#define    RTL8367B_ACT11_POLICING_MASK    0x800
+#define    RTL8367B_ACT11_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT11_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT11_SVID_OFFSET    9
+#define    RTL8367B_ACT11_SVID_MASK    0x200
+#define    RTL8367B_ACT11_CVID_OFFSET    8
+#define    RTL8367B_ACT11_CVID_MASK    0x100
+#define    RTL8367B_OP10_NOT_OFFSET    6
+#define    RTL8367B_OP10_NOT_MASK    0x40
+#define    RTL8367B_ACT10_GPIO_OFFSET    5
+#define    RTL8367B_ACT10_GPIO_MASK    0x20
+#define    RTL8367B_ACT10_FORWARD_OFFSET    4
+#define    RTL8367B_ACT10_FORWARD_MASK    0x10
+#define    RTL8367B_ACT10_POLICING_OFFSET    3
+#define    RTL8367B_ACT10_POLICING_MASK    0x8
+#define    RTL8367B_ACT10_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT10_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT10_SVID_OFFSET    1
+#define    RTL8367B_ACT10_SVID_MASK    0x2
+#define    RTL8367B_ACT10_CVID_OFFSET    0
+#define    RTL8367B_ACT10_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL6    0x061a
+#define    RTL8367B_OP13_NOT_OFFSET    14
+#define    RTL8367B_OP13_NOT_MASK    0x4000
+#define    RTL8367B_ACT13_GPIO_OFFSET    13
+#define    RTL8367B_ACT13_GPIO_MASK    0x2000
+#define    RTL8367B_ACT13_FORWARD_OFFSET    12
+#define    RTL8367B_ACT13_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT13_POLICING_OFFSET    11
+#define    RTL8367B_ACT13_POLICING_MASK    0x800
+#define    RTL8367B_ACT13_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT13_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT13_SVID_OFFSET    9
+#define    RTL8367B_ACT13_SVID_MASK    0x200
+#define    RTL8367B_ACT13_CVID_OFFSET    8
+#define    RTL8367B_ACT13_CVID_MASK    0x100
+#define    RTL8367B_OP12_NOT_OFFSET    6
+#define    RTL8367B_OP12_NOT_MASK    0x40
+#define    RTL8367B_ACT12_GPIO_OFFSET    5
+#define    RTL8367B_ACT12_GPIO_MASK    0x20
+#define    RTL8367B_ACT12_FORWARD_OFFSET    4
+#define    RTL8367B_ACT12_FORWARD_MASK    0x10
+#define    RTL8367B_ACT12_POLICING_OFFSET    3
+#define    RTL8367B_ACT12_POLICING_MASK    0x8
+#define    RTL8367B_ACT12_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT12_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT12_SVID_OFFSET    1
+#define    RTL8367B_ACT12_SVID_MASK    0x2
+#define    RTL8367B_ACT12_CVID_OFFSET    0
+#define    RTL8367B_ACT12_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL7    0x061b
+#define    RTL8367B_OP15_NOT_OFFSET    14
+#define    RTL8367B_OP15_NOT_MASK    0x4000
+#define    RTL8367B_ACT15_GPIO_OFFSET    13
+#define    RTL8367B_ACT15_GPIO_MASK    0x2000
+#define    RTL8367B_ACT15_FORWARD_OFFSET    12
+#define    RTL8367B_ACT15_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT15_POLICING_OFFSET    11
+#define    RTL8367B_ACT15_POLICING_MASK    0x800
+#define    RTL8367B_ACT15_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT15_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT15_SVID_OFFSET    9
+#define    RTL8367B_ACT15_SVID_MASK    0x200
+#define    RTL8367B_ACT15_CVID_OFFSET    8
+#define    RTL8367B_ACT15_CVID_MASK    0x100
+#define    RTL8367B_OP14_NOT_OFFSET    6
+#define    RTL8367B_OP14_NOT_MASK    0x40
+#define    RTL8367B_ACT14_GPIO_OFFSET    5
+#define    RTL8367B_ACT14_GPIO_MASK    0x20
+#define    RTL8367B_ACT14_FORWARD_OFFSET    4
+#define    RTL8367B_ACT14_FORWARD_MASK    0x10
+#define    RTL8367B_ACT14_POLICING_OFFSET    3
+#define    RTL8367B_ACT14_POLICING_MASK    0x8
+#define    RTL8367B_ACT14_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT14_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT14_SVID_OFFSET    1
+#define    RTL8367B_ACT14_SVID_MASK    0x2
+#define    RTL8367B_ACT14_CVID_OFFSET    0
+#define    RTL8367B_ACT14_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL8    0x061c
+#define    RTL8367B_OP17_NOT_OFFSET    14
+#define    RTL8367B_OP17_NOT_MASK    0x4000
+#define    RTL8367B_ACT17_GPIO_OFFSET    13
+#define    RTL8367B_ACT17_GPIO_MASK    0x2000
+#define    RTL8367B_ACT17_FORWARD_OFFSET    12
+#define    RTL8367B_ACT17_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT17_POLICING_OFFSET    11
+#define    RTL8367B_ACT17_POLICING_MASK    0x800
+#define    RTL8367B_ACT17_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT17_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT17_SVID_OFFSET    9
+#define    RTL8367B_ACT17_SVID_MASK    0x200
+#define    RTL8367B_ACT17_CVID_OFFSET    8
+#define    RTL8367B_ACT17_CVID_MASK    0x100
+#define    RTL8367B_OP16_NOT_OFFSET    6
+#define    RTL8367B_OP16_NOT_MASK    0x40
+#define    RTL8367B_ACT16_GPIO_OFFSET    5
+#define    RTL8367B_ACT16_GPIO_MASK    0x20
+#define    RTL8367B_ACT16_FORWARD_OFFSET    4
+#define    RTL8367B_ACT16_FORWARD_MASK    0x10
+#define    RTL8367B_ACT16_POLICING_OFFSET    3
+#define    RTL8367B_ACT16_POLICING_MASK    0x8
+#define    RTL8367B_ACT16_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT16_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT16_SVID_OFFSET    1
+#define    RTL8367B_ACT16_SVID_MASK    0x2
+#define    RTL8367B_ACT16_CVID_OFFSET    0
+#define    RTL8367B_ACT16_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL9    0x061d
+#define    RTL8367B_OP19_NOT_OFFSET    14
+#define    RTL8367B_OP19_NOT_MASK    0x4000
+#define    RTL8367B_ACT19_GPIO_OFFSET    13
+#define    RTL8367B_ACT19_GPIO_MASK    0x2000
+#define    RTL8367B_ACT19_FORWARD_OFFSET    12
+#define    RTL8367B_ACT19_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT19_POLICING_OFFSET    11
+#define    RTL8367B_ACT19_POLICING_MASK    0x800
+#define    RTL8367B_ACT19_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT19_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT19_SVID_OFFSET    9
+#define    RTL8367B_ACT19_SVID_MASK    0x200
+#define    RTL8367B_ACT19_CVID_OFFSET    8
+#define    RTL8367B_ACT19_CVID_MASK    0x100
+#define    RTL8367B_OP18_NOT_OFFSET    6
+#define    RTL8367B_OP18_NOT_MASK    0x40
+#define    RTL8367B_ACT18_GPIO_OFFSET    5
+#define    RTL8367B_ACT18_GPIO_MASK    0x20
+#define    RTL8367B_ACT18_FORWARD_OFFSET    4
+#define    RTL8367B_ACT18_FORWARD_MASK    0x10
+#define    RTL8367B_ACT18_POLICING_OFFSET    3
+#define    RTL8367B_ACT18_POLICING_MASK    0x8
+#define    RTL8367B_ACT18_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT18_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT18_SVID_OFFSET    1
+#define    RTL8367B_ACT18_SVID_MASK    0x2
+#define    RTL8367B_ACT18_CVID_OFFSET    0
+#define    RTL8367B_ACT18_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL10    0x061e
+#define    RTL8367B_OP21_NOT_OFFSET    14
+#define    RTL8367B_OP21_NOT_MASK    0x4000
+#define    RTL8367B_ACT21_GPIO_OFFSET    13
+#define    RTL8367B_ACT21_GPIO_MASK    0x2000
+#define    RTL8367B_ACT21_FORWARD_OFFSET    12
+#define    RTL8367B_ACT21_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT21_POLICING_OFFSET    11
+#define    RTL8367B_ACT21_POLICING_MASK    0x800
+#define    RTL8367B_ACT21_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT21_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT21_SVID_OFFSET    9
+#define    RTL8367B_ACT21_SVID_MASK    0x200
+#define    RTL8367B_ACT21_CVID_OFFSET    8
+#define    RTL8367B_ACT21_CVID_MASK    0x100
+#define    RTL8367B_OP20_NOT_OFFSET    6
+#define    RTL8367B_OP20_NOT_MASK    0x40
+#define    RTL8367B_ACT20_GPIO_OFFSET    5
+#define    RTL8367B_ACT20_GPIO_MASK    0x20
+#define    RTL8367B_ACT20_FORWARD_OFFSET    4
+#define    RTL8367B_ACT20_FORWARD_MASK    0x10
+#define    RTL8367B_ACT20_POLICING_OFFSET    3
+#define    RTL8367B_ACT20_POLICING_MASK    0x8
+#define    RTL8367B_ACT20_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT20_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT20_SVID_OFFSET    1
+#define    RTL8367B_ACT20_SVID_MASK    0x2
+#define    RTL8367B_ACT20_CVID_OFFSET    0
+#define    RTL8367B_ACT20_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL11    0x061f
+#define    RTL8367B_OP23_NOT_OFFSET    14
+#define    RTL8367B_OP23_NOT_MASK    0x4000
+#define    RTL8367B_ACT23_GPIO_OFFSET    13
+#define    RTL8367B_ACT23_GPIO_MASK    0x2000
+#define    RTL8367B_ACT23_FORWARD_OFFSET    12
+#define    RTL8367B_ACT23_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT23_POLICING_OFFSET    11
+#define    RTL8367B_ACT23_POLICING_MASK    0x800
+#define    RTL8367B_ACT23_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT23_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT23_SVID_OFFSET    9
+#define    RTL8367B_ACT23_SVID_MASK    0x200
+#define    RTL8367B_ACT23_CVID_OFFSET    8
+#define    RTL8367B_ACT23_CVID_MASK    0x100
+#define    RTL8367B_OP22_NOT_OFFSET    6
+#define    RTL8367B_OP22_NOT_MASK    0x40
+#define    RTL8367B_ACT22_GPIO_OFFSET    5
+#define    RTL8367B_ACT22_GPIO_MASK    0x20
+#define    RTL8367B_ACT22_FORWARD_OFFSET    4
+#define    RTL8367B_ACT22_FORWARD_MASK    0x10
+#define    RTL8367B_ACT22_POLICING_OFFSET    3
+#define    RTL8367B_ACT22_POLICING_MASK    0x8
+#define    RTL8367B_ACT22_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT22_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT22_SVID_OFFSET    1
+#define    RTL8367B_ACT22_SVID_MASK    0x2
+#define    RTL8367B_ACT22_CVID_OFFSET    0
+#define    RTL8367B_ACT22_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL12    0x0620
+#define    RTL8367B_OP25_NOT_OFFSET    14
+#define    RTL8367B_OP25_NOT_MASK    0x4000
+#define    RTL8367B_ACT25_GPIO_OFFSET    13
+#define    RTL8367B_ACT25_GPIO_MASK    0x2000
+#define    RTL8367B_ACT25_FORWARD_OFFSET    12
+#define    RTL8367B_ACT25_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT25_POLICING_OFFSET    11
+#define    RTL8367B_ACT25_POLICING_MASK    0x800
+#define    RTL8367B_ACT25_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT25_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT25_SVID_OFFSET    9
+#define    RTL8367B_ACT25_SVID_MASK    0x200
+#define    RTL8367B_ACT25_CVID_OFFSET    8
+#define    RTL8367B_ACT25_CVID_MASK    0x100
+#define    RTL8367B_OP24_NOT_OFFSET    6
+#define    RTL8367B_OP24_NOT_MASK    0x40
+#define    RTL8367B_ACT24_GPIO_OFFSET    5
+#define    RTL8367B_ACT24_GPIO_MASK    0x20
+#define    RTL8367B_ACT24_FORWARD_OFFSET    4
+#define    RTL8367B_ACT24_FORWARD_MASK    0x10
+#define    RTL8367B_ACT24_POLICING_OFFSET    3
+#define    RTL8367B_ACT24_POLICING_MASK    0x8
+#define    RTL8367B_ACT24_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT24_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT24_SVID_OFFSET    1
+#define    RTL8367B_ACT24_SVID_MASK    0x2
+#define    RTL8367B_ACT24_CVID_OFFSET    0
+#define    RTL8367B_ACT24_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL13    0x0621
+#define    RTL8367B_OP27_NOT_OFFSET    14
+#define    RTL8367B_OP27_NOT_MASK    0x4000
+#define    RTL8367B_ACT27_GPIO_OFFSET    13
+#define    RTL8367B_ACT27_GPIO_MASK    0x2000
+#define    RTL8367B_ACT27_FORWARD_OFFSET    12
+#define    RTL8367B_ACT27_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT27_POLICING_OFFSET    11
+#define    RTL8367B_ACT27_POLICING_MASK    0x800
+#define    RTL8367B_ACT27_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT27_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT27_SVID_OFFSET    9
+#define    RTL8367B_ACT27_SVID_MASK    0x200
+#define    RTL8367B_ACT27_CVID_OFFSET    8
+#define    RTL8367B_ACT27_CVID_MASK    0x100
+#define    RTL8367B_OP26_NOT_OFFSET    6
+#define    RTL8367B_OP26_NOT_MASK    0x40
+#define    RTL8367B_ACT26_GPIO_OFFSET    5
+#define    RTL8367B_ACT26_GPIO_MASK    0x20
+#define    RTL8367B_ACT26_FORWARD_OFFSET    4
+#define    RTL8367B_ACT26_FORWARD_MASK    0x10
+#define    RTL8367B_ACT26_POLICING_OFFSET    3
+#define    RTL8367B_ACT26_POLICING_MASK    0x8
+#define    RTL8367B_ACT26_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT26_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT26_SVID_OFFSET    1
+#define    RTL8367B_ACT26_SVID_MASK    0x2
+#define    RTL8367B_ACT26_CVID_OFFSET    0
+#define    RTL8367B_ACT26_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL14    0x0622
+#define    RTL8367B_OP29_NOT_OFFSET    14
+#define    RTL8367B_OP29_NOT_MASK    0x4000
+#define    RTL8367B_ACT29_GPIO_OFFSET    13
+#define    RTL8367B_ACT29_GPIO_MASK    0x2000
+#define    RTL8367B_ACT29_FORWARD_OFFSET    12
+#define    RTL8367B_ACT29_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT29_POLICING_OFFSET    11
+#define    RTL8367B_ACT29_POLICING_MASK    0x800
+#define    RTL8367B_ACT29_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT29_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT29_SVID_OFFSET    9
+#define    RTL8367B_ACT29_SVID_MASK    0x200
+#define    RTL8367B_ACT29_CVID_OFFSET    8
+#define    RTL8367B_ACT29_CVID_MASK    0x100
+#define    RTL8367B_OP28_NOT_OFFSET    6
+#define    RTL8367B_OP28_NOT_MASK    0x40
+#define    RTL8367B_ACT28_GPIO_OFFSET    5
+#define    RTL8367B_ACT28_GPIO_MASK    0x20
+#define    RTL8367B_ACT28_FORWARD_OFFSET    4
+#define    RTL8367B_ACT28_FORWARD_MASK    0x10
+#define    RTL8367B_ACT28_POLICING_OFFSET    3
+#define    RTL8367B_ACT28_POLICING_MASK    0x8
+#define    RTL8367B_ACT28_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT28_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT28_SVID_OFFSET    1
+#define    RTL8367B_ACT28_SVID_MASK    0x2
+#define    RTL8367B_ACT28_CVID_OFFSET    0
+#define    RTL8367B_ACT28_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL15    0x0623
+#define    RTL8367B_OP31_NOT_OFFSET    14
+#define    RTL8367B_OP31_NOT_MASK    0x4000
+#define    RTL8367B_ACT31_GPIO_OFFSET    13
+#define    RTL8367B_ACT31_GPIO_MASK    0x2000
+#define    RTL8367B_ACT31_FORWARD_OFFSET    12
+#define    RTL8367B_ACT31_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT31_POLICING_OFFSET    11
+#define    RTL8367B_ACT31_POLICING_MASK    0x800
+#define    RTL8367B_ACT31_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT31_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT31_SVID_OFFSET    9
+#define    RTL8367B_ACT31_SVID_MASK    0x200
+#define    RTL8367B_ACT31_CVID_OFFSET    8
+#define    RTL8367B_ACT31_CVID_MASK    0x100
+#define    RTL8367B_OP30_NOT_OFFSET    6
+#define    RTL8367B_OP30_NOT_MASK    0x40
+#define    RTL8367B_ACT30_GPIO_OFFSET    5
+#define    RTL8367B_ACT30_GPIO_MASK    0x20
+#define    RTL8367B_ACT30_FORWARD_OFFSET    4
+#define    RTL8367B_ACT30_FORWARD_MASK    0x10
+#define    RTL8367B_ACT30_POLICING_OFFSET    3
+#define    RTL8367B_ACT30_POLICING_MASK    0x8
+#define    RTL8367B_ACT30_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT30_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT30_SVID_OFFSET    1
+#define    RTL8367B_ACT30_SVID_MASK    0x2
+#define    RTL8367B_ACT30_CVID_OFFSET    0
+#define    RTL8367B_ACT30_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL16    0x0624
+#define    RTL8367B_OP33_NOT_OFFSET    14
+#define    RTL8367B_OP33_NOT_MASK    0x4000
+#define    RTL8367B_ACT33_GPIO_OFFSET    13
+#define    RTL8367B_ACT33_GPIO_MASK    0x2000
+#define    RTL8367B_ACT33_FORWARD_OFFSET    12
+#define    RTL8367B_ACT33_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT33_POLICING_OFFSET    11
+#define    RTL8367B_ACT33_POLICING_MASK    0x800
+#define    RTL8367B_ACT33_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT33_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT33_SVID_OFFSET    9
+#define    RTL8367B_ACT33_SVID_MASK    0x200
+#define    RTL8367B_ACT33_CVID_OFFSET    8
+#define    RTL8367B_ACT33_CVID_MASK    0x100
+#define    RTL8367B_OP32_NOT_OFFSET    6
+#define    RTL8367B_OP32_NOT_MASK    0x40
+#define    RTL8367B_ACT32_GPIO_OFFSET    5
+#define    RTL8367B_ACT32_GPIO_MASK    0x20
+#define    RTL8367B_ACT32_FORWARD_OFFSET    4
+#define    RTL8367B_ACT32_FORWARD_MASK    0x10
+#define    RTL8367B_ACT32_POLICING_OFFSET    3
+#define    RTL8367B_ACT32_POLICING_MASK    0x8
+#define    RTL8367B_ACT32_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT32_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT32_SVID_OFFSET    1
+#define    RTL8367B_ACT32_SVID_MASK    0x2
+#define    RTL8367B_ACT32_CVID_OFFSET    0
+#define    RTL8367B_ACT32_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL17    0x0625
+#define    RTL8367B_OP35_NOT_OFFSET    14
+#define    RTL8367B_OP35_NOT_MASK    0x4000
+#define    RTL8367B_ACT35_GPIO_OFFSET    13
+#define    RTL8367B_ACT35_GPIO_MASK    0x2000
+#define    RTL8367B_ACT35_FORWARD_OFFSET    12
+#define    RTL8367B_ACT35_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT35_POLICING_OFFSET    11
+#define    RTL8367B_ACT35_POLICING_MASK    0x800
+#define    RTL8367B_ACT35_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT35_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT35_SVID_OFFSET    9
+#define    RTL8367B_ACT35_SVID_MASK    0x200
+#define    RTL8367B_ACT35_CVID_OFFSET    8
+#define    RTL8367B_ACT35_CVID_MASK    0x100
+#define    RTL8367B_OP34_NOT_OFFSET    6
+#define    RTL8367B_OP34_NOT_MASK    0x40
+#define    RTL8367B_ACT34_GPIO_OFFSET    5
+#define    RTL8367B_ACT34_GPIO_MASK    0x20
+#define    RTL8367B_ACT34_FORWARD_OFFSET    4
+#define    RTL8367B_ACT34_FORWARD_MASK    0x10
+#define    RTL8367B_ACT34_POLICING_OFFSET    3
+#define    RTL8367B_ACT34_POLICING_MASK    0x8
+#define    RTL8367B_ACT34_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT34_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT34_SVID_OFFSET    1
+#define    RTL8367B_ACT34_SVID_MASK    0x2
+#define    RTL8367B_ACT34_CVID_OFFSET    0
+#define    RTL8367B_ACT34_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL18    0x0626
+#define    RTL8367B_OP37_NOT_OFFSET    14
+#define    RTL8367B_OP37_NOT_MASK    0x4000
+#define    RTL8367B_ACT37_GPIO_OFFSET    13
+#define    RTL8367B_ACT37_GPIO_MASK    0x2000
+#define    RTL8367B_ACT37_FORWARD_OFFSET    12
+#define    RTL8367B_ACT37_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT37_POLICING_OFFSET    11
+#define    RTL8367B_ACT37_POLICING_MASK    0x800
+#define    RTL8367B_ACT37_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT37_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT37_SVID_OFFSET    9
+#define    RTL8367B_ACT37_SVID_MASK    0x200
+#define    RTL8367B_ACT37_CVID_OFFSET    8
+#define    RTL8367B_ACT37_CVID_MASK    0x100
+#define    RTL8367B_OP36_NOT_OFFSET    6
+#define    RTL8367B_OP36_NOT_MASK    0x40
+#define    RTL8367B_ACT36_GPIO_OFFSET    5
+#define    RTL8367B_ACT36_GPIO_MASK    0x20
+#define    RTL8367B_ACT36_FORWARD_OFFSET    4
+#define    RTL8367B_ACT36_FORWARD_MASK    0x10
+#define    RTL8367B_ACT36_POLICING_OFFSET    3
+#define    RTL8367B_ACT36_POLICING_MASK    0x8
+#define    RTL8367B_ACT36_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT36_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT36_SVID_OFFSET    1
+#define    RTL8367B_ACT36_SVID_MASK    0x2
+#define    RTL8367B_ACT36_CVID_OFFSET    0
+#define    RTL8367B_ACT36_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL19    0x0627
+#define    RTL8367B_OP39_NOT_OFFSET    14
+#define    RTL8367B_OP39_NOT_MASK    0x4000
+#define    RTL8367B_ACT39_GPIO_OFFSET    13
+#define    RTL8367B_ACT39_GPIO_MASK    0x2000
+#define    RTL8367B_ACT39_FORWARD_OFFSET    12
+#define    RTL8367B_ACT39_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT39_POLICING_OFFSET    11
+#define    RTL8367B_ACT39_POLICING_MASK    0x800
+#define    RTL8367B_ACT39_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT39_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT39_SVID_OFFSET    9
+#define    RTL8367B_ACT39_SVID_MASK    0x200
+#define    RTL8367B_ACT39_CVID_OFFSET    8
+#define    RTL8367B_ACT39_CVID_MASK    0x100
+#define    RTL8367B_OP38_NOT_OFFSET    6
+#define    RTL8367B_OP38_NOT_MASK    0x40
+#define    RTL8367B_ACT38_GPIO_OFFSET    5
+#define    RTL8367B_ACT38_GPIO_MASK    0x20
+#define    RTL8367B_ACT38_FORWARD_OFFSET    4
+#define    RTL8367B_ACT38_FORWARD_MASK    0x10
+#define    RTL8367B_ACT38_POLICING_OFFSET    3
+#define    RTL8367B_ACT38_POLICING_MASK    0x8
+#define    RTL8367B_ACT38_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT38_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT38_SVID_OFFSET    1
+#define    RTL8367B_ACT38_SVID_MASK    0x2
+#define    RTL8367B_ACT38_CVID_OFFSET    0
+#define    RTL8367B_ACT38_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL20    0x0628
+#define    RTL8367B_OP41_NOT_OFFSET    14
+#define    RTL8367B_OP41_NOT_MASK    0x4000
+#define    RTL8367B_ACT41_GPIO_OFFSET    13
+#define    RTL8367B_ACT41_GPIO_MASK    0x2000
+#define    RTL8367B_ACT41_FORWARD_OFFSET    12
+#define    RTL8367B_ACT41_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT41_POLICING_OFFSET    11
+#define    RTL8367B_ACT41_POLICING_MASK    0x800
+#define    RTL8367B_ACT41_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT41_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT41_SVID_OFFSET    9
+#define    RTL8367B_ACT41_SVID_MASK    0x200
+#define    RTL8367B_ACT41_CVID_OFFSET    8
+#define    RTL8367B_ACT41_CVID_MASK    0x100
+#define    RTL8367B_OP40_NOT_OFFSET    6
+#define    RTL8367B_OP40_NOT_MASK    0x40
+#define    RTL8367B_ACT40_GPIO_OFFSET    5
+#define    RTL8367B_ACT40_GPIO_MASK    0x20
+#define    RTL8367B_ACT40_FORWARD_OFFSET    4
+#define    RTL8367B_ACT40_FORWARD_MASK    0x10
+#define    RTL8367B_ACT40_POLICING_OFFSET    3
+#define    RTL8367B_ACT40_POLICING_MASK    0x8
+#define    RTL8367B_ACT40_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT40_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT40_SVID_OFFSET    1
+#define    RTL8367B_ACT40_SVID_MASK    0x2
+#define    RTL8367B_ACT40_CVID_OFFSET    0
+#define    RTL8367B_ACT40_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL21    0x0629
+#define    RTL8367B_OP43_NOT_OFFSET    14
+#define    RTL8367B_OP43_NOT_MASK    0x4000
+#define    RTL8367B_ACT43_GPIO_OFFSET    13
+#define    RTL8367B_ACT43_GPIO_MASK    0x2000
+#define    RTL8367B_ACT43_FORWARD_OFFSET    12
+#define    RTL8367B_ACT43_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT43_POLICING_OFFSET    11
+#define    RTL8367B_ACT43_POLICING_MASK    0x800
+#define    RTL8367B_ACT43_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT43_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT43_SVID_OFFSET    9
+#define    RTL8367B_ACT43_SVID_MASK    0x200
+#define    RTL8367B_ACT43_CVID_OFFSET    8
+#define    RTL8367B_ACT43_CVID_MASK    0x100
+#define    RTL8367B_OP42_NOT_OFFSET    6
+#define    RTL8367B_OP42_NOT_MASK    0x40
+#define    RTL8367B_ACT42_GPIO_OFFSET    5
+#define    RTL8367B_ACT42_GPIO_MASK    0x20
+#define    RTL8367B_ACT42_FORWARD_OFFSET    4
+#define    RTL8367B_ACT42_FORWARD_MASK    0x10
+#define    RTL8367B_ACT42_POLICING_OFFSET    3
+#define    RTL8367B_ACT42_POLICING_MASK    0x8
+#define    RTL8367B_ACT42_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT42_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT42_SVID_OFFSET    1
+#define    RTL8367B_ACT42_SVID_MASK    0x2
+#define    RTL8367B_ACT42_CVID_OFFSET    0
+#define    RTL8367B_ACT42_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL22    0x062a
+#define    RTL8367B_OP45_NOT_OFFSET    14
+#define    RTL8367B_OP45_NOT_MASK    0x4000
+#define    RTL8367B_ACT45_GPIO_OFFSET    13
+#define    RTL8367B_ACT45_GPIO_MASK    0x2000
+#define    RTL8367B_ACT45_FORWARD_OFFSET    12
+#define    RTL8367B_ACT45_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT45_POLICING_OFFSET    11
+#define    RTL8367B_ACT45_POLICING_MASK    0x800
+#define    RTL8367B_ACT45_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT45_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT45_SVID_OFFSET    9
+#define    RTL8367B_ACT45_SVID_MASK    0x200
+#define    RTL8367B_ACT45_CVID_OFFSET    8
+#define    RTL8367B_ACT45_CVID_MASK    0x100
+#define    RTL8367B_OP44_NOT_OFFSET    6
+#define    RTL8367B_OP44_NOT_MASK    0x40
+#define    RTL8367B_ACT44_GPIO_OFFSET    5
+#define    RTL8367B_ACT44_GPIO_MASK    0x20
+#define    RTL8367B_ACT44_FORWARD_OFFSET    4
+#define    RTL8367B_ACT44_FORWARD_MASK    0x10
+#define    RTL8367B_ACT44_POLICING_OFFSET    3
+#define    RTL8367B_ACT44_POLICING_MASK    0x8
+#define    RTL8367B_ACT44_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT44_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT44_SVID_OFFSET    1
+#define    RTL8367B_ACT44_SVID_MASK    0x2
+#define    RTL8367B_ACT44_CVID_OFFSET    0
+#define    RTL8367B_ACT44_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL23    0x062b
+#define    RTL8367B_OP47_NOT_OFFSET    14
+#define    RTL8367B_OP47_NOT_MASK    0x4000
+#define    RTL8367B_ACT47_GPIO_OFFSET    13
+#define    RTL8367B_ACT47_GPIO_MASK    0x2000
+#define    RTL8367B_ACT47_FORWARD_OFFSET    12
+#define    RTL8367B_ACT47_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT47_POLICING_OFFSET    11
+#define    RTL8367B_ACT47_POLICING_MASK    0x800
+#define    RTL8367B_ACT47_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT47_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT47_SVID_OFFSET    9
+#define    RTL8367B_ACT47_SVID_MASK    0x200
+#define    RTL8367B_ACT47_CVID_OFFSET    8
+#define    RTL8367B_ACT47_CVID_MASK    0x100
+#define    RTL8367B_OP46_NOT_OFFSET    6
+#define    RTL8367B_OP46_NOT_MASK    0x40
+#define    RTL8367B_ACT46_GPIO_OFFSET    5
+#define    RTL8367B_ACT46_GPIO_MASK    0x20
+#define    RTL8367B_ACT46_FORWARD_OFFSET    4
+#define    RTL8367B_ACT46_FORWARD_MASK    0x10
+#define    RTL8367B_ACT46_POLICING_OFFSET    3
+#define    RTL8367B_ACT46_POLICING_MASK    0x8
+#define    RTL8367B_ACT46_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT46_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT46_SVID_OFFSET    1
+#define    RTL8367B_ACT46_SVID_MASK    0x2
+#define    RTL8367B_ACT46_CVID_OFFSET    0
+#define    RTL8367B_ACT46_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL24    0x062c
+#define    RTL8367B_OP49_NOT_OFFSET    14
+#define    RTL8367B_OP49_NOT_MASK    0x4000
+#define    RTL8367B_ACT49_GPIO_OFFSET    13
+#define    RTL8367B_ACT49_GPIO_MASK    0x2000
+#define    RTL8367B_ACT49_FORWARD_OFFSET    12
+#define    RTL8367B_ACT49_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT49_POLICING_OFFSET    11
+#define    RTL8367B_ACT49_POLICING_MASK    0x800
+#define    RTL8367B_ACT49_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT49_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT49_SVID_OFFSET    9
+#define    RTL8367B_ACT49_SVID_MASK    0x200
+#define    RTL8367B_ACT49_CVID_OFFSET    8
+#define    RTL8367B_ACT49_CVID_MASK    0x100
+#define    RTL8367B_OP48_NOT_OFFSET    6
+#define    RTL8367B_OP48_NOT_MASK    0x40
+#define    RTL8367B_ACT48_GPIO_OFFSET    5
+#define    RTL8367B_ACT48_GPIO_MASK    0x20
+#define    RTL8367B_ACT48_FORWARD_OFFSET    4
+#define    RTL8367B_ACT48_FORWARD_MASK    0x10
+#define    RTL8367B_ACT48_POLICING_OFFSET    3
+#define    RTL8367B_ACT48_POLICING_MASK    0x8
+#define    RTL8367B_ACT48_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT48_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT48_SVID_OFFSET    1
+#define    RTL8367B_ACT48_SVID_MASK    0x2
+#define    RTL8367B_ACT48_CVID_OFFSET    0
+#define    RTL8367B_ACT48_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL25    0x062d
+#define    RTL8367B_OP51_NOT_OFFSET    14
+#define    RTL8367B_OP51_NOT_MASK    0x4000
+#define    RTL8367B_ACT51_GPIO_OFFSET    13
+#define    RTL8367B_ACT51_GPIO_MASK    0x2000
+#define    RTL8367B_ACT51_FORWARD_OFFSET    12
+#define    RTL8367B_ACT51_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT51_POLICING_OFFSET    11
+#define    RTL8367B_ACT51_POLICING_MASK    0x800
+#define    RTL8367B_ACT51_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT51_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT51_SVID_OFFSET    9
+#define    RTL8367B_ACT51_SVID_MASK    0x200
+#define    RTL8367B_ACT51_CVID_OFFSET    8
+#define    RTL8367B_ACT51_CVID_MASK    0x100
+#define    RTL8367B_OP50_NOT_OFFSET    6
+#define    RTL8367B_OP50_NOT_MASK    0x40
+#define    RTL8367B_ACT50_GPIO_OFFSET    5
+#define    RTL8367B_ACT50_GPIO_MASK    0x20
+#define    RTL8367B_ACT50_FORWARD_OFFSET    4
+#define    RTL8367B_ACT50_FORWARD_MASK    0x10
+#define    RTL8367B_ACT50_POLICING_OFFSET    3
+#define    RTL8367B_ACT50_POLICING_MASK    0x8
+#define    RTL8367B_ACT50_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT50_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT50_SVID_OFFSET    1
+#define    RTL8367B_ACT50_SVID_MASK    0x2
+#define    RTL8367B_ACT50_CVID_OFFSET    0
+#define    RTL8367B_ACT50_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL26    0x062e
+#define    RTL8367B_OP53_NOT_OFFSET    14
+#define    RTL8367B_OP53_NOT_MASK    0x4000
+#define    RTL8367B_ACT53_GPIO_OFFSET    13
+#define    RTL8367B_ACT53_GPIO_MASK    0x2000
+#define    RTL8367B_ACT53_FORWARD_OFFSET    12
+#define    RTL8367B_ACT53_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT53_POLICING_OFFSET    11
+#define    RTL8367B_ACT53_POLICING_MASK    0x800
+#define    RTL8367B_ACT53_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT53_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT53_SVID_OFFSET    9
+#define    RTL8367B_ACT53_SVID_MASK    0x200
+#define    RTL8367B_ACT53_CVID_OFFSET    8
+#define    RTL8367B_ACT53_CVID_MASK    0x100
+#define    RTL8367B_OP52_NOT_OFFSET    6
+#define    RTL8367B_OP52_NOT_MASK    0x40
+#define    RTL8367B_ACT52_GPIO_OFFSET    5
+#define    RTL8367B_ACT52_GPIO_MASK    0x20
+#define    RTL8367B_ACT52_FORWARD_OFFSET    4
+#define    RTL8367B_ACT52_FORWARD_MASK    0x10
+#define    RTL8367B_ACT52_POLICING_OFFSET    3
+#define    RTL8367B_ACT52_POLICING_MASK    0x8
+#define    RTL8367B_ACT52_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT52_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT52_SVID_OFFSET    1
+#define    RTL8367B_ACT52_SVID_MASK    0x2
+#define    RTL8367B_ACT52_CVID_OFFSET    0
+#define    RTL8367B_ACT52_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL27    0x062f
+#define    RTL8367B_OP55_NOT_OFFSET    14
+#define    RTL8367B_OP55_NOT_MASK    0x4000
+#define    RTL8367B_ACT55_GPIO_OFFSET    13
+#define    RTL8367B_ACT55_GPIO_MASK    0x2000
+#define    RTL8367B_ACT55_FORWARD_OFFSET    12
+#define    RTL8367B_ACT55_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT55_POLICING_OFFSET    11
+#define    RTL8367B_ACT55_POLICING_MASK    0x800
+#define    RTL8367B_ACT55_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT55_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT55_SVID_OFFSET    9
+#define    RTL8367B_ACT55_SVID_MASK    0x200
+#define    RTL8367B_ACT55_CVID_OFFSET    8
+#define    RTL8367B_ACT55_CVID_MASK    0x100
+#define    RTL8367B_OP54_NOT_OFFSET    6
+#define    RTL8367B_OP54_NOT_MASK    0x40
+#define    RTL8367B_ACT54_GPIO_OFFSET    5
+#define    RTL8367B_ACT54_GPIO_MASK    0x20
+#define    RTL8367B_ACT54_FORWARD_OFFSET    4
+#define    RTL8367B_ACT54_FORWARD_MASK    0x10
+#define    RTL8367B_ACT54_POLICING_OFFSET    3
+#define    RTL8367B_ACT54_POLICING_MASK    0x8
+#define    RTL8367B_ACT54_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT54_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT54_SVID_OFFSET    1
+#define    RTL8367B_ACT54_SVID_MASK    0x2
+#define    RTL8367B_ACT54_CVID_OFFSET    0
+#define    RTL8367B_ACT54_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL28    0x0630
+#define    RTL8367B_OP57_NOT_OFFSET    14
+#define    RTL8367B_OP57_NOT_MASK    0x4000
+#define    RTL8367B_ACT57_GPIO_OFFSET    13
+#define    RTL8367B_ACT57_GPIO_MASK    0x2000
+#define    RTL8367B_ACT57_FORWARD_OFFSET    12
+#define    RTL8367B_ACT57_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT57_POLICING_OFFSET    11
+#define    RTL8367B_ACT57_POLICING_MASK    0x800
+#define    RTL8367B_ACT57_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT57_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT57_SVID_OFFSET    9
+#define    RTL8367B_ACT57_SVID_MASK    0x200
+#define    RTL8367B_ACT57_CVID_OFFSET    8
+#define    RTL8367B_ACT57_CVID_MASK    0x100
+#define    RTL8367B_OP56_NOT_OFFSET    6
+#define    RTL8367B_OP56_NOT_MASK    0x40
+#define    RTL8367B_ACT56_GPIO_OFFSET    5
+#define    RTL8367B_ACT56_GPIO_MASK    0x20
+#define    RTL8367B_ACT56_FORWARD_OFFSET    4
+#define    RTL8367B_ACT56_FORWARD_MASK    0x10
+#define    RTL8367B_ACT56_POLICING_OFFSET    3
+#define    RTL8367B_ACT56_POLICING_MASK    0x8
+#define    RTL8367B_ACT56_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT56_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT56_SVID_OFFSET    1
+#define    RTL8367B_ACT56_SVID_MASK    0x2
+#define    RTL8367B_ACT56_CVID_OFFSET    0
+#define    RTL8367B_ACT56_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL29    0x0631
+#define    RTL8367B_OP59_NOT_OFFSET    14
+#define    RTL8367B_OP59_NOT_MASK    0x4000
+#define    RTL8367B_ACT59_GPIO_OFFSET    13
+#define    RTL8367B_ACT59_GPIO_MASK    0x2000
+#define    RTL8367B_ACT59_FORWARD_OFFSET    12
+#define    RTL8367B_ACT59_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT59_POLICING_OFFSET    11
+#define    RTL8367B_ACT59_POLICING_MASK    0x800
+#define    RTL8367B_ACT59_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT59_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT59_SVID_OFFSET    9
+#define    RTL8367B_ACT59_SVID_MASK    0x200
+#define    RTL8367B_ACT59_CVID_OFFSET    8
+#define    RTL8367B_ACT59_CVID_MASK    0x100
+#define    RTL8367B_OP58_NOT_OFFSET    6
+#define    RTL8367B_OP58_NOT_MASK    0x40
+#define    RTL8367B_ACT58_GPIO_OFFSET    5
+#define    RTL8367B_ACT58_GPIO_MASK    0x20
+#define    RTL8367B_ACT58_FORWARD_OFFSET    4
+#define    RTL8367B_ACT58_FORWARD_MASK    0x10
+#define    RTL8367B_ACT58_POLICING_OFFSET    3
+#define    RTL8367B_ACT58_POLICING_MASK    0x8
+#define    RTL8367B_ACT58_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT58_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT58_SVID_OFFSET    1
+#define    RTL8367B_ACT58_SVID_MASK    0x2
+#define    RTL8367B_ACT58_CVID_OFFSET    0
+#define    RTL8367B_ACT58_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL30    0x0632
+#define    RTL8367B_OP61_NOT_OFFSET    14
+#define    RTL8367B_OP61_NOT_MASK    0x4000
+#define    RTL8367B_ACT61_GPIO_OFFSET    13
+#define    RTL8367B_ACT61_GPIO_MASK    0x2000
+#define    RTL8367B_ACT61_FORWARD_OFFSET    12
+#define    RTL8367B_ACT61_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT61_POLICING_OFFSET    11
+#define    RTL8367B_ACT61_POLICING_MASK    0x800
+#define    RTL8367B_ACT61_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT61_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT61_SVID_OFFSET    9
+#define    RTL8367B_ACT61_SVID_MASK    0x200
+#define    RTL8367B_ACT61_CVID_OFFSET    8
+#define    RTL8367B_ACT61_CVID_MASK    0x100
+#define    RTL8367B_OP60_NOT_OFFSET    6
+#define    RTL8367B_OP60_NOT_MASK    0x40
+#define    RTL8367B_ACT60_GPIO_OFFSET    5
+#define    RTL8367B_ACT60_GPIO_MASK    0x20
+#define    RTL8367B_ACT60_FORWARD_OFFSET    4
+#define    RTL8367B_ACT60_FORWARD_MASK    0x10
+#define    RTL8367B_ACT60_POLICING_OFFSET    3
+#define    RTL8367B_ACT60_POLICING_MASK    0x8
+#define    RTL8367B_ACT60_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT60_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT60_SVID_OFFSET    1
+#define    RTL8367B_ACT60_SVID_MASK    0x2
+#define    RTL8367B_ACT60_CVID_OFFSET    0
+#define    RTL8367B_ACT60_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_ACTION_CTRL31    0x0633
+#define    RTL8367B_OP63_NOT_OFFSET    14
+#define    RTL8367B_OP63_NOT_MASK    0x4000
+#define    RTL8367B_ACT63_GPIO_OFFSET    13
+#define    RTL8367B_ACT63_GPIO_MASK    0x2000
+#define    RTL8367B_ACT63_FORWARD_OFFSET    12
+#define    RTL8367B_ACT63_FORWARD_MASK    0x1000
+#define    RTL8367B_ACT63_POLICING_OFFSET    11
+#define    RTL8367B_ACT63_POLICING_MASK    0x800
+#define    RTL8367B_ACT63_PRIORITY_OFFSET    10
+#define    RTL8367B_ACT63_PRIORITY_MASK    0x400
+#define    RTL8367B_ACT63_SVID_OFFSET    9
+#define    RTL8367B_ACT63_SVID_MASK    0x200
+#define    RTL8367B_ACT63_CVID_OFFSET    8
+#define    RTL8367B_ACT63_CVID_MASK    0x100
+#define    RTL8367B_OP62_NOT_OFFSET    6
+#define    RTL8367B_OP62_NOT_MASK    0x40
+#define    RTL8367B_ACT62_GPIO_OFFSET    5
+#define    RTL8367B_ACT62_GPIO_MASK    0x20
+#define    RTL8367B_ACT62_FORWARD_OFFSET    4
+#define    RTL8367B_ACT62_FORWARD_MASK    0x10
+#define    RTL8367B_ACT62_POLICING_OFFSET    3
+#define    RTL8367B_ACT62_POLICING_MASK    0x8
+#define    RTL8367B_ACT62_PRIORITY_OFFSET    2
+#define    RTL8367B_ACT62_PRIORITY_MASK    0x4
+#define    RTL8367B_ACT62_SVID_OFFSET    1
+#define    RTL8367B_ACT62_SVID_MASK    0x2
+#define    RTL8367B_ACT62_CVID_OFFSET    0
+#define    RTL8367B_ACT62_CVID_MASK    0x1
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY0_CTRL0    0x0635
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY0_CTRL1    0x0636
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY0_CTRL2    0x0637
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY0_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY0_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY1_CTRL0    0x0638
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY1_CTRL1    0x0639
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY1_CTRL2    0x063a
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY1_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY1_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY2_CTRL0    0x063b
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY2_CTRL1    0x063c
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY2_CTRL2    0x063d
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY2_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY2_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY3_CTRL0    0x063e
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY3_CTRL1    0x063f
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY3_CTRL2    0x0640
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY3_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY3_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY4_CTRL0    0x0641
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY4_CTRL1    0x0642
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY4_CTRL2    0x0643
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY4_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY4_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY5_CTRL0    0x0644
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY5_CTRL1    0x0645
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY5_CTRL2    0x0646
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY5_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY5_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY6_CTRL0    0x0647
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY6_CTRL1    0x0648
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY6_CTRL2    0x0649
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY6_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY6_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY7_CTRL0    0x064a
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY7_CTRL1    0x064b
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY7_CTRL2    0x064c
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY7_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY7_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY8_CTRL0    0x064d
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY8_CTRL1    0x064e
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY8_CTRL2    0x064f
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY8_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY8_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY9_CTRL0    0x0650
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY9_CTRL1    0x0651
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY9_CTRL2    0x0652
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY9_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY9_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY10_CTRL0    0x0653
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY10_CTRL1    0x0654
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY10_CTRL2    0x0655
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY10_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY10_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY11_CTRL0    0x0656
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY11_CTRL1    0x0657
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY11_CTRL2    0x0658
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY11_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY11_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY12_CTRL0    0x0659
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY12_CTRL1    0x065a
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY12_CTRL2    0x065b
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY12_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY12_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY13_CTRL0    0x065c
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY13_CTRL1    0x065d
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY13_CTRL2    0x065e
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY13_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY13_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY14_CTRL0    0x065f
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY14_CTRL1    0x0660
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY14_CTRL2    0x0661
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY14_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY14_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY15_CTRL0    0x0662
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY15_CTRL1    0x0663
+
+#define    RTL8367B_REG_ACL_SDPORT_RANGE_ENTRY15_CTRL2    0x0664
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY15_CTRL2_OFFSET    0
+#define    RTL8367B_ACL_SDPORT_RANGE_ENTRY15_CTRL2_MASK    0x3
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY0_CTRL0    0x0665
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY0_CTRL1    0x0666
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL1_CHECK0_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL1_CHECK0_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL1_CHECK0_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY0_CTRL1_CHECK0_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY1_CTRL0    0x0667
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY1_CTRL1    0x0668
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL1_CHECK1_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL1_CHECK1_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL1_CHECK1_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY1_CTRL1_CHECK1_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY2_CTRL0    0x0669
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY2_CTRL1    0x066a
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL1_CHECK2_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL1_CHECK2_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL1_CHECK2_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY2_CTRL1_CHECK2_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY3_CTRL0    0x066b
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY3_CTRL1    0x066c
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL1_CHECK3_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL1_CHECK3_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL1_CHECK3_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY3_CTRL1_CHECK3_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY4_CTRL0    0x066d
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY4_CTRL1    0x066e
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL1_CHECK4_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL1_CHECK4_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL1_CHECK4_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY4_CTRL1_CHECK4_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY5_CTRL0    0x066f
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY5_CTRL1    0x0670
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL1_CHECK5_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL1_CHECK5_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL1_CHECK5_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY5_CTRL1_CHECK5_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY6_CTRL0    0x0671
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY6_CTRL1    0x0672
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL1_CHECK6_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL1_CHECK6_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL1_CHECK6_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY6_CTRL1_CHECK6_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY7_CTRL0    0x0673
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY7_CTRL1    0x0674
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL1_CHECK7_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL1_CHECK7_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL1_CHECK7_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY7_CTRL1_CHECK7_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY8_CTRL0    0x0675
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY8_CTRL1    0x0676
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL1_CHECK8_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL1_CHECK8_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL1_CHECK8_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY8_CTRL1_CHECK8_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY9_CTRL0    0x0677
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY9_CTRL1    0x0678
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL1_CHECK9_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL1_CHECK9_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL1_CHECK9_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY9_CTRL1_CHECK9_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY10_CTRL0    0x0679
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY10_CTRL1    0x067a
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL1_CHECK10_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL1_CHECK10_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL1_CHECK10_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY10_CTRL1_CHECK10_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY11_CTRL0    0x067b
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY11_CTRL1    0x067c
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL1_CHECK11_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL1_CHECK11_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL1_CHECK11_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY11_CTRL1_CHECK11_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY12_CTRL0    0x067d
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY12_CTRL1    0x067e
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL1_CHECK12_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL1_CHECK12_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL1_CHECK12_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY12_CTRL1_CHECK12_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY13_CTRL0    0x067f
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY13_CTRL1    0x0680
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL1_CHECK13_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL1_CHECK13_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL1_CHECK13_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY13_CTRL1_CHECK13_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY14_CTRL0    0x0681
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY14_CTRL1    0x0682
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL1_CHECK14_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL1_CHECK14_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL1_CHECK14_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY14_CTRL1_CHECK14_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY15_CTRL0    0x0683
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL0_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_VID_RANGE_ENTRY15_CTRL1    0x0684
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL1_CHECK15_TYPE_OFFSET    12
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL1_CHECK15_TYPE_MASK    0x3000
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL1_CHECK15_HIGH_OFFSET    0
+#define    RTL8367B_ACL_VID_RANGE_ENTRY15_CTRL1_CHECK15_HIGH_MASK    0xFFF
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY0_CTRL0    0x0685
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY0_CTRL1    0x0686
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY0_CTRL2    0x0687
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY0_CTRL3    0x0688
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY0_CTRL4    0x0689
+#define    RTL8367B_ACL_IP_RANGE_ENTRY0_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY0_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY1_CTRL0    0x068a
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY1_CTRL1    0x068b
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY1_CTRL2    0x068c
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY1_CTRL3    0x068d
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY1_CTRL4    0x068e
+#define    RTL8367B_ACL_IP_RANGE_ENTRY1_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY1_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY2_CTRL0    0x068f
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY2_CTRL1    0x0690
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY2_CTRL2    0x0691
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY2_CTRL3    0x0692
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY2_CTRL4    0x0693
+#define    RTL8367B_ACL_IP_RANGE_ENTRY2_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY2_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY3_CTRL0    0x0694
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY3_CTRL1    0x0695
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY3_CTRL2    0x0696
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY3_CTRL3    0x0697
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY3_CTRL4    0x0698
+#define    RTL8367B_ACL_IP_RANGE_ENTRY3_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY3_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY4_CTRL0    0x0699
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY4_CTRL1    0x069a
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY4_CTRL2    0x069b
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY4_CTRL3    0x069c
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY4_CTRL4    0x069d
+#define    RTL8367B_ACL_IP_RANGE_ENTRY4_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY4_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY5_CTRL0    0x069e
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY5_CTRL1    0x069f
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY5_CTRL2    0x06a0
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY5_CTRL3    0x06a1
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY5_CTRL4    0x06a2
+#define    RTL8367B_ACL_IP_RANGE_ENTRY5_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY5_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY6_CTRL0    0x06a3
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY6_CTRL1    0x06a4
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY6_CTRL2    0x06a5
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY6_CTRL3    0x06a6
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY6_CTRL4    0x06a7
+#define    RTL8367B_ACL_IP_RANGE_ENTRY6_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY6_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY7_CTRL0    0x06a8
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY7_CTRL1    0x06a9
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY7_CTRL2    0x06aa
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY7_CTRL3    0x06ab
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY7_CTRL4    0x06ac
+#define    RTL8367B_ACL_IP_RANGE_ENTRY7_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY7_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY8_CTRL0    0x06ad
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY8_CTRL1    0x06ae
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY8_CTRL2    0x06af
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY8_CTRL3    0x06b0
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY8_CTRL4    0x06b1
+#define    RTL8367B_ACL_IP_RANGE_ENTRY8_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY8_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY9_CTRL0    0x06b2
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY9_CTRL1    0x06b3
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY9_CTRL2    0x06b4
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY9_CTRL3    0x06b5
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY9_CTRL4    0x06b6
+#define    RTL8367B_ACL_IP_RANGE_ENTRY9_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY9_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY10_CTRL0    0x06b7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY10_CTRL1    0x06b8
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY10_CTRL2    0x06b9
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY10_CTRL3    0x06ba
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY10_CTRL4    0x06bb
+#define    RTL8367B_ACL_IP_RANGE_ENTRY10_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY10_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY11_CTRL0    0x06bc
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY11_CTRL1    0x06bd
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY11_CTRL2    0x06be
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY11_CTRL3    0x06bf
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY11_CTRL4    0x06c0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY11_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY11_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY12_CTRL0    0x06c1
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY12_CTRL1    0x06c2
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY12_CTRL2    0x06c3
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY12_CTRL3    0x06c4
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY12_CTRL4    0x06c5
+#define    RTL8367B_ACL_IP_RANGE_ENTRY12_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY12_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY13_CTRL0    0x06c6
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY13_CTRL1    0x06c7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY13_CTRL2    0x06c8
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY13_CTRL3    0x06c9
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY13_CTRL4    0x06ca
+#define    RTL8367B_ACL_IP_RANGE_ENTRY13_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY13_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY14_CTRL0    0x06cb
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY14_CTRL1    0x06cc
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY14_CTRL2    0x06cd
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY14_CTRL3    0x06ce
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY14_CTRL4    0x06cf
+#define    RTL8367B_ACL_IP_RANGE_ENTRY14_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY14_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY15_CTRL0    0x06d0
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY15_CTRL1    0x06d1
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY15_CTRL2    0x06d2
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY15_CTRL3    0x06d3
+
+#define    RTL8367B_REG_ACL_IP_RANGE_ENTRY15_CTRL4    0x06d4
+#define    RTL8367B_ACL_IP_RANGE_ENTRY15_CTRL4_OFFSET    0
+#define    RTL8367B_ACL_IP_RANGE_ENTRY15_CTRL4_MASK    0x7
+
+#define    RTL8367B_REG_ACL_ENABLE    0x06d5
+#define    RTL8367B_PORT7_ENABLE_OFFSET    7
+#define    RTL8367B_PORT7_ENABLE_MASK    0x80
+#define    RTL8367B_PORT6_ENABLE_OFFSET    6
+#define    RTL8367B_PORT6_ENABLE_MASK    0x40
+#define    RTL8367B_PORT5_ENABLE_OFFSET    5
+#define    RTL8367B_PORT5_ENABLE_MASK    0x20
+#define    RTL8367B_PORT4_ENABLE_OFFSET    4
+#define    RTL8367B_PORT4_ENABLE_MASK    0x10
+#define    RTL8367B_PORT3_ENABLE_OFFSET    3
+#define    RTL8367B_PORT3_ENABLE_MASK    0x8
+#define    RTL8367B_PORT2_ENABLE_OFFSET    2
+#define    RTL8367B_PORT2_ENABLE_MASK    0x4
+#define    RTL8367B_PORT1_ENABLE_OFFSET    1
+#define    RTL8367B_PORT1_ENABLE_MASK    0x2
+#define    RTL8367B_PORT0_ENABLE_OFFSET    0
+#define    RTL8367B_PORT0_ENABLE_MASK    0x1
+
+#define    RTL8367B_REG_ACL_UNMATCH_PERMIT    0x06d6
+#define    RTL8367B_PORT7_PERMIT_OFFSET    7
+#define    RTL8367B_PORT7_PERMIT_MASK    0x80
+#define    RTL8367B_PORT6_PERMIT_OFFSET    6
+#define    RTL8367B_PORT6_PERMIT_MASK    0x40
+#define    RTL8367B_PORT5_PERMIT_OFFSET    5
+#define    RTL8367B_PORT5_PERMIT_MASK    0x20
+#define    RTL8367B_PORT4_PERMIT_OFFSET    4
+#define    RTL8367B_PORT4_PERMIT_MASK    0x10
+#define    RTL8367B_PORT3_PERMIT_OFFSET    3
+#define    RTL8367B_PORT3_PERMIT_MASK    0x8
+#define    RTL8367B_PORT2_PERMIT_OFFSET    2
+#define    RTL8367B_PORT2_PERMIT_MASK    0x4
+#define    RTL8367B_PORT1_PERMIT_OFFSET    1
+#define    RTL8367B_PORT1_PERMIT_MASK    0x2
+#define    RTL8367B_PORT0_PERMIT_OFFSET    0
+#define    RTL8367B_PORT0_PERMIT_MASK    0x1
+
+#define    RTL8367B_REG_ACL_GPIO_POLARITY    0x06d7
+#define    RTL8367B_ACL_GPIO_POLARITY_OFFSET    0
+#define    RTL8367B_ACL_GPIO_POLARITY_MASK    0x1
+
+#define    RTL8367B_REG_ACL_LOG_CNT_TYPE    0x06d8
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER15_TYPE_OFFSET    15
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER15_TYPE_MASK    0x8000
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER14_TYPE_OFFSET    14
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER14_TYPE_MASK    0x4000
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER13_TYPE_OFFSET    13
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER13_TYPE_MASK    0x2000
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER12_TYPE_OFFSET    12
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER12_TYPE_MASK    0x1000
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER11_TYPE_OFFSET    11
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER11_TYPE_MASK    0x800
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER10_TYPE_OFFSET    10
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER10_TYPE_MASK    0x400
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER9_TYPE_OFFSET    9
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER9_TYPE_MASK    0x200
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER8_TYPE_OFFSET    8
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER8_TYPE_MASK    0x100
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER7_TYPE_OFFSET    7
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER7_TYPE_MASK    0x80
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER6_TYPE_OFFSET    6
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER6_TYPE_MASK    0x40
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER5_TYPE_OFFSET    5
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER5_TYPE_MASK    0x20
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER4_TYPE_OFFSET    4
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER4_TYPE_MASK    0x10
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER3_TYPE_OFFSET    3
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER3_TYPE_MASK    0x8
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER2_TYPE_OFFSET    2
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER2_TYPE_MASK    0x4
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER1_TYPE_OFFSET    1
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER1_TYPE_MASK    0x2
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER0_TYPE_OFFSET    0
+#define    RTL8367B_ACL_LOG_CNT_TYPE_COUNTER0_TYPE_MASK    0x1
+
+#define    RTL8367B_REG_ACL_DUMMY00    0x06E0
+
+#define    RTL8367B_REG_ACL_DUMMY01    0x06E1
+
+#define    RTL8367B_REG_ACL_DUMMY02    0x06E2
+
+#define    RTL8367B_REG_ACL_DUMMY03    0x06E3
+
+#define    RTL8367B_REG_ACL_DUMMY04    0x06E4
+
+#define    RTL8367B_REG_ACL_DUMMY05    0x06E5
+
+#define    RTL8367B_REG_ACL_DUMMY06    0x06E6
+
+#define    RTL8367B_REG_ACL_DUMMY07    0x06E7
+
+/* (16'h0700)cvlan_reg */
+
+#define    RTL8367B_REG_VLAN_PVID_CTRL0    0x0700
+#define    RTL8367B_PORT1_VIDX_OFFSET    8
+#define    RTL8367B_PORT1_VIDX_MASK    0x1F00
+#define    RTL8367B_PORT0_VIDX_OFFSET    0
+#define    RTL8367B_PORT0_VIDX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PVID_CTRL1    0x0701
+#define    RTL8367B_PORT3_VIDX_OFFSET    8
+#define    RTL8367B_PORT3_VIDX_MASK    0x1F00
+#define    RTL8367B_PORT2_VIDX_OFFSET    0
+#define    RTL8367B_PORT2_VIDX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PVID_CTRL2    0x0702
+#define    RTL8367B_PORT5_VIDX_OFFSET    8
+#define    RTL8367B_PORT5_VIDX_MASK    0x1F00
+#define    RTL8367B_PORT4_VIDX_OFFSET    0
+#define    RTL8367B_PORT4_VIDX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PVID_CTRL3    0x0703
+#define    RTL8367B_PORT7_VIDX_OFFSET    8
+#define    RTL8367B_PORT7_VIDX_MASK    0x1F00
+#define    RTL8367B_PORT6_VIDX_OFFSET    0
+#define    RTL8367B_PORT6_VIDX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB0_VALID    0x0708
+#define    RTL8367B_VLAN_PPB0_VALID_OFFSET    0
+#define    RTL8367B_VLAN_PPB0_VALID_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_PPB0_CTRL0    0x0709
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT2_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT2_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT1_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT1_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT0_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB0_CTRL0_PORT0_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB0_CTRL1    0x070a
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT5_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT5_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT4_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT4_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT3_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB0_CTRL1_PORT3_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB0_CTRL2    0x070b
+#define    RTL8367B_VLAN_PPB0_CTRL2_FRAME_TYPE_OFFSET    10
+#define    RTL8367B_VLAN_PPB0_CTRL2_FRAME_TYPE_MASK    0xC00
+#define    RTL8367B_VLAN_PPB0_CTRL2_PORT7_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB0_CTRL2_PORT7_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB0_CTRL2_PORT6_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB0_CTRL2_PORT6_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB0_CTRL3    0x070f
+
+#define    RTL8367B_REG_VLAN_PPB1_VALID    0x0710
+#define    RTL8367B_VLAN_PPB1_VALID_OFFSET    0
+#define    RTL8367B_VLAN_PPB1_VALID_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_PPB1_CTRL0    0x0711
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT2_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT2_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT1_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT1_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT0_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB1_CTRL0_PORT0_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB1_CTRL1    0x0712
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT5_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT5_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT4_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT4_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT3_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB1_CTRL1_PORT3_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB1_CTRL2    0x0713
+#define    RTL8367B_VLAN_PPB1_CTRL2_FRAME_TYPE_OFFSET    10
+#define    RTL8367B_VLAN_PPB1_CTRL2_FRAME_TYPE_MASK    0xC00
+#define    RTL8367B_VLAN_PPB1_CTRL2_PORT7_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB1_CTRL2_PORT7_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB1_CTRL2_PORT6_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB1_CTRL2_PORT6_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB1_CTRL3    0x0717
+
+#define    RTL8367B_REG_VLAN_PPB2_VALID    0x0718
+#define    RTL8367B_VLAN_PPB2_VALID_OFFSET    0
+#define    RTL8367B_VLAN_PPB2_VALID_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_PPB2_CTRL0    0x0719
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT2_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT2_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT1_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT1_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT0_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB2_CTRL0_PORT0_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB2_CTRL1    0x071a
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT5_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT5_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT4_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT4_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT3_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB2_CTRL1_PORT3_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB2_CTRL2    0x071b
+#define    RTL8367B_VLAN_PPB2_CTRL2_FRAME_TYPE_OFFSET    10
+#define    RTL8367B_VLAN_PPB2_CTRL2_FRAME_TYPE_MASK    0xC00
+#define    RTL8367B_VLAN_PPB2_CTRL2_PORT7_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB2_CTRL2_PORT7_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB2_CTRL2_PORT6_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB2_CTRL2_PORT6_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB2_CTRL3    0x071f
+
+#define    RTL8367B_REG_VLAN_PPB3_VALID    0x0720
+#define    RTL8367B_VLAN_PPB3_VALID_OFFSET    0
+#define    RTL8367B_VLAN_PPB3_VALID_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_PPB3_CTRL0    0x0721
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT2_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT2_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT1_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT1_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT0_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB3_CTRL0_PORT0_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB3_CTRL1    0x0722
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT5_INDEX_OFFSET    10
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT5_INDEX_MASK    0x7C00
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT4_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT4_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT3_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB3_CTRL1_PORT3_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB3_CTRL2    0x0723
+#define    RTL8367B_VLAN_PPB3_CTRL2_FRAME_TYPE_OFFSET    10
+#define    RTL8367B_VLAN_PPB3_CTRL2_FRAME_TYPE_MASK    0xC00
+#define    RTL8367B_VLAN_PPB3_CTRL2_PORT7_INDEX_OFFSET    5
+#define    RTL8367B_VLAN_PPB3_CTRL2_PORT7_INDEX_MASK    0x3E0
+#define    RTL8367B_VLAN_PPB3_CTRL2_PORT6_INDEX_OFFSET    0
+#define    RTL8367B_VLAN_PPB3_CTRL2_PORT6_INDEX_MASK    0x1F
+
+#define    RTL8367B_REG_VLAN_PPB3_CTRL3    0x0727
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION0_CTRL0    0x0728
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION0_CTRL1    0x0729
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION0_CTRL2    0x072a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION0_CTRL3    0x072b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION0_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION1_CTRL0    0x072c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION1_CTRL1    0x072d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION1_CTRL2    0x072e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION1_CTRL3    0x072f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION1_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION2_CTRL0    0x0730
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION2_CTRL1    0x0731
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION2_CTRL2    0x0732
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION2_CTRL3    0x0733
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION2_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION3_CTRL0    0x0734
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION3_CTRL1    0x0735
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION3_CTRL2    0x0736
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION3_CTRL3    0x0737
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION3_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION4_CTRL0    0x0738
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION4_CTRL1    0x0739
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION4_CTRL2    0x073a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION4_CTRL3    0x073b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION4_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION5_CTRL0    0x073c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION5_CTRL1    0x073d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION5_CTRL2    0x073e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION5_CTRL3    0x073f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION5_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION6_CTRL0    0x0740
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION6_CTRL1    0x0741
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION6_CTRL2    0x0742
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION6_CTRL3    0x0743
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION6_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION7_CTRL0    0x0744
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION7_CTRL1    0x0745
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION7_CTRL2    0x0746
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION7_CTRL3    0x0747
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION7_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION8_CTRL0    0x0748
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION8_CTRL1    0x0749
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION8_CTRL2    0x074a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION8_CTRL3    0x074b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION8_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION9_CTRL0    0x074c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION9_CTRL1    0x074d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION9_CTRL2    0x074e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION9_CTRL3    0x074f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION9_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION10_CTRL0    0x0750
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION10_CTRL1    0x0751
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION10_CTRL2    0x0752
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION10_CTRL3    0x0753
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION10_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION11_CTRL0    0x0754
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION11_CTRL1    0x0755
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION11_CTRL2    0x0756
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION11_CTRL3    0x0757
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION11_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION12_CTRL0    0x0758
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION12_CTRL1    0x0759
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION12_CTRL2    0x075a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION12_CTRL3    0x075b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION12_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION13_CTRL0    0x075c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION13_CTRL1    0x075d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION13_CTRL2    0x075e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION13_CTRL3    0x075f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION13_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION14_CTRL0    0x0760
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION14_CTRL1    0x0761
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION14_CTRL2    0x0762
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION14_CTRL3    0x0763
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION14_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION15_CTRL0    0x0764
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION15_CTRL1    0x0765
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION15_CTRL2    0x0766
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION15_CTRL3    0x0767
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION15_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION16_CTRL0    0x0768
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION16_CTRL1    0x0769
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION16_CTRL2    0x076a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION16_CTRL3    0x076b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION16_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION17_CTRL0    0x076c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION17_CTRL1    0x076d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION17_CTRL2    0x076e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION17_CTRL3    0x076f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION17_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION18_CTRL0    0x0770
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION18_CTRL1    0x0771
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION18_CTRL2    0x0772
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION18_CTRL3    0x0773
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION18_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION19_CTRL0    0x0774
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION19_CTRL1    0x0775
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION19_CTRL2    0x0776
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION19_CTRL3    0x0777
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION19_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION20_CTRL0    0x0778
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION20_CTRL1    0x0779
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION20_CTRL2    0x077a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION20_CTRL3    0x077b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION20_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION21_CTRL0    0x077c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION21_CTRL1    0x077d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION21_CTRL2    0x077e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION21_CTRL3    0x077f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION21_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION22_CTRL0    0x0780
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION22_CTRL1    0x0781
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION22_CTRL2    0x0782
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION22_CTRL3    0x0783
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION22_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION23_CTRL0    0x0784
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION23_CTRL1    0x0785
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION23_CTRL2    0x0786
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION23_CTRL3    0x0787
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION23_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION24_CTRL0    0x0788
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION24_CTRL1    0x0789
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION24_CTRL2    0x078a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION24_CTRL3    0x078b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION24_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION25_CTRL0    0x078c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION25_CTRL1    0x078d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION25_CTRL2    0x078e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION25_CTRL3    0x078f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION25_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION26_CTRL0    0x0790
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION26_CTRL1    0x0791
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION26_CTRL2    0x0792
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION26_CTRL3    0x0793
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION26_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION27_CTRL0    0x0794
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION27_CTRL1    0x0795
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION27_CTRL2    0x0796
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION27_CTRL3    0x0797
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION27_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION28_CTRL0    0x0798
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION28_CTRL1    0x0799
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION28_CTRL2    0x079a
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION28_CTRL3    0x079b
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION28_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION29_CTRL0    0x079c
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION29_CTRL1    0x079d
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION29_CTRL2    0x079e
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION29_CTRL3    0x079f
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION29_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION30_CTRL0    0x07a0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION30_CTRL1    0x07a1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION30_CTRL2    0x07a2
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION30_CTRL3    0x07a3
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION30_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION31_CTRL0    0x07a4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL0_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION31_CTRL1    0x07a5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL1_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL1_MASK    0xF
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION31_CTRL2    0x07a6
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_METERIDX_OFFSET    5
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_METERIDX_MASK    0x3E0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_ENVLANPOL_OFFSET    4
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_ENVLANPOL_MASK    0x10
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_VBPRI_OFFSET    1
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_VBPRI_MASK    0xE
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_VBPEN_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL2_VBPEN_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_MEMBER_CONFIGURATION31_CTRL3    0x07a7
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL3_OFFSET    0
+#define    RTL8367B_VLAN_MEMBER_CONFIGURATION31_CTRL3_MASK    0x1FFF
+
+#define    RTL8367B_REG_VLAN_CTRL    0x07a8
+#define    RTL8367B_VLAN_CTRL_OFFSET    0
+#define    RTL8367B_VLAN_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_INGRESS    0x07a9
+#define    RTL8367B_VLAN_INGRESS_OFFSET    0
+#define    RTL8367B_VLAN_INGRESS_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_ACCEPT_FRAME_TYPE_CTRL0    0x07aa
+#define    RTL8367B_PORT7_FRAME_TYPE_OFFSET    14
+#define    RTL8367B_PORT7_FRAME_TYPE_MASK    0xC000
+#define    RTL8367B_PORT6_FRAME_TYPE_OFFSET    12
+#define    RTL8367B_PORT6_FRAME_TYPE_MASK    0x3000
+#define    RTL8367B_PORT5_FRAME_TYPE_OFFSET    10
+#define    RTL8367B_PORT5_FRAME_TYPE_MASK    0xC00
+#define    RTL8367B_PORT4_FRAME_TYPE_OFFSET    8
+#define    RTL8367B_PORT4_FRAME_TYPE_MASK    0x300
+#define    RTL8367B_PORT3_FRAME_TYPE_OFFSET    6
+#define    RTL8367B_PORT3_FRAME_TYPE_MASK    0xC0
+#define    RTL8367B_PORT2_FRAME_TYPE_OFFSET    4
+#define    RTL8367B_PORT2_FRAME_TYPE_MASK    0x30
+#define    RTL8367B_PORT1_FRAME_TYPE_OFFSET    2
+#define    RTL8367B_PORT1_FRAME_TYPE_MASK    0xC
+#define    RTL8367B_PORT0_FRAME_TYPE_OFFSET    0
+#define    RTL8367B_PORT0_FRAME_TYPE_MASK    0x3
+
+#define    RTL8367B_REG_PORT_PBFIDEN    0x07ac
+#define    RTL8367B_PORT_PBFIDEN_OFFSET    0
+#define    RTL8367B_PORT_PBFIDEN_MASK    0xFF
+
+#define    RTL8367B_REG_PORT0_PBFID    0x07ad
+#define    RTL8367B_PORT0_PBFID_OFFSET    0
+#define    RTL8367B_PORT0_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT1_PBFID    0x07ae
+#define    RTL8367B_PORT1_PBFID_OFFSET    0
+#define    RTL8367B_PORT1_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT2_PBFID    0x07af
+#define    RTL8367B_PORT2_PBFID_OFFSET    0
+#define    RTL8367B_PORT2_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT3_PBFID    0x07b0
+#define    RTL8367B_PORT3_PBFID_OFFSET    0
+#define    RTL8367B_PORT3_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT4_PBFID    0x07b1
+#define    RTL8367B_PORT4_PBFID_OFFSET    0
+#define    RTL8367B_PORT4_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT5_PBFID    0x07b2
+#define    RTL8367B_PORT5_PBFID_OFFSET    0
+#define    RTL8367B_PORT5_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT6_PBFID    0x07b3
+#define    RTL8367B_PORT6_PBFID_OFFSET    0
+#define    RTL8367B_PORT6_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_PORT7_PBFID    0x07b4
+#define    RTL8367B_PORT7_PBFID_OFFSET    0
+#define    RTL8367B_PORT7_PBFID_MASK    0xF
+
+#define    RTL8367B_REG_CVLAN_DUMMY00    0x07E0
+
+#define    RTL8367B_REG_CVLAN_DUMMY01    0x07E1
+
+#define    RTL8367B_REG_CVLAN_DUMMY02    0x07E2
+
+#define    RTL8367B_REG_CVLAN_DUMMY03    0x07E3
+
+#define    RTL8367B_REG_CVLAN_DUMMY04    0x07E4
+
+#define    RTL8367B_REG_CVLAN_DUMMY05    0x07E5
+
+#define    RTL8367B_REG_CVLAN_DUMMY06    0x07E6
+
+#define    RTL8367B_REG_CVLAN_DUMMY07    0x07E7
+
+#define    RTL8367B_REG_CVLAN_DUMMY08    0x07E8
+
+#define    RTL8367B_REG_CVLAN_DUMMY09    0x07E9
+
+#define    RTL8367B_REG_CVLAN_DUMMY10    0x07EA
+
+#define    RTL8367B_REG_CVLAN_DUMMY11    0x07EB
+
+#define    RTL8367B_REG_CVLAN_DUMMY12    0x07EC
+
+#define    RTL8367B_REG_CVLAN_DUMMY13    0x07ED
+
+#define    RTL8367B_REG_CVLAN_DUMMY14    0x07EE
+
+#define    RTL8367B_REG_CVLAN_DUMMY15    0x07EF
+
+/* (16'h0800)dpm_reg */
+
+#define    RTL8367B_REG_RMA_CTRL00    0x0800
+#define    RTL8367B_RMA_CTRL00_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL00_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL00_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL00_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_TRAP_PRIORITY_OFFSET    3
+#define    RTL8367B_TRAP_PRIORITY_MASK    0x38
+#define    RTL8367B_RMA_CTRL00_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL00_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL00_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL00_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL00_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL00_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL01    0x0801
+#define    RTL8367B_RMA_CTRL01_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL01_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL01_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL01_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL01_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL01_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL01_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL01_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL01_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL01_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL02    0x0802
+#define    RTL8367B_RMA_CTRL02_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL02_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL02_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL02_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL02_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL02_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL02_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL02_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL02_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL02_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL03    0x0803
+#define    RTL8367B_RMA_CTRL03_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL03_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL03_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL03_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL03_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL03_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL03_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL03_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL03_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL03_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL04    0x0804
+#define    RTL8367B_RMA_CTRL04_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL04_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL04_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL04_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL04_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL04_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL04_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL04_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL04_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL04_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL08    0x0808
+#define    RTL8367B_RMA_CTRL08_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL08_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL08_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL08_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL08_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL08_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL08_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL08_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL08_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL08_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL0D    0x080d
+#define    RTL8367B_RMA_CTRL0D_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL0D_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL0D_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL0D_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL0D_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL0D_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL0D_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL0D_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL0D_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL0D_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL0E    0x080e
+#define    RTL8367B_RMA_CTRL0E_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL0E_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL0E_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL0E_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL0E_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL0E_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL0E_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL0E_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL0E_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL0E_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL10    0x0810
+#define    RTL8367B_RMA_CTRL10_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL10_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL10_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL10_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL10_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL10_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL10_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL10_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL10_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL10_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL11    0x0811
+#define    RTL8367B_RMA_CTRL11_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL11_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL11_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL11_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL11_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL11_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL11_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL11_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL11_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL11_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL12    0x0812
+#define    RTL8367B_RMA_CTRL12_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL12_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL12_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL12_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL12_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL12_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL12_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL12_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL12_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL12_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL13    0x0813
+#define    RTL8367B_RMA_CTRL13_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL13_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL13_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL13_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL13_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL13_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL13_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL13_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL13_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL13_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL18    0x0818
+#define    RTL8367B_RMA_CTRL18_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL18_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL18_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL18_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL18_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL18_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL18_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL18_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL18_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL18_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL1A    0x081a
+#define    RTL8367B_RMA_CTRL1A_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL1A_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL1A_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL1A_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL1A_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL1A_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL1A_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL1A_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL1A_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL1A_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL20    0x0820
+#define    RTL8367B_RMA_CTRL20_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL20_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL20_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL20_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL20_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL20_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL20_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL20_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL20_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL20_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL21    0x0821
+#define    RTL8367B_RMA_CTRL21_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL21_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL21_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL21_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL21_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL21_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL21_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL21_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL21_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL21_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_RMA_CTRL22    0x0822
+#define    RTL8367B_RMA_CTRL22_OPERATION_OFFSET    7
+#define    RTL8367B_RMA_CTRL22_OPERATION_MASK    0x180
+#define    RTL8367B_RMA_CTRL22_DISCARD_STORM_FILTER_OFFSET    6
+#define    RTL8367B_RMA_CTRL22_DISCARD_STORM_FILTER_MASK    0x40
+#define    RTL8367B_RMA_CTRL22_KEEP_FORMAT_OFFSET    2
+#define    RTL8367B_RMA_CTRL22_KEEP_FORMAT_MASK    0x4
+#define    RTL8367B_RMA_CTRL22_VLAN_LEAKY_OFFSET    1
+#define    RTL8367B_RMA_CTRL22_VLAN_LEAKY_MASK    0x2
+#define    RTL8367B_RMA_CTRL22_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_RMA_CTRL22_PORTISO_LEAKY_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_PORTBASED_PRIORITY_CTRL0    0x0851
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PORTBASED_PRIORITY_CTRL1    0x0852
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PORTBASED_PRIORITY_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM0_CTRL0    0x0855
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM0_CTRL1    0x0856
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM0_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM1_CTRL0    0x0859
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM1_CTRL1    0x085a
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM1_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM2_CTRL0    0x085d
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM2_CTRL1    0x085e
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM2_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM3_CTRL0    0x0861
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_VLAN_PPB_PRIORITY_ITEM3_CTRL1    0x0862
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_VLAN_PPB_PRIORITY_ITEM3_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_1Q_PRIORITY_REMAPPING_CTRL0    0x0865
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY3_OFFSET    12
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY3_MASK    0x7000
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY2_OFFSET    8
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY2_MASK    0x700
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY1_OFFSET    4
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY1_MASK    0x70
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY0_OFFSET    0
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL0_PRIORITY0_MASK    0x7
+
+#define    RTL8367B_REG_QOS_1Q_PRIORITY_REMAPPING_CTRL1    0x0866
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY7_OFFSET    12
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY7_MASK    0x7000
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY6_OFFSET    8
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY6_MASK    0x700
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY5_OFFSET    4
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY5_MASK    0x70
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY4_OFFSET    0
+#define    RTL8367B_QOS_1Q_PRIORITY_REMAPPING_CTRL1_PRIORITY4_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL0    0x0867
+#define    RTL8367B_DSCP3_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP3_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP2_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP2_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP1_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP1_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP0_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL1    0x0868
+#define    RTL8367B_DSCP7_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP7_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP6_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP6_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP5_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP5_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP4_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL2    0x0869
+#define    RTL8367B_DSCP11_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP11_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP10_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP10_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP9_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP9_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP8_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP8_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL3    0x086a
+#define    RTL8367B_DSCP15_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP15_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP14_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP14_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP13_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP13_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP12_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP12_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL4    0x086b
+#define    RTL8367B_DSCP19_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP19_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP18_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP18_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP17_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP17_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP16_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP16_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL5    0x086c
+#define    RTL8367B_DSCP23_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP23_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP22_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP22_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP21_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP21_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP20_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP20_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL6    0x086d
+#define    RTL8367B_DSCP27_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP27_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP26_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP26_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP25_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP25_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP24_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP24_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL7    0x086e
+#define    RTL8367B_DSCP31_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP31_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP30_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP30_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP29_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP29_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP28_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP28_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL8    0x086f
+#define    RTL8367B_DSCP35_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP35_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP34_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP34_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP33_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP33_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP32_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP32_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL9    0x0870
+#define    RTL8367B_DSCP39_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP39_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP38_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP38_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP37_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP37_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP36_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP36_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL10    0x0871
+#define    RTL8367B_DSCP43_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP43_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP42_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP42_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP41_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP41_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP40_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP40_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL11    0x0872
+#define    RTL8367B_DSCP47_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP47_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP46_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP46_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP45_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP45_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP44_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP44_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL12    0x0873
+#define    RTL8367B_DSCP51_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP51_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP50_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP50_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP49_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP49_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP48_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP48_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL13    0x0874
+#define    RTL8367B_DSCP55_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP55_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP54_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP54_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP53_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP53_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP52_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP52_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL14    0x0875
+#define    RTL8367B_DSCP59_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP59_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP58_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP58_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP57_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP57_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP56_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP56_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_DSCP_TO_PRIORITY_CTRL15    0x0876
+#define    RTL8367B_DSCP63_PRIORITY_OFFSET    12
+#define    RTL8367B_DSCP63_PRIORITY_MASK    0x7000
+#define    RTL8367B_DSCP62_PRIORITY_OFFSET    8
+#define    RTL8367B_DSCP62_PRIORITY_MASK    0x700
+#define    RTL8367B_DSCP61_PRIORITY_OFFSET    4
+#define    RTL8367B_DSCP61_PRIORITY_MASK    0x70
+#define    RTL8367B_DSCP60_PRIORITY_OFFSET    0
+#define    RTL8367B_DSCP60_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_PORTBASED_PRIORITY_CTRL0    0x0877
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT3_PRIORITY_OFFSET    12
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT3_PRIORITY_MASK    0x7000
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT2_PRIORITY_OFFSET    8
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT2_PRIORITY_MASK    0x700
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT1_PRIORITY_OFFSET    4
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT1_PRIORITY_MASK    0x70
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT0_PRIORITY_OFFSET    0
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL0_PORT0_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_PORTBASED_PRIORITY_CTRL1    0x0878
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT7_PRIORITY_OFFSET    12
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT7_PRIORITY_MASK    0x7000
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT6_PRIORITY_OFFSET    8
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT6_PRIORITY_MASK    0x700
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT5_PRIORITY_OFFSET    4
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT5_PRIORITY_MASK    0x70
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT4_PRIORITY_OFFSET    0
+#define    RTL8367B_QOS_PORTBASED_PRIORITY_CTRL1_PORT4_PRIORITY_MASK    0x7
+
+#define    RTL8367B_REG_DUMMY0879    0x0879
+#define    RTL8367B_DUMMY0879_OFFSET    0
+#define    RTL8367B_DUMMY0879_MASK    0x1
+
+#define    RTL8367B_REG_QOS_INTERNAL_PRIORITY_DECISION_CTRL0    0x087b
+#define    RTL8367B_QOS_ACL_WEIGHT_OFFSET    8
+#define    RTL8367B_QOS_ACL_WEIGHT_MASK    0xFF00
+#define    RTL8367B_QOS_PORT_WEIGHT_OFFSET    0
+#define    RTL8367B_QOS_PORT_WEIGHT_MASK    0xFF
+
+#define    RTL8367B_REG_QOS_INTERNAL_PRIORITY_DECISION_CTRL1    0x087c
+#define    RTL8367B_QOS_DOT1Q_WEIGHT_OFFSET    8
+#define    RTL8367B_QOS_DOT1Q_WEIGHT_MASK    0xFF00
+#define    RTL8367B_QOS_DSCP_WEIGHT_OFFSET    0
+#define    RTL8367B_QOS_DSCP_WEIGHT_MASK    0xFF
+
+#define    RTL8367B_REG_QOS_INTERNAL_PRIORITY_DECISION_CTRL2    0x087d
+#define    RTL8367B_QOS_CVLAN_WEIGHT_OFFSET    8
+#define    RTL8367B_QOS_CVLAN_WEIGHT_MASK    0xFF00
+#define    RTL8367B_QOS_SVLAN_WEIGHT_OFFSET    0
+#define    RTL8367B_QOS_SVLAN_WEIGHT_MASK    0xFF
+
+#define    RTL8367B_REG_QOS_INTERNAL_PRIORITY_DECISION_CTRL3    0x087e
+#define    RTL8367B_QOS_SA_WEIGHT_OFFSET    8
+#define    RTL8367B_QOS_SA_WEIGHT_MASK    0xFF00
+#define    RTL8367B_QOS_LUTFWD_WEIGHT_OFFSET    0
+#define    RTL8367B_QOS_LUTFWD_WEIGHT_MASK    0xFF
+
+#define    RTL8367B_REG_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0    0x087f
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY3_OFFSET    12
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY3_MASK    0x7000
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY2_OFFSET    8
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY2_MASK    0x700
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY1_OFFSET    4
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY1_MASK    0x70
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY0_OFFSET    0
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL0_PRIORITY0_MASK    0x7
+
+#define    RTL8367B_REG_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1    0x0880
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY7_OFFSET    12
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY7_MASK    0x7000
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY6_OFFSET    8
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY6_MASK    0x700
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY5_OFFSET    4
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY5_MASK    0x70
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY4_OFFSET    0
+#define    RTL8367B_QOS_PRIORITY_REMAPPING_IN_CPU_CTRL1_PRIORITY4_MASK    0x7
+
+#define    RTL8367B_REG_QOS_TRAP_PRIORITY0    0x0881
+#define    RTL8367B_UNKNOWN_MC_PRIORTY_OFFSET    12
+#define    RTL8367B_UNKNOWN_MC_PRIORTY_MASK    0x7000
+#define    RTL8367B_SVLAN_PRIOIRTY_OFFSET    8
+#define    RTL8367B_SVLAN_PRIOIRTY_MASK    0x700
+#define    RTL8367B_OAM_PRIOIRTY_OFFSET    4
+#define    RTL8367B_OAM_PRIOIRTY_MASK    0x70
+#define    RTL8367B_DOT1X_PRIORTY_OFFSET    0
+#define    RTL8367B_DOT1X_PRIORTY_MASK    0x7
+
+#define    RTL8367B_REG_QOS_TRAP_PRIORITY1    0x0882
+#define    RTL8367B_DW8051_TRAP_PRI_OFFSET    4
+#define    RTL8367B_DW8051_TRAP_PRI_MASK    0x70
+#define    RTL8367B_EEELLDP_TRAP_PRI_OFFSET    0
+#define    RTL8367B_EEELLDP_TRAP_PRI_MASK    0x7
+
+#define    RTL8367B_REG_MAX_LENGTH_CFG    0x0883
+#define    RTL8367B_MAX_LENGTH_GIGA_OFFSET    8
+#define    RTL8367B_MAX_LENGTH_GIGA_MASK    0xFF00
+#define    RTL8367B_MAX_LENGTH_10_100M_OFFSET    0
+#define    RTL8367B_MAX_LENGTH_10_100M_MASK    0xFF
+
+#define    RTL8367B_REG_MAX_LEN_RX_TX    0x0884
+#define    RTL8367B_MAX_LEN_RX_TX_OFFSET    0
+#define    RTL8367B_MAX_LEN_RX_TX_MASK    0x3
+
+#define    RTL8367B_REG_UNDA_FLOODING_PMSK    0x0890
+#define    RTL8367B_UNDA_FLOODING_PMSK_OFFSET    0
+#define    RTL8367B_UNDA_FLOODING_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_UNMCAST_FLOADING_PMSK    0x0891
+#define    RTL8367B_UNMCAST_FLOADING_PMSK_OFFSET    0
+#define    RTL8367B_UNMCAST_FLOADING_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_BCAST_FLOADING_PMSK    0x0892
+#define    RTL8367B_BCAST_FLOADING_PMSK_OFFSET    0
+#define    RTL8367B_BCAST_FLOADING_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT0_MASK    0x08a2
+#define    RTL8367B_PORT_ISOLATION_PORT0_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT0_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT1_MASK    0x08a3
+#define    RTL8367B_PORT_ISOLATION_PORT1_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT1_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT2_MASK    0x08a4
+#define    RTL8367B_PORT_ISOLATION_PORT2_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT2_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT3_MASK    0x08a5
+#define    RTL8367B_PORT_ISOLATION_PORT3_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT3_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT4_MASK    0x08a6
+#define    RTL8367B_PORT_ISOLATION_PORT4_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT4_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT5_MASK    0x08a7
+#define    RTL8367B_PORT_ISOLATION_PORT5_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT5_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT6_MASK    0x08a8
+#define    RTL8367B_PORT_ISOLATION_PORT6_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT6_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_ISOLATION_PORT7_MASK    0x08a9
+#define    RTL8367B_PORT_ISOLATION_PORT7_MASK_OFFSET    0
+#define    RTL8367B_PORT_ISOLATION_PORT7_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_CTRL    0x08b4
+#define    RTL8367B_FORCE_CTRL_OFFSET    0
+#define    RTL8367B_FORCE_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_FORCE_PORT0_MASK    0x08b5
+#define    RTL8367B_FORCE_PORT0_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT0_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT1_MASK    0x08b6
+#define    RTL8367B_FORCE_PORT1_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT1_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT2_MASK    0x08b7
+#define    RTL8367B_FORCE_PORT2_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT2_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT3_MASK    0x08b8
+#define    RTL8367B_FORCE_PORT3_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT3_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT4_MASK    0x08b9
+#define    RTL8367B_FORCE_PORT4_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT4_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT5_MASK    0x08ba
+#define    RTL8367B_FORCE_PORT5_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT5_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT6_MASK    0x08bb
+#define    RTL8367B_FORCE_PORT6_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT6_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FORCE_PORT7_MASK    0x08bc
+#define    RTL8367B_FORCE_PORT7_MASK_OFFSET    0
+#define    RTL8367B_FORCE_PORT7_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_SOURCE_PORT_PERMIT    0x08c5
+#define    RTL8367B_SOURCE_PORT_PERMIT_OFFSET    0
+#define    RTL8367B_SOURCE_PORT_PERMIT_MASK    0xFF
+
+#define    RTL8367B_REG_IPMCAST_VLAN_LEAKY    0x08c6
+#define    RTL8367B_IPMCAST_VLAN_LEAKY_OFFSET    0
+#define    RTL8367B_IPMCAST_VLAN_LEAKY_MASK    0xFF
+
+#define    RTL8367B_REG_IPMCAST_PORTISO_LEAKY    0x08c7
+#define    RTL8367B_IPMCAST_PORTISO_LEAKY_OFFSET    0
+#define    RTL8367B_IPMCAST_PORTISO_LEAKY_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_SECURITY_CTRL    0x08c8
+#define    RTL8367B_UNKNOWN_UNICAST_DA_BEHAVE_OFFSET    6
+#define    RTL8367B_UNKNOWN_UNICAST_DA_BEHAVE_MASK    0xC0
+#define    RTL8367B_LUT_LEARN_OVER_ACT_OFFSET    4
+#define    RTL8367B_LUT_LEARN_OVER_ACT_MASK    0x30
+#define    RTL8367B_UNMATCHED_SA_BEHAVE_OFFSET    2
+#define    RTL8367B_UNMATCHED_SA_BEHAVE_MASK    0xC
+#define    RTL8367B_UNKNOWN_SA_BEHAVE_OFFSET    0
+#define    RTL8367B_UNKNOWN_SA_BEHAVE_MASK    0x3
+
+#define    RTL8367B_REG_UNKNOWN_IPV4_MULTICAST_CTRL0    0x08c9
+#define    RTL8367B_PORT7_UNKNOWN_IP4_MCAST_OFFSET    14
+#define    RTL8367B_PORT7_UNKNOWN_IP4_MCAST_MASK    0xC000
+#define    RTL8367B_PORT6_UNKNOWN_IP4_MCAST_OFFSET    12
+#define    RTL8367B_PORT6_UNKNOWN_IP4_MCAST_MASK    0x3000
+#define    RTL8367B_PORT5_UNKNOWN_IP4_MCAST_OFFSET    10
+#define    RTL8367B_PORT5_UNKNOWN_IP4_MCAST_MASK    0xC00
+#define    RTL8367B_PORT4_UNKNOWN_IP4_MCAST_OFFSET    8
+#define    RTL8367B_PORT4_UNKNOWN_IP4_MCAST_MASK    0x300
+#define    RTL8367B_PORT3_UNKNOWN_IP4_MCAST_OFFSET    6
+#define    RTL8367B_PORT3_UNKNOWN_IP4_MCAST_MASK    0xC0
+#define    RTL8367B_PORT2_UNKNOWN_IP4_MCAST_OFFSET    4
+#define    RTL8367B_PORT2_UNKNOWN_IP4_MCAST_MASK    0x30
+#define    RTL8367B_PORT1_UNKNOWN_IP4_MCAST_OFFSET    2
+#define    RTL8367B_PORT1_UNKNOWN_IP4_MCAST_MASK    0xC
+#define    RTL8367B_PORT0_UNKNOWN_IP4_MCAST_OFFSET    0
+#define    RTL8367B_PORT0_UNKNOWN_IP4_MCAST_MASK    0x3
+
+#define    RTL8367B_REG_UNKNOWN_IPV6_MULTICAST_CTRL0    0x08cb
+#define    RTL8367B_PORT7_UNKNOWN_IP6_MCAST_OFFSET    14
+#define    RTL8367B_PORT7_UNKNOWN_IP6_MCAST_MASK    0xC000
+#define    RTL8367B_PORT6_UNKNOWN_IP6_MCAST_OFFSET    12
+#define    RTL8367B_PORT6_UNKNOWN_IP6_MCAST_MASK    0x3000
+#define    RTL8367B_PORT5_UNKNOWN_IP6_MCAST_OFFSET    10
+#define    RTL8367B_PORT5_UNKNOWN_IP6_MCAST_MASK    0xC00
+#define    RTL8367B_PORT4_UNKNOWN_IP6_MCAST_OFFSET    8
+#define    RTL8367B_PORT4_UNKNOWN_IP6_MCAST_MASK    0x300
+#define    RTL8367B_PORT3_UNKNOWN_IP6_MCAST_OFFSET    6
+#define    RTL8367B_PORT3_UNKNOWN_IP6_MCAST_MASK    0xC0
+#define    RTL8367B_PORT2_UNKNOWN_IP6_MCAST_OFFSET    4
+#define    RTL8367B_PORT2_UNKNOWN_IP6_MCAST_MASK    0x30
+#define    RTL8367B_PORT1_UNKNOWN_IP6_MCAST_OFFSET    2
+#define    RTL8367B_PORT1_UNKNOWN_IP6_MCAST_MASK    0xC
+#define    RTL8367B_PORT0_UNKNOWN_IP6_MCAST_OFFSET    0
+#define    RTL8367B_PORT0_UNKNOWN_IP6_MCAST_MASK    0x3
+
+#define    RTL8367B_REG_UNKNOWN_L2_MULTICAST_CTRL0    0x08cd
+#define    RTL8367B_PORT7_UNKNOWN_L2_MCAST_OFFSET    14
+#define    RTL8367B_PORT7_UNKNOWN_L2_MCAST_MASK    0xC000
+#define    RTL8367B_PORT6_UNKNOWN_L2_MCAST_OFFSET    12
+#define    RTL8367B_PORT6_UNKNOWN_L2_MCAST_MASK    0x3000
+#define    RTL8367B_PORT5_UNKNOWN_L2_MCAST_OFFSET    10
+#define    RTL8367B_PORT5_UNKNOWN_L2_MCAST_MASK    0xC00
+#define    RTL8367B_PORT4_UNKNOWN_L2_MCAST_OFFSET    8
+#define    RTL8367B_PORT4_UNKNOWN_L2_MCAST_MASK    0x300
+#define    RTL8367B_PORT3_UNKNOWN_L2_MCAST_OFFSET    6
+#define    RTL8367B_PORT3_UNKNOWN_L2_MCAST_MASK    0xC0
+#define    RTL8367B_PORT2_UNKNOWN_L2_MCAST_OFFSET    4
+#define    RTL8367B_PORT2_UNKNOWN_L2_MCAST_MASK    0x30
+#define    RTL8367B_PORT1_UNKNOWN_L2_MCAST_OFFSET    2
+#define    RTL8367B_PORT1_UNKNOWN_L2_MCAST_MASK    0xC
+#define    RTL8367B_PORT0_UNKNOWN_L2_MCAST_OFFSET    0
+#define    RTL8367B_PORT0_UNKNOWN_L2_MCAST_MASK    0x3
+
+#define    RTL8367B_REG_PORT_TRUNK_CTRL    0x08cf
+#define    RTL8367B_PORT_TRUNK_DUMB_OFFSET    8
+#define    RTL8367B_PORT_TRUNK_DUMB_MASK    0x100
+#define    RTL8367B_PORT_TRUNK_FLOOD_OFFSET    7
+#define    RTL8367B_PORT_TRUNK_FLOOD_MASK    0x80
+#define    RTL8367B_DPORT_HASH_OFFSET    6
+#define    RTL8367B_DPORT_HASH_MASK    0x40
+#define    RTL8367B_SPORT_HASH_OFFSET    5
+#define    RTL8367B_SPORT_HASH_MASK    0x20
+#define    RTL8367B_DIP_HASH_OFFSET    4
+#define    RTL8367B_DIP_HASH_MASK    0x10
+#define    RTL8367B_SIP_HASH_OFFSET    3
+#define    RTL8367B_SIP_HASH_MASK    0x8
+#define    RTL8367B_DMAC_HASH_OFFSET    2
+#define    RTL8367B_DMAC_HASH_MASK    0x4
+#define    RTL8367B_SMAC_HASH_OFFSET    1
+#define    RTL8367B_SMAC_HASH_MASK    0x2
+#define    RTL8367B_SPA_HASH_OFFSET    0
+#define    RTL8367B_SPA_HASH_MASK    0x1
+
+#define    RTL8367B_REG_PORT_TRUNK_GROUP_MASK    0x08d0
+#define    RTL8367B_PORT_TRUNK_GROUP1_MASK_OFFSET    4
+#define    RTL8367B_PORT_TRUNK_GROUP1_MASK_MASK    0xF0
+#define    RTL8367B_PORT_TRUNK_GROUP0_MASK_OFFSET    0
+#define    RTL8367B_PORT_TRUNK_GROUP0_MASK_MASK    0xF
+
+#define    RTL8367B_REG_PORT_TRUNK_FLOWCTRL    0x08d1
+#define    RTL8367B_EN_FLOWCTRL_TG1_OFFSET    1
+#define    RTL8367B_EN_FLOWCTRL_TG1_MASK    0x2
+#define    RTL8367B_EN_FLOWCTRL_TG0_OFFSET    0
+#define    RTL8367B_EN_FLOWCTRL_TG0_MASK    0x1
+
+#define    RTL8367B_REG_PORT_TRUNK_HASH_MAPPING_CTRL0    0x08d2
+#define    RTL8367B_HASH7_OFFSET    14
+#define    RTL8367B_HASH7_MASK    0xC000
+#define    RTL8367B_HASH6_OFFSET    12
+#define    RTL8367B_HASH6_MASK    0x3000
+#define    RTL8367B_HASH5_OFFSET    10
+#define    RTL8367B_HASH5_MASK    0xC00
+#define    RTL8367B_HASH4_OFFSET    8
+#define    RTL8367B_HASH4_MASK    0x300
+#define    RTL8367B_HASH3_OFFSET    6
+#define    RTL8367B_HASH3_MASK    0xC0
+#define    RTL8367B_HASH2_OFFSET    4
+#define    RTL8367B_HASH2_MASK    0x30
+#define    RTL8367B_HASH1_OFFSET    2
+#define    RTL8367B_HASH1_MASK    0xC
+#define    RTL8367B_HASH0_OFFSET    0
+#define    RTL8367B_HASH0_MASK    0x3
+
+#define    RTL8367B_REG_PORT_TRUNK_HASH_MAPPING_CTRL1    0x08d3
+#define    RTL8367B_HASH15_OFFSET    14
+#define    RTL8367B_HASH15_MASK    0xC000
+#define    RTL8367B_HASH14_OFFSET    12
+#define    RTL8367B_HASH14_MASK    0x3000
+#define    RTL8367B_HASH13_OFFSET    10
+#define    RTL8367B_HASH13_MASK    0xC00
+#define    RTL8367B_HASH12_OFFSET    8
+#define    RTL8367B_HASH12_MASK    0x300
+#define    RTL8367B_HASH11_OFFSET    6
+#define    RTL8367B_HASH11_MASK    0xC0
+#define    RTL8367B_HASH10_OFFSET    4
+#define    RTL8367B_HASH10_MASK    0x30
+#define    RTL8367B_HASH9_OFFSET    2
+#define    RTL8367B_HASH9_MASK    0xC
+#define    RTL8367B_HASH8_OFFSET    0
+#define    RTL8367B_HASH8_MASK    0x3
+
+#define    RTL8367B_REG_DOS_CFG    0x08d4
+#define    RTL8367B_DROP_ICMPFRAGMENT_OFFSET    9
+#define    RTL8367B_DROP_ICMPFRAGMENT_MASK    0x200
+#define    RTL8367B_DROP_TCPFRAGERROR_OFFSET    8
+#define    RTL8367B_DROP_TCPFRAGERROR_MASK    0x100
+#define    RTL8367B_DROP_TCPSHORTHDR_OFFSET    7
+#define    RTL8367B_DROP_TCPSHORTHDR_MASK    0x80
+#define    RTL8367B_DROP_SYN1024_OFFSET    6
+#define    RTL8367B_DROP_SYN1024_MASK    0x40
+#define    RTL8367B_DROP_NULLSCAN_OFFSET    5
+#define    RTL8367B_DROP_NULLSCAN_MASK    0x20
+#define    RTL8367B_DROP_XMASCAN_OFFSET    4
+#define    RTL8367B_DROP_XMASCAN_MASK    0x10
+#define    RTL8367B_DROP_SYNFINSCAN_OFFSET    3
+#define    RTL8367B_DROP_SYNFINSCAN_MASK    0x8
+#define    RTL8367B_DROP_BLATATTACKS_OFFSET    2
+#define    RTL8367B_DROP_BLATATTACKS_MASK    0x4
+#define    RTL8367B_DROP_LANDATTACKS_OFFSET    1
+#define    RTL8367B_DROP_LANDATTACKS_MASK    0x2
+#define    RTL8367B_DROP_DAEQSA_OFFSET    0
+#define    RTL8367B_DROP_DAEQSA_MASK    0x1
+
+#define    RTL8367B_REG_FPGA_VER_CEN    0x08e0
+
+#define    RTL8367B_REG_QOS_PORT_QUEUE_NUMBER_CTRL0    0x0900
+#define    RTL8367B_PORT3_NUMBER_OFFSET    12
+#define    RTL8367B_PORT3_NUMBER_MASK    0x7000
+#define    RTL8367B_PORT2_NUMBER_OFFSET    8
+#define    RTL8367B_PORT2_NUMBER_MASK    0x700
+#define    RTL8367B_PORT1_NUMBER_OFFSET    4
+#define    RTL8367B_PORT1_NUMBER_MASK    0x70
+#define    RTL8367B_PORT0_NUMBER_OFFSET    0
+#define    RTL8367B_PORT0_NUMBER_MASK    0x7
+
+#define    RTL8367B_REG_QOS_PORT_QUEUE_NUMBER_CTRL1    0x0901
+#define    RTL8367B_PORT7_NUMBER_OFFSET    12
+#define    RTL8367B_PORT7_NUMBER_MASK    0x7000
+#define    RTL8367B_PORT6_NUMBER_OFFSET    8
+#define    RTL8367B_PORT6_NUMBER_MASK    0x700
+#define    RTL8367B_PORT5_NUMBER_OFFSET    4
+#define    RTL8367B_PORT5_NUMBER_MASK    0x70
+#define    RTL8367B_PORT4_NUMBER_OFFSET    0
+#define    RTL8367B_PORT4_NUMBER_MASK    0x7
+
+#define    RTL8367B_REG_QOS_1Q_PRIORITY_TO_QID_CTRL0    0x0904
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_1Q_PRIORITY_TO_QID_CTRL1    0x0905
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_1Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_2Q_PRIORITY_TO_QID_CTRL0    0x0906
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_2Q_PRIORITY_TO_QID_CTRL1    0x0907
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_2Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_3Q_PRIORITY_TO_QID_CTRL0    0x0908
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_3Q_PRIORITY_TO_QID_CTRL1    0x0909
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_3Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_4Q_PRIORITY_TO_QID_CTRL0    0x090a
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_4Q_PRIORITY_TO_QID_CTRL1    0x090b
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_4Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_5Q_PRIORITY_TO_QID_CTRL0    0x090c
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_5Q_PRIORITY_TO_QID_CTRL1    0x090d
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_5Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_6Q_PRIORITY_TO_QID_CTRL0    0x090e
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_6Q_PRIORITY_TO_QID_CTRL1    0x090f
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_6Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_7Q_PRIORITY_TO_QID_CTRL0    0x0910
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_7Q_PRIORITY_TO_QID_CTRL1    0x0911
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_7Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_8Q_PRIORITY_TO_QID_CTRL0    0x0912
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY3_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY2_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY1_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL0_PRIORITY0_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_QOS_8Q_PRIORITY_TO_QID_CTRL1    0x0913
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_OFFSET    12
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY7_TO_QID_MASK    0x7000
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_OFFSET    8
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY6_TO_QID_MASK    0x700
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_OFFSET    4
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY5_TO_QID_MASK    0x70
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_OFFSET    0
+#define    RTL8367B_QOS_8Q_PRIORITY_TO_QID_CTRL1_PRIORITY4_TO_QID_MASK    0x7
+
+#define    RTL8367B_REG_HIGHPRI_INDICATOR    0x0915
+#define    RTL8367B_PORT7_INDICATOR_OFFSET    7
+#define    RTL8367B_PORT7_INDICATOR_MASK    0x80
+#define    RTL8367B_PORT6_INDICATOR_OFFSET    6
+#define    RTL8367B_PORT6_INDICATOR_MASK    0x40
+#define    RTL8367B_PORT5_INDICATOR_OFFSET    5
+#define    RTL8367B_PORT5_INDICATOR_MASK    0x20
+#define    RTL8367B_PORT4_INDICATOR_OFFSET    4
+#define    RTL8367B_PORT4_INDICATOR_MASK    0x10
+#define    RTL8367B_PORT3_INDICATOR_OFFSET    3
+#define    RTL8367B_PORT3_INDICATOR_MASK    0x8
+#define    RTL8367B_PORT2_INDICATOR_OFFSET    2
+#define    RTL8367B_PORT2_INDICATOR_MASK    0x4
+#define    RTL8367B_PORT1_INDICATOR_OFFSET    1
+#define    RTL8367B_PORT1_INDICATOR_MASK    0x2
+#define    RTL8367B_PORT0_INDICATOR_OFFSET    0
+#define    RTL8367B_PORT0_INDICATOR_MASK    0x1
+
+#define    RTL8367B_REG_HIGHPRI_CFG    0x0916
+#define    RTL8367B_HIGHPRI_CFG_OFFSET    0
+#define    RTL8367B_HIGHPRI_CFG_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_DEBUG_INFO_CTRL0    0x0917
+#define    RTL8367B_PORT1_DEBUG_INFO_OFFSET    8
+#define    RTL8367B_PORT1_DEBUG_INFO_MASK    0xFF00
+#define    RTL8367B_PORT0_DEBUG_INFO_OFFSET    0
+#define    RTL8367B_PORT0_DEBUG_INFO_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_DEBUG_INFO_CTRL1    0x0918
+#define    RTL8367B_PORT3_DEBUG_INFO_OFFSET    8
+#define    RTL8367B_PORT3_DEBUG_INFO_MASK    0xFF00
+#define    RTL8367B_PORT2_DEBUG_INFO_OFFSET    0
+#define    RTL8367B_PORT2_DEBUG_INFO_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_DEBUG_INFO_CTRL2    0x0919
+#define    RTL8367B_PORT5_DEBUG_INFO_OFFSET    8
+#define    RTL8367B_PORT5_DEBUG_INFO_MASK    0xFF00
+#define    RTL8367B_PORT4_DEBUG_INFO_OFFSET    0
+#define    RTL8367B_PORT4_DEBUG_INFO_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_DEBUG_INFO_CTRL3    0x091a
+#define    RTL8367B_PORT7_DEBUG_INFO_OFFSET    8
+#define    RTL8367B_PORT7_DEBUG_INFO_MASK    0xFF00
+#define    RTL8367B_PORT6_DEBUG_INFO_OFFSET    0
+#define    RTL8367B_PORT6_DEBUG_INFO_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCRTL_EGRESS_QUEUE_ENABLE_CTRL0    0x0930
+#define    RTL8367B_PORT1_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT1_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT0_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT0_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCRTL_EGRESS_QUEUE_ENABLE_CTRL1    0x0931
+#define    RTL8367B_PORT3_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT3_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT2_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT2_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCRTL_EGRESS_QUEUE_ENABLE_CTRL2    0x0932
+#define    RTL8367B_PORT5_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT5_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT4_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT4_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCRTL_EGRESS_QUEUE_ENABLE_CTRL3    0x0933
+#define    RTL8367B_PORT7_QUEUE_MASK_OFFSET    8
+#define    RTL8367B_PORT7_QUEUE_MASK_MASK    0xFF00
+#define    RTL8367B_PORT6_QUEUE_MASK_OFFSET    0
+#define    RTL8367B_PORT6_QUEUE_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_FLOWCRTL_EGRESS_PORT_ENABLE    0x0938
+#define    RTL8367B_FLOWCRTL_EGRESS_PORT_ENABLE_OFFSET    0
+#define    RTL8367B_FLOWCRTL_EGRESS_PORT_ENABLE_MASK    0xFF
+
+#define    RTL8367B_REG_EAV_CTRL    0x0939
+#define    RTL8367B_EAV_TRAP_CPU_OFFSET    1
+#define    RTL8367B_EAV_TRAP_CPU_MASK    0x2
+#define    RTL8367B_EAV_TRAP_8051_OFFSET    0
+#define    RTL8367B_EAV_TRAP_8051_MASK    0x1
+
+#define    RTL8367B_REG_UNTAG_DSCP_PRI_CFG    0x093a
+#define    RTL8367B_UNTAG_DSCP_PRI_CFG_OFFSET    0
+#define    RTL8367B_UNTAG_DSCP_PRI_CFG_MASK    0x1
+
+#define    RTL8367B_REG_VLAN_EGRESS_KEEP_CTRL0    0x093b
+#define    RTL8367B_PORT1_VLAN_KEEP_MASK_OFFSET    8
+#define    RTL8367B_PORT1_VLAN_KEEP_MASK_MASK    0xFF00
+#define    RTL8367B_PORT0_VLAN_KEEP_MASK_OFFSET    0
+#define    RTL8367B_PORT0_VLAN_KEEP_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_EGRESS_KEEP_CTRL1    0x093c
+#define    RTL8367B_PORT3_VLAN_KEEP_MASK_OFFSET    8
+#define    RTL8367B_PORT3_VLAN_KEEP_MASK_MASK    0xFF00
+#define    RTL8367B_PORT2_VLAN_KEEP_MASK_OFFSET    0
+#define    RTL8367B_PORT2_VLAN_KEEP_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_EGRESS_KEEP_CTRL2    0x093d
+#define    RTL8367B_PORT5_VLAN_KEEP_MASK_OFFSET    8
+#define    RTL8367B_PORT5_VLAN_KEEP_MASK_MASK    0xFF00
+#define    RTL8367B_PORT4_VLAN_KEEP_MASK_OFFSET    0
+#define    RTL8367B_PORT4_VLAN_KEEP_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_EGRESS_KEEP_CTRL3    0x093e
+#define    RTL8367B_PORT7_VLAN_KEEP_MASK_OFFSET    8
+#define    RTL8367B_PORT7_VLAN_KEEP_MASK_MASK    0xFF00
+#define    RTL8367B_PORT6_VLAN_KEEP_MASK_OFFSET    0
+#define    RTL8367B_PORT6_VLAN_KEEP_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_VLAN_TRANSPARENT_EN_CFG    0x093f
+#define    RTL8367B_VLAN_TRANSPARENT_EN_CFG_OFFSET    0
+#define    RTL8367B_VLAN_TRANSPARENT_EN_CFG_MASK    0x1
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY0_H    0x0940
+#define    RTL8367B_IPMC_GROUP_ENTRY0_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY0_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY0_L    0x0941
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY1_H    0x0942
+#define    RTL8367B_IPMC_GROUP_ENTRY1_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY1_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY1_L    0x0943
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY2_H    0x0944
+#define    RTL8367B_IPMC_GROUP_ENTRY2_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY2_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY2_L    0x0945
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY3_H    0x0946
+#define    RTL8367B_IPMC_GROUP_ENTRY3_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY3_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY3_L    0x0947
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY4_H    0x0948
+#define    RTL8367B_IPMC_GROUP_ENTRY4_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY4_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY4_L    0x0949
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY5_H    0x094a
+#define    RTL8367B_IPMC_GROUP_ENTRY5_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY5_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY5_L    0x094b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY6_H    0x094c
+#define    RTL8367B_IPMC_GROUP_ENTRY6_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY6_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY6_L    0x094d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY7_H    0x094e
+#define    RTL8367B_IPMC_GROUP_ENTRY7_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY7_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY7_L    0x094f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY8_H    0x0950
+#define    RTL8367B_IPMC_GROUP_ENTRY8_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY8_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY8_L    0x0951
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY9_H    0x0952
+#define    RTL8367B_IPMC_GROUP_ENTRY9_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY9_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY9_L    0x0953
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY10_H    0x0954
+#define    RTL8367B_IPMC_GROUP_ENTRY10_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY10_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY10_L    0x0955
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY11_H    0x0956
+#define    RTL8367B_IPMC_GROUP_ENTRY11_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY11_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY11_L    0x0957
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY12_H    0x0958
+#define    RTL8367B_IPMC_GROUP_ENTRY12_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY12_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY12_L    0x0959
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY13_H    0x095a
+#define    RTL8367B_IPMC_GROUP_ENTRY13_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY13_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY13_L    0x095b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY14_H    0x095c
+#define    RTL8367B_IPMC_GROUP_ENTRY14_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY14_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY14_L    0x095d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY15_H    0x095e
+#define    RTL8367B_IPMC_GROUP_ENTRY15_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY15_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY15_L    0x095f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY16_H    0x0960
+#define    RTL8367B_IPMC_GROUP_ENTRY16_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY16_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY16_L    0x0961
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY17_H    0x0962
+#define    RTL8367B_IPMC_GROUP_ENTRY17_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY17_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY17_L    0x0963
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY18_H    0x0964
+#define    RTL8367B_IPMC_GROUP_ENTRY18_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY18_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY18_L    0x0965
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY19_H    0x0966
+#define    RTL8367B_IPMC_GROUP_ENTRY19_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY19_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY19_L    0x0967
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY20_H    0x0968
+#define    RTL8367B_IPMC_GROUP_ENTRY20_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY20_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY20_L    0x0969
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY21_H    0x096a
+#define    RTL8367B_IPMC_GROUP_ENTRY21_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY21_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY21_L    0x096b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY22_H    0x096c
+#define    RTL8367B_IPMC_GROUP_ENTRY22_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY22_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY22_L    0x096d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY23_H    0x096e
+#define    RTL8367B_IPMC_GROUP_ENTRY23_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY23_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY23_L    0x096f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY24_H    0x0970
+#define    RTL8367B_IPMC_GROUP_ENTRY24_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY24_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY24_L    0x0971
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY25_H    0x0972
+#define    RTL8367B_IPMC_GROUP_ENTRY25_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY25_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY25_L    0x0973
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY26_H    0x0974
+#define    RTL8367B_IPMC_GROUP_ENTRY26_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY26_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY26_L    0x0975
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY27_H    0x0976
+#define    RTL8367B_IPMC_GROUP_ENTRY27_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY27_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY27_L    0x0977
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY28_H    0x0978
+#define    RTL8367B_IPMC_GROUP_ENTRY28_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY28_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY28_L    0x0979
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY29_H    0x097a
+#define    RTL8367B_IPMC_GROUP_ENTRY29_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY29_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY29_L    0x097b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY30_H    0x097c
+#define    RTL8367B_IPMC_GROUP_ENTRY30_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY30_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY30_L    0x097d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY31_H    0x097e
+#define    RTL8367B_IPMC_GROUP_ENTRY31_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY31_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY31_L    0x097f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY32_H    0x0980
+#define    RTL8367B_IPMC_GROUP_ENTRY32_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY32_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY32_L    0x0981
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY33_H    0x0982
+#define    RTL8367B_IPMC_GROUP_ENTRY33_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY33_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY33_L    0x0983
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY34_H    0x0984
+#define    RTL8367B_IPMC_GROUP_ENTRY34_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY34_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY34_L    0x0985
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY35_H    0x0986
+#define    RTL8367B_IPMC_GROUP_ENTRY35_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY35_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY35_L    0x0987
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY36_H    0x0988
+#define    RTL8367B_IPMC_GROUP_ENTRY36_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY36_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY36_L    0x0989
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY37_H    0x098a
+#define    RTL8367B_IPMC_GROUP_ENTRY37_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY37_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY37_L    0x098b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY38_H    0x098c
+#define    RTL8367B_IPMC_GROUP_ENTRY38_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY38_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY38_L    0x098d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY39_H    0x098e
+#define    RTL8367B_IPMC_GROUP_ENTRY39_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY39_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY39_L    0x098f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY40_H    0x0990
+#define    RTL8367B_IPMC_GROUP_ENTRY40_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY40_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY40_L    0x0991
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY41_H    0x0992
+#define    RTL8367B_IPMC_GROUP_ENTRY41_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY41_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY41_L    0x0993
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY42_H    0x0994
+#define    RTL8367B_IPMC_GROUP_ENTRY42_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY42_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY42_L    0x0995
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY43_H    0x0996
+#define    RTL8367B_IPMC_GROUP_ENTRY43_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY43_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY43_L    0x0997
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY44_H    0x0998
+#define    RTL8367B_IPMC_GROUP_ENTRY44_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY44_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY44_L    0x0999
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY45_H    0x099a
+#define    RTL8367B_IPMC_GROUP_ENTRY45_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY45_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY45_L    0x099b
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY46_H    0x099c
+#define    RTL8367B_IPMC_GROUP_ENTRY46_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY46_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY46_L    0x099d
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY47_H    0x099e
+#define    RTL8367B_IPMC_GROUP_ENTRY47_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY47_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY47_L    0x099f
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY48_H    0x09a0
+#define    RTL8367B_IPMC_GROUP_ENTRY48_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY48_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY48_L    0x09a1
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY49_H    0x09a2
+#define    RTL8367B_IPMC_GROUP_ENTRY49_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY49_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY49_L    0x09a3
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY50_H    0x09a4
+#define    RTL8367B_IPMC_GROUP_ENTRY50_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY50_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY50_L    0x09a5
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY51_H    0x09a6
+#define    RTL8367B_IPMC_GROUP_ENTRY51_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY51_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY51_L    0x09a7
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY52_H    0x09a8
+#define    RTL8367B_IPMC_GROUP_ENTRY52_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY52_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY52_L    0x09a9
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY53_H    0x09aa
+#define    RTL8367B_IPMC_GROUP_ENTRY53_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY53_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY53_L    0x09ab
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY54_H    0x09ac
+#define    RTL8367B_IPMC_GROUP_ENTRY54_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY54_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY54_L    0x09ad
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY55_H    0x09ae
+#define    RTL8367B_IPMC_GROUP_ENTRY55_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY55_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY55_L    0x09af
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY56_H    0x09b0
+#define    RTL8367B_IPMC_GROUP_ENTRY56_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY56_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY56_L    0x09b1
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY57_H    0x09b2
+#define    RTL8367B_IPMC_GROUP_ENTRY57_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY57_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY57_L    0x09b3
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY58_H    0x09b4
+#define    RTL8367B_IPMC_GROUP_ENTRY58_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY58_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY58_L    0x09b5
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY59_H    0x09b6
+#define    RTL8367B_IPMC_GROUP_ENTRY59_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY59_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY59_L    0x09b7
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY60_H    0x09b8
+#define    RTL8367B_IPMC_GROUP_ENTRY60_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY60_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY60_L    0x09b9
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY61_H    0x09ba
+#define    RTL8367B_IPMC_GROUP_ENTRY61_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY61_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY61_L    0x09bb
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY62_H    0x09bc
+#define    RTL8367B_IPMC_GROUP_ENTRY62_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY62_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY62_L    0x09bd
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY63_H    0x09be
+#define    RTL8367B_IPMC_GROUP_ENTRY63_H_OFFSET    0
+#define    RTL8367B_IPMC_GROUP_ENTRY63_H_MASK    0xFFF
+
+#define    RTL8367B_REG_IPMC_GROUP_ENTRY63_L    0x09bf
+
+#define    RTL8367B_REG_DPM_DUMMY00    0x09C0
+
+#define    RTL8367B_REG_DPM_DUMMY01    0x09C1
+
+#define    RTL8367B_REG_DPM_DUMMY02    0x09C2
+
+#define    RTL8367B_REG_DPM_DUMMY03    0x09C3
+
+#define    RTL8367B_REG_DPM_DUMMY04    0x09C4
+
+#define    RTL8367B_REG_DPM_DUMMY05    0x09C5
+
+#define    RTL8367B_REG_DPM_DUMMY06    0x09C6
+
+#define    RTL8367B_REG_DPM_DUMMY07    0x09C7
+
+#define    RTL8367B_REG_DPM_DUMMY08    0x09C8
+
+#define    RTL8367B_REG_DPM_DUMMY09    0x09C9
+
+#define    RTL8367B_REG_DPM_DUMMY10    0x09CA
+
+#define    RTL8367B_REG_DPM_DUMMY11    0x09CB
+
+#define    RTL8367B_REG_DPM_DUMMY12    0x09CC
+
+#define    RTL8367B_REG_DPM_DUMMY13    0x09CD
+
+#define    RTL8367B_REG_DPM_DUMMY14    0x09CE
+
+#define    RTL8367B_REG_DPM_DUMMY15    0x09CF
+
+/* (16'h0a00)l2_reg */
+
+#define    RTL8367B_REG_VLAN_MSTI0_CTRL0    0x0a00
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI0_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI1_CTRL0    0x0a02
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI1_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI2_CTRL0    0x0a04
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI2_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI3_CTRL0    0x0a06
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI3_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI4_CTRL0    0x0a08
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI4_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI5_CTRL0    0x0a0a
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI5_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI6_CTRL0    0x0a0c
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI6_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI7_CTRL0    0x0a0e
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI7_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI8_CTRL0    0x0a10
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI8_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI9_CTRL0    0x0a12
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI9_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI10_CTRL0    0x0a14
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI10_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI11_CTRL0    0x0a16
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI11_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI12_CTRL0    0x0a18
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI12_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI13_CTRL0    0x0a1a
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI13_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI14_CTRL0    0x0a1c
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI14_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_VLAN_MSTI15_CTRL0    0x0a1e
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT7_STATE_OFFSET    14
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT7_STATE_MASK    0xC000
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT6_STATE_OFFSET    12
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT6_STATE_MASK    0x3000
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT5_STATE_OFFSET    10
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT5_STATE_MASK    0xC00
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT4_STATE_OFFSET    8
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT4_STATE_MASK    0x300
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT3_STATE_OFFSET    6
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT3_STATE_MASK    0xC0
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT2_STATE_OFFSET    4
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT2_STATE_MASK    0x30
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT1_STATE_OFFSET    2
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT1_STATE_MASK    0xC
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT0_STATE_OFFSET    0
+#define    RTL8367B_VLAN_MSTI15_CTRL0_PORT0_STATE_MASK    0x3
+
+#define    RTL8367B_REG_LUT_PORT0_LEARN_LIMITNO    0x0a20
+#define    RTL8367B_LUT_PORT0_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT0_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT1_LEARN_LIMITNO    0x0a21
+#define    RTL8367B_LUT_PORT1_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT1_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT2_LEARN_LIMITNO    0x0a22
+#define    RTL8367B_LUT_PORT2_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT2_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT3_LEARN_LIMITNO    0x0a23
+#define    RTL8367B_LUT_PORT3_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT3_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT4_LEARN_LIMITNO    0x0a24
+#define    RTL8367B_LUT_PORT4_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT4_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT5_LEARN_LIMITNO    0x0a25
+#define    RTL8367B_LUT_PORT5_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT5_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT6_LEARN_LIMITNO    0x0a26
+#define    RTL8367B_LUT_PORT6_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT6_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_PORT7_LEARN_LIMITNO    0x0a27
+#define    RTL8367B_LUT_PORT7_LEARN_LIMITNO_OFFSET    0
+#define    RTL8367B_LUT_PORT7_LEARN_LIMITNO_MASK    0xFFF
+
+#define    RTL8367B_REG_LUT_CFG    0x0a30
+#define    RTL8367B_AGE_SPEED_OFFSET    8
+#define    RTL8367B_AGE_SPEED_MASK    0x300
+#define    RTL8367B_BCAM_DISABLE_OFFSET    6
+#define    RTL8367B_BCAM_DISABLE_MASK    0x40
+#define    RTL8367B_LINKDOWN_AGEOUT_OFFSET    5
+#define    RTL8367B_LINKDOWN_AGEOUT_MASK    0x20
+#define    RTL8367B_LUT_IPMC_HASH_OFFSET    4
+#define    RTL8367B_LUT_IPMC_HASH_MASK    0x10
+#define    RTL8367B_LUT_IPMC_LOOKUP_OP_OFFSET    3
+#define    RTL8367B_LUT_IPMC_LOOKUP_OP_MASK    0x8
+#define    RTL8367B_AGE_TIMER_OFFSET    0
+#define    RTL8367B_AGE_TIMER_MASK    0x7
+
+#define    RTL8367B_REG_LUT_AGEOUT_CTRL    0x0a31
+#define    RTL8367B_LUT_AGEOUT_CTRL_OFFSET    0
+#define    RTL8367B_LUT_AGEOUT_CTRL_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_EFID_CTRL0    0x0a32
+#define    RTL8367B_PORT3_EFID_OFFSET    12
+#define    RTL8367B_PORT3_EFID_MASK    0x7000
+#define    RTL8367B_PORT2_EFID_OFFSET    8
+#define    RTL8367B_PORT2_EFID_MASK    0x700
+#define    RTL8367B_PORT1_EFID_OFFSET    4
+#define    RTL8367B_PORT1_EFID_MASK    0x70
+#define    RTL8367B_PORT0_EFID_OFFSET    0
+#define    RTL8367B_PORT0_EFID_MASK    0x7
+
+#define    RTL8367B_REG_PORT_EFID_CTRL1    0x0a33
+#define    RTL8367B_PORT7_EFID_OFFSET    12
+#define    RTL8367B_PORT7_EFID_MASK    0x7000
+#define    RTL8367B_PORT6_EFID_OFFSET    8
+#define    RTL8367B_PORT6_EFID_MASK    0x700
+#define    RTL8367B_PORT5_EFID_OFFSET    4
+#define    RTL8367B_PORT5_EFID_MASK    0x70
+#define    RTL8367B_PORT4_EFID_OFFSET    0
+#define    RTL8367B_PORT4_EFID_MASK    0x7
+
+#define    RTL8367B_REG_FORCE_FLUSH    0x0a36
+#define    RTL8367B_BUSY_STATUS_OFFSET    8
+#define    RTL8367B_BUSY_STATUS_MASK    0xFF00
+#define    RTL8367B_FORCE_FLUSH_PORTMASK_OFFSET    0
+#define    RTL8367B_FORCE_FLUSH_PORTMASK_MASK    0xFF
+
+#define    RTL8367B_REG_L2_FLUSH_CTRL1    0x0a37
+#define    RTL8367B_LUT_FLUSH_FID_OFFSET    12
+#define    RTL8367B_LUT_FLUSH_FID_MASK    0xF000
+#define    RTL8367B_LUT_FLUSH_VID_OFFSET    0
+#define    RTL8367B_LUT_FLUSH_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_FLUSH_CTRL2    0x0a38
+#define    RTL8367B_LUT_FLUSH_TYPE_OFFSET    2
+#define    RTL8367B_LUT_FLUSH_TYPE_MASK    0x4
+#define    RTL8367B_LUT_FLUSH_MODE_OFFSET    0
+#define    RTL8367B_LUT_FLUSH_MODE_MASK    0x3
+
+#define    RTL8367B_REG_FLUSH_STATUS    0x0a3f
+#define    RTL8367B_FLUSH_STATUS_OFFSET    0
+#define    RTL8367B_FLUSH_STATUS_MASK    0x1
+
+#define    RTL8367B_REG_STORM_BCAST    0x0a40
+#define    RTL8367B_STORM_BCAST_OFFSET    0
+#define    RTL8367B_STORM_BCAST_MASK    0xFF
+
+#define    RTL8367B_REG_STORM_MCAST    0x0a41
+#define    RTL8367B_STORM_MCAST_OFFSET    0
+#define    RTL8367B_STORM_MCAST_MASK    0xFF
+
+#define    RTL8367B_REG_STORM_UNKOWN_UCAST    0x0a42
+#define    RTL8367B_STORM_UNKOWN_UCAST_OFFSET    0
+#define    RTL8367B_STORM_UNKOWN_UCAST_MASK    0xFF
+
+#define    RTL8367B_REG_STORM_UNKOWN_MCAST    0x0a43
+#define    RTL8367B_STORM_UNKOWN_MCAST_OFFSET    0
+#define    RTL8367B_STORM_UNKOWN_MCAST_MASK    0xFF
+
+#define    RTL8367B_REG_STORM_BCAST_METER_CTRL0    0x0a44
+#define    RTL8367B_STORM_BCAST_METER_CTRL0_PORT1_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_BCAST_METER_CTRL0_PORT1_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_BCAST_METER_CTRL0_PORT0_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_BCAST_METER_CTRL0_PORT0_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_BCAST_METER_CTRL1    0x0a45
+#define    RTL8367B_STORM_BCAST_METER_CTRL1_PORT3_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_BCAST_METER_CTRL1_PORT3_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_BCAST_METER_CTRL1_PORT2_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_BCAST_METER_CTRL1_PORT2_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_BCAST_METER_CTRL2    0x0a46
+#define    RTL8367B_STORM_BCAST_METER_CTRL2_PORT5_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_BCAST_METER_CTRL2_PORT5_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_BCAST_METER_CTRL2_PORT4_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_BCAST_METER_CTRL2_PORT4_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_BCAST_METER_CTRL3    0x0a47
+#define    RTL8367B_STORM_BCAST_METER_CTRL3_PORT7_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_BCAST_METER_CTRL3_PORT7_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_BCAST_METER_CTRL3_PORT6_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_BCAST_METER_CTRL3_PORT6_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_MCAST_METER_CTRL0    0x0a4c
+#define    RTL8367B_STORM_MCAST_METER_CTRL0_PORT1_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_MCAST_METER_CTRL0_PORT1_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_MCAST_METER_CTRL0_PORT0_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_MCAST_METER_CTRL0_PORT0_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_MCAST_METER_CTRL1    0x0a4d
+#define    RTL8367B_STORM_MCAST_METER_CTRL1_PORT3_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_MCAST_METER_CTRL1_PORT3_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_MCAST_METER_CTRL1_PORT2_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_MCAST_METER_CTRL1_PORT2_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_MCAST_METER_CTRL2    0x0a4e
+#define    RTL8367B_STORM_MCAST_METER_CTRL2_PORT5_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_MCAST_METER_CTRL2_PORT5_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_MCAST_METER_CTRL2_PORT4_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_MCAST_METER_CTRL2_PORT4_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_MCAST_METER_CTRL3    0x0a4f
+#define    RTL8367B_STORM_MCAST_METER_CTRL3_PORT7_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_MCAST_METER_CTRL3_PORT7_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_MCAST_METER_CTRL3_PORT6_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_MCAST_METER_CTRL3_PORT6_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNDA_METER_CTRL0    0x0a54
+#define    RTL8367B_STORM_UNDA_METER_CTRL0_PORT1_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNDA_METER_CTRL0_PORT1_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNDA_METER_CTRL0_PORT0_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNDA_METER_CTRL0_PORT0_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNDA_METER_CTRL1    0x0a55
+#define    RTL8367B_STORM_UNDA_METER_CTRL1_PORT3_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNDA_METER_CTRL1_PORT3_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNDA_METER_CTRL1_PORT2_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNDA_METER_CTRL1_PORT2_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNDA_METER_CTRL2    0x0a56
+#define    RTL8367B_STORM_UNDA_METER_CTRL2_PORT5_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNDA_METER_CTRL2_PORT5_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNDA_METER_CTRL2_PORT4_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNDA_METER_CTRL2_PORT4_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNDA_METER_CTRL3    0x0a57
+#define    RTL8367B_STORM_UNDA_METER_CTRL3_PORT7_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNDA_METER_CTRL3_PORT7_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNDA_METER_CTRL3_PORT6_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNDA_METER_CTRL3_PORT6_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNMC_METER_CTRL0    0x0a5c
+#define    RTL8367B_STORM_UNMC_METER_CTRL0_PORT1_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNMC_METER_CTRL0_PORT1_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNMC_METER_CTRL0_PORT0_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNMC_METER_CTRL0_PORT0_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNMC_METER_CTRL1    0x0a5d
+#define    RTL8367B_STORM_UNMC_METER_CTRL1_PORT3_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNMC_METER_CTRL1_PORT3_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNMC_METER_CTRL1_PORT2_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNMC_METER_CTRL1_PORT2_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNMC_METER_CTRL2    0x0a5e
+#define    RTL8367B_STORM_UNMC_METER_CTRL2_PORT5_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNMC_METER_CTRL2_PORT5_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNMC_METER_CTRL2_PORT4_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNMC_METER_CTRL2_PORT4_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_STORM_UNMC_METER_CTRL3    0x0a5f
+#define    RTL8367B_STORM_UNMC_METER_CTRL3_PORT7_METERIDX_OFFSET    8
+#define    RTL8367B_STORM_UNMC_METER_CTRL3_PORT7_METERIDX_MASK    0x1F00
+#define    RTL8367B_STORM_UNMC_METER_CTRL3_PORT6_METERIDX_OFFSET    0
+#define    RTL8367B_STORM_UNMC_METER_CTRL3_PORT6_METERIDX_MASK    0x1F
+
+#define    RTL8367B_REG_OAM_PARSER_CTRL0    0x0a70
+#define    RTL8367B_PORT7_PARACT_OFFSET    14
+#define    RTL8367B_PORT7_PARACT_MASK    0xC000
+#define    RTL8367B_PORT6_PARACT_OFFSET    12
+#define    RTL8367B_PORT6_PARACT_MASK    0x3000
+#define    RTL8367B_PORT5_PARACT_OFFSET    10
+#define    RTL8367B_PORT5_PARACT_MASK    0xC00
+#define    RTL8367B_PORT4_PARACT_OFFSET    8
+#define    RTL8367B_PORT4_PARACT_MASK    0x300
+#define    RTL8367B_PORT3_PARACT_OFFSET    6
+#define    RTL8367B_PORT3_PARACT_MASK    0xC0
+#define    RTL8367B_PORT2_PARACT_OFFSET    4
+#define    RTL8367B_PORT2_PARACT_MASK    0x30
+#define    RTL8367B_PORT1_PARACT_OFFSET    2
+#define    RTL8367B_PORT1_PARACT_MASK    0xC
+#define    RTL8367B_PORT0_PARACT_OFFSET    0
+#define    RTL8367B_PORT0_PARACT_MASK    0x3
+
+#define    RTL8367B_REG_OAM_MULTIPLEXER_CTRL0    0x0a72
+#define    RTL8367B_PORT7_MULACT_OFFSET    14
+#define    RTL8367B_PORT7_MULACT_MASK    0xC000
+#define    RTL8367B_PORT6_MULACT_OFFSET    12
+#define    RTL8367B_PORT6_MULACT_MASK    0x3000
+#define    RTL8367B_PORT5_MULACT_OFFSET    10
+#define    RTL8367B_PORT5_MULACT_MASK    0xC00
+#define    RTL8367B_PORT4_MULACT_OFFSET    8
+#define    RTL8367B_PORT4_MULACT_MASK    0x300
+#define    RTL8367B_PORT3_MULACT_OFFSET    6
+#define    RTL8367B_PORT3_MULACT_MASK    0xC0
+#define    RTL8367B_PORT2_MULACT_OFFSET    4
+#define    RTL8367B_PORT2_MULACT_MASK    0x30
+#define    RTL8367B_PORT1_MULACT_OFFSET    2
+#define    RTL8367B_PORT1_MULACT_MASK    0xC
+#define    RTL8367B_PORT0_MULACT_OFFSET    0
+#define    RTL8367B_PORT0_MULACT_MASK    0x3
+
+#define    RTL8367B_REG_OAM_CTRL    0x0a74
+#define    RTL8367B_OAM_CTRL_OFFSET    0
+#define    RTL8367B_OAM_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_DOT1X_PORT_ENABLE    0x0a80
+#define    RTL8367B_DOT1X_PORT_ENABLE_OFFSET    0
+#define    RTL8367B_DOT1X_PORT_ENABLE_MASK    0xFF
+
+#define    RTL8367B_REG_DOT1X_MAC_ENABLE    0x0a81
+#define    RTL8367B_DOT1X_MAC_ENABLE_OFFSET    0
+#define    RTL8367B_DOT1X_MAC_ENABLE_MASK    0xFF
+
+#define    RTL8367B_REG_DOT1X_PORT_AUTH    0x0a82
+#define    RTL8367B_DOT1X_PORT_AUTH_OFFSET    0
+#define    RTL8367B_DOT1X_PORT_AUTH_MASK    0xFF
+
+#define    RTL8367B_REG_DOT1X_PORT_OPDIR    0x0a83
+#define    RTL8367B_DOT1X_PORT_OPDIR_OFFSET    0
+#define    RTL8367B_DOT1X_PORT_OPDIR_MASK    0xFF
+
+#define    RTL8367B_REG_DOT1X_UNAUTH_ACT_W0    0x0a84
+#define    RTL8367B_DOT1X_PORT7_UNAUTHBH_OFFSET    14
+#define    RTL8367B_DOT1X_PORT7_UNAUTHBH_MASK    0xC000
+#define    RTL8367B_DOT1X_PORT6_UNAUTHBH_OFFSET    12
+#define    RTL8367B_DOT1X_PORT6_UNAUTHBH_MASK    0x3000
+#define    RTL8367B_DOT1X_PORT5_UNAUTHBH_OFFSET    10
+#define    RTL8367B_DOT1X_PORT5_UNAUTHBH_MASK    0xC00
+#define    RTL8367B_DOT1X_PORT4_UNAUTHBH_OFFSET    8
+#define    RTL8367B_DOT1X_PORT4_UNAUTHBH_MASK    0x300
+#define    RTL8367B_DOT1X_PORT3_UNAUTHBH_OFFSET    6
+#define    RTL8367B_DOT1X_PORT3_UNAUTHBH_MASK    0xC0
+#define    RTL8367B_DOT1X_PORT2_UNAUTHBH_OFFSET    4
+#define    RTL8367B_DOT1X_PORT2_UNAUTHBH_MASK    0x30
+#define    RTL8367B_DOT1X_PORT1_UNAUTHBH_OFFSET    2
+#define    RTL8367B_DOT1X_PORT1_UNAUTHBH_MASK    0xC
+#define    RTL8367B_DOT1X_PORT0_UNAUTHBH_OFFSET    0
+#define    RTL8367B_DOT1X_PORT0_UNAUTHBH_MASK    0x3
+
+#define    RTL8367B_REG_DOT1X_CFG    0x0a86
+#define    RTL8367B_DOT1X_GVOPDIR_OFFSET    6
+#define    RTL8367B_DOT1X_GVOPDIR_MASK    0x40
+#define    RTL8367B_DOT1X_MAC_OPDIR_OFFSET    5
+#define    RTL8367B_DOT1X_MAC_OPDIR_MASK    0x20
+#define    RTL8367B_DOT1X_GVIDX_OFFSET    0
+#define    RTL8367B_DOT1X_GVIDX_MASK    0x1F
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL0    0x0a87
+#define    RTL8367B_L2_LRN_CNT_CTRL0_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL0_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL1    0x0a88
+#define    RTL8367B_L2_LRN_CNT_CTRL1_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL1_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL2    0x0a89
+#define    RTL8367B_L2_LRN_CNT_CTRL2_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL2_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL3    0x0a8a
+#define    RTL8367B_L2_LRN_CNT_CTRL3_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL3_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL4    0x0a8b
+#define    RTL8367B_L2_LRN_CNT_CTRL4_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL4_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL5    0x0a8c
+#define    RTL8367B_L2_LRN_CNT_CTRL5_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL5_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL6    0x0a8d
+#define    RTL8367B_L2_LRN_CNT_CTRL6_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL6_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_LRN_CNT_CTRL7    0x0a8e
+#define    RTL8367B_L2_LRN_CNT_CTRL7_OFFSET    0
+#define    RTL8367B_L2_LRN_CNT_CTRL7_MASK    0xFFF
+
+#define    RTL8367B_REG_L2_DUMMY00    0x0aa0
+
+#define    RTL8367B_REG_L2_DUMMY01    0x0aa1
+
+#define    RTL8367B_REG_L2_DUMMY02    0x0aa2
+
+#define    RTL8367B_REG_L2_DUMMY03    0x0aa3
+
+#define    RTL8367B_REG_L2_DUMMY04    0x0aa4
+
+#define    RTL8367B_REG_L2_DUMMY05    0x0aa5
+
+#define    RTL8367B_REG_L2_DUMMY06    0x0aa6
+
+#define    RTL8367B_REG_L2_DUMMY07    0x0aa7
+
+/* (16'h0b00)mltvlan_reg */
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY0_CTRL0    0x0b00
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY0_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY0_CTRL1    0x0b01
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY0_CTRL2    0x0b02
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY0_CTRL3    0x0b03
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY0_CTRL4    0x0b04
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY1_CTRL0    0x0b05
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY1_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY1_CTRL1    0x0b06
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY1_CTRL2    0x0b07
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY1_CTRL3    0x0b08
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY1_CTRL4    0x0b09
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY2_CTRL0    0x0b0a
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY2_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY2_CTRL1    0x0b0b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY2_CTRL2    0x0b0c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY2_CTRL3    0x0b0d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY2_CTRL4    0x0b0e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY3_CTRL0    0x0b0f
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY3_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY3_CTRL1    0x0b10
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY3_CTRL2    0x0b11
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY3_CTRL3    0x0b12
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY3_CTRL4    0x0b13
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY4_CTRL0    0x0b14
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY4_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY4_CTRL1    0x0b15
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY4_CTRL2    0x0b16
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY4_CTRL3    0x0b17
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY4_CTRL4    0x0b18
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY5_CTRL0    0x0b19
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY5_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY5_CTRL1    0x0b1a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY5_CTRL2    0x0b1b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY5_CTRL3    0x0b1c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY5_CTRL4    0x0b1d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY6_CTRL0    0x0b1e
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY6_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY6_CTRL1    0x0b1f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY6_CTRL2    0x0b20
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY6_CTRL3    0x0b21
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY6_CTRL4    0x0b22
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY7_CTRL0    0x0b23
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY7_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY7_CTRL1    0x0b24
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY7_CTRL2    0x0b25
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY7_CTRL3    0x0b26
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY7_CTRL4    0x0b27
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY8_CTRL0    0x0b28
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY8_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY8_CTRL1    0x0b29
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY8_CTRL2    0x0b2a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY8_CTRL3    0x0b2b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY8_CTRL4    0x0b2c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY9_CTRL0    0x0b2d
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY9_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY9_CTRL1    0x0b2e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY9_CTRL2    0x0b2f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY9_CTRL3    0x0b30
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY9_CTRL4    0x0b31
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY10_CTRL0    0x0b32
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY10_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY10_CTRL1    0x0b33
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY10_CTRL2    0x0b34
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY10_CTRL3    0x0b35
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY10_CTRL4    0x0b36
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY11_CTRL0    0x0b37
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY11_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY11_CTRL1    0x0b38
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY11_CTRL2    0x0b39
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY11_CTRL3    0x0b3a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY11_CTRL4    0x0b3b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY12_CTRL0    0x0b3c
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY12_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY12_CTRL1    0x0b3d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY12_CTRL2    0x0b3e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY12_CTRL3    0x0b3f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY12_CTRL4    0x0b40
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY13_CTRL0    0x0b41
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY13_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY13_CTRL1    0x0b42
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY13_CTRL2    0x0b43
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY13_CTRL3    0x0b44
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY13_CTRL4    0x0b45
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY14_CTRL0    0x0b46
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY14_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY14_CTRL1    0x0b47
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY14_CTRL2    0x0b48
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY14_CTRL3    0x0b49
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY14_CTRL4    0x0b4a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY15_CTRL0    0x0b4b
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY15_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY15_CTRL1    0x0b4c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY15_CTRL2    0x0b4d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY15_CTRL3    0x0b4e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY15_CTRL4    0x0b4f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY16_CTRL0    0x0b50
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY16_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY16_CTRL1    0x0b51
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY16_CTRL2    0x0b52
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY16_CTRL3    0x0b53
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY16_CTRL4    0x0b54
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY17_CTRL0    0x0b55
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY17_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY17_CTRL1    0x0b56
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY17_CTRL2    0x0b57
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY17_CTRL3    0x0b58
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY17_CTRL4    0x0b59
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY18_CTRL0    0x0b5a
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY18_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY18_CTRL1    0x0b5b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY18_CTRL2    0x0b5c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY18_CTRL3    0x0b5d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY18_CTRL4    0x0b5e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY19_CTRL0    0x0b5f
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY19_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY19_CTRL1    0x0b60
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY19_CTRL2    0x0b61
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY19_CTRL3    0x0b62
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY19_CTRL4    0x0b63
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY20_CTRL0    0x0b64
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY20_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY20_CTRL1    0x0b65
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY20_CTRL2    0x0b66
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY20_CTRL3    0x0b67
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY20_CTRL4    0x0b68
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY21_CTRL0    0x0b69
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY21_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY21_CTRL1    0x0b6a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY21_CTRL2    0x0b6b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY21_CTRL3    0x0b6c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY21_CTRL4    0x0b6d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY22_CTRL0    0x0b6e
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY22_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY22_CTRL1    0x0b6f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY22_CTRL2    0x0b70
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY22_CTRL3    0x0b71
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY22_CTRL4    0x0b72
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY23_CTRL0    0x0b73
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY23_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY23_CTRL1    0x0b74
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY23_CTRL2    0x0b75
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY23_CTRL3    0x0b76
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY23_CTRL4    0x0b77
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY24_CTRL0    0x0b78
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY24_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY24_CTRL1    0x0b79
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY24_CTRL2    0x0b7a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY24_CTRL3    0x0b7b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY24_CTRL4    0x0b7c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY25_CTRL0    0x0b7d
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY25_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY25_CTRL1    0x0b7e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY25_CTRL2    0x0b7f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY25_CTRL3    0x0b80
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY25_CTRL4    0x0b81
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY26_CTRL0    0x0b82
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY26_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY26_CTRL1    0x0b83
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY26_CTRL2    0x0b84
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY26_CTRL3    0x0b85
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY26_CTRL4    0x0b86
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY27_CTRL0    0x0b87
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY27_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY27_CTRL1    0x0b88
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY27_CTRL2    0x0b89
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY27_CTRL3    0x0b8a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY27_CTRL4    0x0b8b
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY28_CTRL0    0x0b8c
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY28_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY28_CTRL1    0x0b8d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY28_CTRL2    0x0b8e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY28_CTRL3    0x0b8f
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY28_CTRL4    0x0b90
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY29_CTRL0    0x0b91
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY29_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY29_CTRL1    0x0b92
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY29_CTRL2    0x0b93
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY29_CTRL3    0x0b94
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY29_CTRL4    0x0b95
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY30_CTRL0    0x0b96
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY30_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY30_CTRL1    0x0b97
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY30_CTRL2    0x0b98
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY30_CTRL3    0x0b99
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY30_CTRL4    0x0b9a
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY31_CTRL0    0x0b9b
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_VALID_OFFSET    7
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_VALID_MASK    0x80
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_FORMAT_OFFSET    6
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_FORMAT_MASK    0x40
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_SVIDX_OFFSET    0
+#define    RTL8367B_SVLAN_MCAST2S_ENTRY31_CTRL0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY31_CTRL1    0x0b9c
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY31_CTRL2    0x0b9d
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY31_CTRL3    0x0b9e
+
+#define    RTL8367B_REG_SVLAN_MCAST2S_ENTRY31_CTRL4    0x0b9f
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_0    0x0ba0
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_1    0x0ba1
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_2    0x0ba2
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_3    0x0ba3
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_4    0x0ba4
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_5    0x0ba5
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_6    0x0ba6
+
+#define    RTL8367B_REG_MLTVLAN_DUMMY_7    0x0ba7
+
+/* (16'h0c00)svlan_reg */
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG0_CTRL1    0x0c01
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG0_CTRL2    0x0c02
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG0_CTRL3    0x0c03
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG0_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG1_CTRL1    0x0c04
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG1_CTRL2    0x0c05
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG1_CTRL3    0x0c06
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG1_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG2_CTRL1    0x0c07
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG2_CTRL2    0x0c08
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG2_CTRL3    0x0c09
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG2_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG3_CTRL1    0x0c0a
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG3_CTRL2    0x0c0b
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG3_CTRL3    0x0c0c
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG3_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG4_CTRL1    0x0c0d
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG4_CTRL2    0x0c0e
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG4_CTRL3    0x0c0f
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG4_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG5_CTRL1    0x0c10
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG5_CTRL2    0x0c11
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG5_CTRL3    0x0c12
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG5_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG6_CTRL1    0x0c13
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG6_CTRL2    0x0c14
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG6_CTRL3    0x0c15
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG6_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG7_CTRL1    0x0c16
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG7_CTRL2    0x0c17
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG7_CTRL3    0x0c18
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG7_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG8_CTRL1    0x0c19
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG8_CTRL2    0x0c1a
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG8_CTRL3    0x0c1b
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG8_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG9_CTRL1    0x0c1c
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG9_CTRL2    0x0c1d
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG9_CTRL3    0x0c1e
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG9_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG10_CTRL1    0x0c1f
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG10_CTRL2    0x0c20
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG10_CTRL3    0x0c21
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG10_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG11_CTRL1    0x0c22
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG11_CTRL2    0x0c23
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG11_CTRL3    0x0c24
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG11_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG12_CTRL1    0x0c25
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG12_CTRL2    0x0c26
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG12_CTRL3    0x0c27
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG12_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG13_CTRL1    0x0c28
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG13_CTRL2    0x0c29
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG13_CTRL3    0x0c2a
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG13_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG14_CTRL1    0x0c2b
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG14_CTRL2    0x0c2c
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG14_CTRL3    0x0c2d
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG14_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG15_CTRL1    0x0c2e
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG15_CTRL2    0x0c2f
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG15_CTRL3    0x0c30
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG15_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG16_CTRL1    0x0c31
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG16_CTRL2    0x0c32
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG16_CTRL3    0x0c33
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG16_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG17_CTRL1    0x0c34
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG17_CTRL2    0x0c35
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG17_CTRL3    0x0c36
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG17_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG18_CTRL1    0x0c37
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG18_CTRL2    0x0c38
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG18_CTRL3    0x0c39
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG18_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG19_CTRL1    0x0c3a
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG19_CTRL2    0x0c3b
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG19_CTRL3    0x0c3c
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG19_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG20_CTRL1    0x0c3d
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG20_CTRL2    0x0c3e
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG20_CTRL3    0x0c3f
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG20_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG21_CTRL1    0x0c40
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG21_CTRL2    0x0c41
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG21_CTRL3    0x0c42
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG21_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG22_CTRL1    0x0c43
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG22_CTRL2    0x0c44
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG22_CTRL3    0x0c45
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG22_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG23_CTRL1    0x0c46
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG23_CTRL2    0x0c47
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG23_CTRL3    0x0c48
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG23_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG24_CTRL1    0x0c49
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG24_CTRL2    0x0c4a
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG24_CTRL3    0x0c4b
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG24_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG25_CTRL1    0x0c4c
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG25_CTRL2    0x0c4d
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG25_CTRL3    0x0c4e
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG25_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG26_CTRL1    0x0c4f
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG26_CTRL2    0x0c50
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG26_CTRL3    0x0c51
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG26_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG27_CTRL1    0x0c52
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG27_CTRL2    0x0c53
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG27_CTRL3    0x0c54
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG27_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG28_CTRL1    0x0c55
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG28_CTRL2    0x0c56
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG28_CTRL3    0x0c57
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG28_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG29_CTRL1    0x0c58
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG29_CTRL2    0x0c59
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG29_CTRL3    0x0c5a
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG29_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG30_CTRL1    0x0c5b
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG30_CTRL2    0x0c5c
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG30_CTRL3    0x0c5d
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG30_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG31_CTRL1    0x0c5e
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG31_CTRL2    0x0c5f
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG31_CTRL3    0x0c60
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG31_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG32_CTRL1    0x0c61
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG32_CTRL2    0x0c62
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG32_CTRL3    0x0c63
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG32_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG33_CTRL1    0x0c64
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG33_CTRL2    0x0c65
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG33_CTRL3    0x0c66
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG33_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG34_CTRL1    0x0c67
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG34_CTRL2    0x0c68
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG34_CTRL3    0x0c69
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG34_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG35_CTRL1    0x0c6a
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG35_CTRL2    0x0c6b
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG35_CTRL3    0x0c6c
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG35_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG36_CTRL1    0x0c6d
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG36_CTRL2    0x0c6e
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG36_CTRL3    0x0c6f
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG36_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG37_CTRL1    0x0c70
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG37_CTRL2    0x0c71
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG37_CTRL3    0x0c72
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG37_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG38_CTRL1    0x0c73
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG38_CTRL2    0x0c74
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG38_CTRL3    0x0c75
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG38_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG39_CTRL1    0x0c76
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG39_CTRL2    0x0c77
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG39_CTRL3    0x0c78
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG39_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG40_CTRL1    0x0c79
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG40_CTRL2    0x0c7a
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG40_CTRL3    0x0c7b
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG40_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG41_CTRL1    0x0c7c
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG41_CTRL2    0x0c7d
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG41_CTRL3    0x0c7e
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG41_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG42_CTRL1    0x0c7f
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG42_CTRL2    0x0c80
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG42_CTRL3    0x0c81
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG42_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG43_CTRL1    0x0c82
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG43_CTRL2    0x0c83
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG43_CTRL3    0x0c84
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG43_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG44_CTRL1    0x0c85
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG44_CTRL2    0x0c86
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG44_CTRL3    0x0c87
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG44_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG45_CTRL1    0x0c88
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG45_CTRL2    0x0c89
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG45_CTRL3    0x0c8a
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG45_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG46_CTRL1    0x0c8b
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG46_CTRL2    0x0c8c
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG46_CTRL3    0x0c8d
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG46_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG47_CTRL1    0x0c8e
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG47_CTRL2    0x0c8f
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG47_CTRL3    0x0c90
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG47_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG48_CTRL1    0x0c91
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG48_CTRL2    0x0c92
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG48_CTRL3    0x0c93
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG48_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG49_CTRL1    0x0c94
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG49_CTRL2    0x0c95
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG49_CTRL3    0x0c96
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG49_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG50_CTRL1    0x0c97
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG50_CTRL2    0x0c98
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG50_CTRL3    0x0c99
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG50_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG51_CTRL1    0x0c9a
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG51_CTRL2    0x0c9b
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG51_CTRL3    0x0c9c
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG51_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG52_CTRL1    0x0c9d
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG52_CTRL2    0x0c9e
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG52_CTRL3    0x0c9f
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG52_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG53_CTRL1    0x0ca0
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG53_CTRL2    0x0ca1
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG53_CTRL3    0x0ca2
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG53_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG54_CTRL1    0x0ca3
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG54_CTRL2    0x0ca4
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG54_CTRL3    0x0ca5
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG54_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG55_CTRL1    0x0ca6
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG55_CTRL2    0x0ca7
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG55_CTRL3    0x0ca8
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG55_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG56_CTRL1    0x0ca9
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG56_CTRL2    0x0caa
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG56_CTRL3    0x0cab
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG56_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG57_CTRL1    0x0cac
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG57_CTRL2    0x0cad
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG57_CTRL3    0x0cae
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG57_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG58_CTRL1    0x0caf
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG58_CTRL2    0x0cb0
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG58_CTRL3    0x0cb1
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG58_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG59_CTRL1    0x0cb2
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG59_CTRL2    0x0cb3
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG59_CTRL3    0x0cb4
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG59_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG60_CTRL1    0x0cb5
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG60_CTRL2    0x0cb6
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG60_CTRL3    0x0cb7
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG60_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG61_CTRL1    0x0cb8
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG61_CTRL2    0x0cb9
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG61_CTRL3    0x0cba
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG61_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG62_CTRL1    0x0cbb
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG62_CTRL2    0x0cbc
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG62_CTRL3    0x0cbd
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG62_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG63_CTRL1    0x0cbe
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL1_VS_UNTAGSET_OFFSET    8
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL1_VS_UNTAGSET_MASK    0xFF00
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL1_VS_SMBR_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL1_VS_SMBR_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG63_CTRL2    0x0cbf
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_FIDEN_OFFSET    7
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_FIDEN_MASK    0x80
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_SPRI_OFFSET    4
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_SPRI_MASK    0x70
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_FID_MSTI_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL2_VS_FID_MSTI_MASK    0xF
+
+#define    RTL8367B_REG_SVLAN_MEMBERCFG63_CTRL3    0x0cc0
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_EFID_OFFSET    13
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_EFID_MASK    0xE000
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_EFIDEN_OFFSET    12
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_EFIDEN_MASK    0x1000
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_SVID_OFFSET    0
+#define    RTL8367B_SVLAN_MEMBERCFG63_CTRL3_VS_SVID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG0_CTRL0    0x0d00
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG0_CTRL1    0x0d01
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG0_CTRL2    0x0d02
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG0_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG1_CTRL0    0x0d03
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG1_CTRL1    0x0d04
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG1_CTRL2    0x0d05
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG1_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG2_CTRL0    0x0d06
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG2_CTRL1    0x0d07
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG2_CTRL2    0x0d08
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG2_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG3_CTRL0    0x0d09
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG3_CTRL1    0x0d0a
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG3_CTRL2    0x0d0b
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG3_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG4_CTRL0    0x0d0c
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG4_CTRL1    0x0d0d
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG4_CTRL2    0x0d0e
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG4_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG5_CTRL0    0x0d0f
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG5_CTRL1    0x0d10
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG5_CTRL2    0x0d11
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG5_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG6_CTRL0    0x0d12
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG6_CTRL1    0x0d13
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG6_CTRL2    0x0d14
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG6_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG7_CTRL0    0x0d15
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG7_CTRL1    0x0d16
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG7_CTRL2    0x0d17
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG7_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG8_CTRL0    0x0d18
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG8_CTRL1    0x0d19
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG8_CTRL2    0x0d1a
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG8_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG9_CTRL0    0x0d1b
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG9_CTRL1    0x0d1c
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG9_CTRL2    0x0d1d
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG9_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG10_CTRL0    0x0d1e
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG10_CTRL1    0x0d1f
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG10_CTRL2    0x0d20
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG10_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG11_CTRL0    0x0d21
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG11_CTRL1    0x0d22
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG11_CTRL2    0x0d23
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG11_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG12_CTRL0    0x0d24
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG12_CTRL1    0x0d25
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG12_CTRL2    0x0d26
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG12_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG13_CTRL0    0x0d27
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG13_CTRL1    0x0d28
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG13_CTRL2    0x0d29
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG13_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG14_CTRL0    0x0d2a
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG14_CTRL1    0x0d2b
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG14_CTRL2    0x0d2c
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG14_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG15_CTRL0    0x0d2d
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG15_CTRL1    0x0d2e
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG15_CTRL2    0x0d2f
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG15_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG16_CTRL0    0x0d30
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG16_CTRL1    0x0d31
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG16_CTRL2    0x0d32
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG16_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG17_CTRL0    0x0d33
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG17_CTRL1    0x0d34
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG17_CTRL2    0x0d35
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG17_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG18_CTRL0    0x0d36
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG18_CTRL1    0x0d37
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG18_CTRL2    0x0d38
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG18_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG19_CTRL0    0x0d39
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG19_CTRL1    0x0d3a
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG19_CTRL2    0x0d3b
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG19_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG20_CTRL0    0x0d3c
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG20_CTRL1    0x0d3d
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG20_CTRL2    0x0d3e
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG20_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG21_CTRL0    0x0d3f
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG21_CTRL1    0x0d40
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG21_CTRL2    0x0d41
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG21_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG22_CTRL0    0x0d42
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG22_CTRL1    0x0d43
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG22_CTRL2    0x0d44
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG22_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG23_CTRL0    0x0d45
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG23_CTRL1    0x0d46
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG23_CTRL2    0x0d47
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG23_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG24_CTRL0    0x0d48
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG24_CTRL1    0x0d49
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG24_CTRL2    0x0d4a
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG24_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG25_CTRL0    0x0d4b
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG25_CTRL1    0x0d4c
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG25_CTRL2    0x0d4d
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG25_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG26_CTRL0    0x0d4e
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG26_CTRL1    0x0d4f
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG26_CTRL2    0x0d50
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG26_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG27_CTRL0    0x0d51
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG27_CTRL1    0x0d52
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG27_CTRL2    0x0d53
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG27_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG28_CTRL0    0x0d54
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG28_CTRL1    0x0d55
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG28_CTRL2    0x0d56
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG28_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG29_CTRL0    0x0d57
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG29_CTRL1    0x0d58
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG29_CTRL2    0x0d59
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG29_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG30_CTRL0    0x0d5a
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG30_CTRL1    0x0d5b
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG30_CTRL2    0x0d5c
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG30_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG31_CTRL0    0x0d5d
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG31_CTRL1    0x0d5e
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG31_CTRL2    0x0d5f
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG31_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG32_CTRL0    0x0d60
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG32_CTRL1    0x0d61
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG32_CTRL2    0x0d62
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG32_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG33_CTRL0    0x0d63
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG33_CTRL1    0x0d64
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG33_CTRL2    0x0d65
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG33_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG34_CTRL0    0x0d66
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG34_CTRL1    0x0d67
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG34_CTRL2    0x0d68
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG34_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG35_CTRL0    0x0d69
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG35_CTRL1    0x0d6a
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG35_CTRL2    0x0d6b
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG35_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG36_CTRL0    0x0d6c
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG36_CTRL1    0x0d6d
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG36_CTRL2    0x0d6e
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG36_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG37_CTRL0    0x0d6f
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG37_CTRL1    0x0d70
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG37_CTRL2    0x0d71
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG37_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG38_CTRL0    0x0d72
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG38_CTRL1    0x0d73
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG38_CTRL2    0x0d74
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG38_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG39_CTRL0    0x0d75
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG39_CTRL1    0x0d76
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG39_CTRL2    0x0d77
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG39_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG40_CTRL0    0x0d78
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG40_CTRL1    0x0d79
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG40_CTRL2    0x0d7a
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG40_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG41_CTRL0    0x0d7b
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG41_CTRL1    0x0d7c
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG41_CTRL2    0x0d7d
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG41_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG42_CTRL0    0x0d7e
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG42_CTRL1    0x0d7f
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG42_CTRL2    0x0d80
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG42_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG43_CTRL0    0x0d81
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG43_CTRL1    0x0d82
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG43_CTRL2    0x0d83
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG43_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG44_CTRL0    0x0d84
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG44_CTRL1    0x0d85
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG44_CTRL2    0x0d86
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG44_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG45_CTRL0    0x0d87
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG45_CTRL1    0x0d88
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG45_CTRL2    0x0d89
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG45_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG46_CTRL0    0x0d8a
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG46_CTRL1    0x0d8b
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG46_CTRL2    0x0d8c
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG46_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG47_CTRL0    0x0d8d
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG47_CTRL1    0x0d8e
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG47_CTRL2    0x0d8f
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG47_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG48_CTRL0    0x0d90
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG48_CTRL1    0x0d91
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG48_CTRL2    0x0d92
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG48_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG49_CTRL0    0x0d93
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG49_CTRL1    0x0d94
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG49_CTRL2    0x0d95
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG49_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG50_CTRL0    0x0d96
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG50_CTRL1    0x0d97
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG50_CTRL2    0x0d98
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG50_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG51_CTRL0    0x0d99
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG51_CTRL1    0x0d9a
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG51_CTRL2    0x0d9b
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG51_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG52_CTRL0    0x0d9c
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG52_CTRL1    0x0d9d
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG52_CTRL2    0x0d9e
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG52_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG53_CTRL0    0x0d9f
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG53_CTRL1    0x0da0
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG53_CTRL2    0x0da1
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG53_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG54_CTRL0    0x0da2
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG54_CTRL1    0x0da3
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG54_CTRL2    0x0da4
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG54_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG55_CTRL0    0x0da5
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG55_CTRL1    0x0da6
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG55_CTRL2    0x0da7
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG55_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG56_CTRL0    0x0da8
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG56_CTRL1    0x0da9
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG56_CTRL2    0x0daa
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG56_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG57_CTRL0    0x0dab
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG57_CTRL1    0x0dac
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG57_CTRL2    0x0dad
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG57_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG58_CTRL0    0x0dae
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG58_CTRL1    0x0daf
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG58_CTRL2    0x0db0
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG58_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG59_CTRL0    0x0db1
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG59_CTRL1    0x0db2
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG59_CTRL2    0x0db3
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG59_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG60_CTRL0    0x0db4
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG60_CTRL1    0x0db5
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG60_CTRL2    0x0db6
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG60_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG61_CTRL0    0x0db7
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG61_CTRL1    0x0db8
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG61_CTRL2    0x0db9
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG61_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG62_CTRL0    0x0dba
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG62_CTRL1    0x0dbb
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG62_CTRL2    0x0dbc
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG62_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG63_CTRL0    0x0dbd
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG63_CTRL1    0x0dbe
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG63_CTRL2    0x0dbf
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG63_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG64_CTRL0    0x0dc0
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG64_CTRL1    0x0dc1
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG64_CTRL2    0x0dc2
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG64_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG65_CTRL0    0x0dc3
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG65_CTRL1    0x0dc4
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG65_CTRL2    0x0dc5
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG65_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG66_CTRL0    0x0dc6
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG66_CTRL1    0x0dc7
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG66_CTRL2    0x0dc8
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG66_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG67_CTRL0    0x0dc9
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG67_CTRL1    0x0dca
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG67_CTRL2    0x0dcb
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG67_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG68_CTRL0    0x0dcc
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG68_CTRL1    0x0dcd
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG68_CTRL2    0x0dce
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG68_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG69_CTRL0    0x0dcf
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG69_CTRL1    0x0dd0
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG69_CTRL2    0x0dd1
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG69_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG70_CTRL0    0x0dd2
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG70_CTRL1    0x0dd3
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG70_CTRL2    0x0dd4
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG70_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG71_CTRL0    0x0dd5
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG71_CTRL1    0x0dd6
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG71_CTRL2    0x0dd7
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG71_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG72_CTRL0    0x0dd8
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG72_CTRL1    0x0dd9
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG72_CTRL2    0x0dda
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG72_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG73_CTRL0    0x0ddb
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG73_CTRL1    0x0ddc
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG73_CTRL2    0x0ddd
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG73_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG74_CTRL0    0x0dde
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG74_CTRL1    0x0ddf
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG74_CTRL2    0x0de0
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG74_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG75_CTRL0    0x0de1
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG75_CTRL1    0x0de2
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG75_CTRL2    0x0de3
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG75_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG76_CTRL0    0x0de4
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG76_CTRL1    0x0de5
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG76_CTRL2    0x0de6
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG76_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG77_CTRL0    0x0de7
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG77_CTRL1    0x0de8
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG77_CTRL2    0x0de9
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG77_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG78_CTRL0    0x0dea
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG78_CTRL1    0x0deb
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG78_CTRL2    0x0dec
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG78_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG79_CTRL0    0x0ded
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG79_CTRL1    0x0dee
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG79_CTRL2    0x0def
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG79_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG80_CTRL0    0x0df0
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG80_CTRL1    0x0df1
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG80_CTRL2    0x0df2
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG80_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG81_CTRL0    0x0df3
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG81_CTRL1    0x0df4
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG81_CTRL2    0x0df5
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG81_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG82_CTRL0    0x0df6
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG82_CTRL1    0x0df7
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG82_CTRL2    0x0df8
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG82_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG83_CTRL0    0x0df9
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG83_CTRL1    0x0dfa
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG83_CTRL2    0x0dfb
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG83_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG84_CTRL0    0x0dfc
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG84_CTRL1    0x0dfd
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG84_CTRL2    0x0dfe
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG84_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG85_CTRL0    0x0dff
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG85_CTRL1    0x0e00
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG85_CTRL2    0x0e01
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG85_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG86_CTRL0    0x0e02
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG86_CTRL1    0x0e03
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG86_CTRL2    0x0e04
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG86_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG87_CTRL0    0x0e05
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG87_CTRL1    0x0e06
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG87_CTRL2    0x0e07
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG87_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG88_CTRL0    0x0e08
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG88_CTRL1    0x0e09
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG88_CTRL2    0x0e0a
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG88_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG89_CTRL0    0x0e0b
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG89_CTRL1    0x0e0c
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG89_CTRL2    0x0e0d
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG89_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG90_CTRL0    0x0e0e
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG90_CTRL1    0x0e0f
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG90_CTRL2    0x0e10
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG90_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG91_CTRL0    0x0e11
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG91_CTRL1    0x0e12
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG91_CTRL2    0x0e13
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG91_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG92_CTRL0    0x0e14
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG92_CTRL1    0x0e15
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG92_CTRL2    0x0e16
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG92_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG93_CTRL0    0x0e17
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG93_CTRL1    0x0e18
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG93_CTRL2    0x0e19
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG93_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG94_CTRL0    0x0e1a
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG94_CTRL1    0x0e1b
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG94_CTRL2    0x0e1c
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG94_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG95_CTRL0    0x0e1d
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG95_CTRL1    0x0e1e
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG95_CTRL2    0x0e1f
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG95_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG96_CTRL0    0x0e20
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG96_CTRL1    0x0e21
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG96_CTRL2    0x0e22
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG96_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG97_CTRL0    0x0e23
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG97_CTRL1    0x0e24
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG97_CTRL2    0x0e25
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG97_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG98_CTRL0    0x0e26
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG98_CTRL1    0x0e27
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG98_CTRL2    0x0e28
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG98_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG99_CTRL0    0x0e29
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG99_CTRL1    0x0e2a
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG99_CTRL2    0x0e2b
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG99_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG100_CTRL0    0x0e2c
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG100_CTRL1    0x0e2d
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG100_CTRL2    0x0e2e
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG100_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG101_CTRL0    0x0e2f
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG101_CTRL1    0x0e30
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG101_CTRL2    0x0e31
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG101_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG102_CTRL0    0x0e32
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG102_CTRL1    0x0e33
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG102_CTRL2    0x0e34
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG102_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG103_CTRL0    0x0e35
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG103_CTRL1    0x0e36
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG103_CTRL2    0x0e37
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG103_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG104_CTRL0    0x0e38
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG104_CTRL1    0x0e39
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG104_CTRL2    0x0e3a
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG104_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG105_CTRL0    0x0e3b
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG105_CTRL1    0x0e3c
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG105_CTRL2    0x0e3d
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG105_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG106_CTRL0    0x0e3e
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG106_CTRL1    0x0e3f
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG106_CTRL2    0x0e40
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG106_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG107_CTRL0    0x0e41
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG107_CTRL1    0x0e42
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG107_CTRL2    0x0e43
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG107_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG108_CTRL0    0x0e44
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG108_CTRL1    0x0e45
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG108_CTRL2    0x0e46
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG108_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG109_CTRL0    0x0e47
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG109_CTRL1    0x0e48
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG109_CTRL2    0x0e49
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG109_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG110_CTRL0    0x0e4a
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG110_CTRL1    0x0e4b
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG110_CTRL2    0x0e4c
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG110_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG111_CTRL0    0x0e4d
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG111_CTRL1    0x0e4e
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG111_CTRL2    0x0e4f
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG111_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG112_CTRL0    0x0e50
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG112_CTRL1    0x0e51
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG112_CTRL2    0x0e52
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG112_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG113_CTRL0    0x0e53
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG113_CTRL1    0x0e54
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG113_CTRL2    0x0e55
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG113_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG114_CTRL0    0x0e56
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG114_CTRL1    0x0e57
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG114_CTRL2    0x0e58
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG114_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG115_CTRL0    0x0e59
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG115_CTRL1    0x0e5a
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG115_CTRL2    0x0e5b
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG115_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG116_CTRL0    0x0e5c
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG116_CTRL1    0x0e5d
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG116_CTRL2    0x0e5e
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG116_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG117_CTRL0    0x0e5f
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG117_CTRL1    0x0e60
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG117_CTRL2    0x0e61
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG117_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG118_CTRL0    0x0e62
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG118_CTRL1    0x0e63
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG118_CTRL2    0x0e64
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG118_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG119_CTRL0    0x0e65
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG119_CTRL1    0x0e66
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG119_CTRL2    0x0e67
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG119_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG120_CTRL0    0x0e68
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG120_CTRL1    0x0e69
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG120_CTRL2    0x0e6a
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG120_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG121_CTRL0    0x0e6b
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG121_CTRL1    0x0e6c
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG121_CTRL2    0x0e6d
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG121_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG122_CTRL0    0x0e6e
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG122_CTRL1    0x0e6f
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG122_CTRL2    0x0e70
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG122_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG123_CTRL0    0x0e71
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG123_CTRL1    0x0e72
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG123_CTRL2    0x0e73
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG123_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG124_CTRL0    0x0e74
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG124_CTRL1    0x0e75
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG124_CTRL2    0x0e76
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG124_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG125_CTRL0    0x0e77
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG125_CTRL1    0x0e78
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG125_CTRL2    0x0e79
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG125_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG126_CTRL0    0x0e7a
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG126_CTRL1    0x0e7b
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG126_CTRL2    0x0e7c
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG126_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG127_CTRL0    0x0e7d
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL0_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL0_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_C2SCFG127_CTRL1    0x0e7e
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL1_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_SVLAN_C2SCFG127_CTRL2    0x0e7f
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL2_OFFSET    0
+#define    RTL8367B_SVLAN_C2SCFG127_CTRL2_MASK    0x1FFF
+
+#define    RTL8367B_REG_SVLAN_CFG    0x0e80
+#define    RTL8367B_VS_PORT7_DMACVIDSEL_OFFSET    14
+#define    RTL8367B_VS_PORT7_DMACVIDSEL_MASK    0x4000
+#define    RTL8367B_VS_PORT6_DMACVIDSEL_OFFSET    13
+#define    RTL8367B_VS_PORT6_DMACVIDSEL_MASK    0x2000
+#define    RTL8367B_VS_PORT5_DMACVIDSEL_OFFSET    12
+#define    RTL8367B_VS_PORT5_DMACVIDSEL_MASK    0x1000
+#define    RTL8367B_VS_PORT4_DMACVIDSEL_OFFSET    11
+#define    RTL8367B_VS_PORT4_DMACVIDSEL_MASK    0x800
+#define    RTL8367B_VS_PORT3_DMACVIDSEL_OFFSET    10
+#define    RTL8367B_VS_PORT3_DMACVIDSEL_MASK    0x400
+#define    RTL8367B_VS_PORT2_DMACVIDSEL_OFFSET    9
+#define    RTL8367B_VS_PORT2_DMACVIDSEL_MASK    0x200
+#define    RTL8367B_VS_PORT1_DMACVIDSEL_OFFSET    8
+#define    RTL8367B_VS_PORT1_DMACVIDSEL_MASK    0x100
+#define    RTL8367B_VS_PORT0_DMACVIDSEL_OFFSET    7
+#define    RTL8367B_VS_PORT0_DMACVIDSEL_MASK    0x80
+#define    RTL8367B_VS_UIFSEG_OFFSET    6
+#define    RTL8367B_VS_UIFSEG_MASK    0x40
+#define    RTL8367B_VS_UNMAT_OFFSET    4
+#define    RTL8367B_VS_UNMAT_MASK    0x30
+#define    RTL8367B_VS_UNTAG_OFFSET    2
+#define    RTL8367B_VS_UNTAG_MASK    0xC
+#define    RTL8367B_VS_SPRISEL_OFFSET    0
+#define    RTL8367B_VS_SPRISEL_MASK    0x3
+
+#define    RTL8367B_REG_SVLAN_PORTBASED_SVIDX_CTRL0    0x0e81
+#define    RTL8367B_VS_PORT1_SVIDX_OFFSET    8
+#define    RTL8367B_VS_PORT1_SVIDX_MASK    0x3F00
+#define    RTL8367B_VS_PORT0_SVIDX_OFFSET    0
+#define    RTL8367B_VS_PORT0_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_PORTBASED_SVIDX_CTRL1    0x0e82
+#define    RTL8367B_VS_PORT3_SVIDX_OFFSET    8
+#define    RTL8367B_VS_PORT3_SVIDX_MASK    0x3F00
+#define    RTL8367B_VS_PORT2_SVIDX_OFFSET    0
+#define    RTL8367B_VS_PORT2_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_PORTBASED_SVIDX_CTRL2    0x0e83
+#define    RTL8367B_VS_PORT5_SVIDX_OFFSET    8
+#define    RTL8367B_VS_PORT5_SVIDX_MASK    0x3F00
+#define    RTL8367B_VS_PORT4_SVIDX_OFFSET    0
+#define    RTL8367B_VS_PORT4_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_PORTBASED_SVIDX_CTRL3    0x0e84
+#define    RTL8367B_VS_PORT7_SVIDX_OFFSET    8
+#define    RTL8367B_VS_PORT7_SVIDX_MASK    0x3F00
+#define    RTL8367B_VS_PORT6_SVIDX_OFFSET    0
+#define    RTL8367B_VS_PORT6_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_UNTAG_UNMAT_CFG    0x0e85
+#define    RTL8367B_VS_UNTAG_SVIDX_OFFSET    8
+#define    RTL8367B_VS_UNTAG_SVIDX_MASK    0x3F00
+#define    RTL8367B_VS_UNMAT_SVIDX_OFFSET    0
+#define    RTL8367B_VS_UNMAT_SVIDX_MASK    0x3F
+
+#define    RTL8367B_REG_SVLAN_DUMMY_0    0x0e90
+
+#define    RTL8367B_REG_SVLAN_DUMMY_1    0x0e91
+
+#define    RTL8367B_REG_SVLAN_DUMMY_2    0x0e92
+
+#define    RTL8367B_REG_SVLAN_DUMMY_3    0x0e93
+
+#define    RTL8367B_REG_SVLAN_DUMMY_4    0x0e94
+
+#define    RTL8367B_REG_SVLAN_DUMMY_5    0x0e95
+
+#define    RTL8367B_REG_SVLAN_DUMMY_6    0x0e96
+
+#define    RTL8367B_REG_SVLAN_DUMMY_7    0x0e97
+
+#define    RTL8367B_REG_SVLAN_DUMMY_8    0x0e98
+
+#define    RTL8367B_REG_SVLAN_DUMMY_9    0x0e99
+
+#define    RTL8367B_REG_SVLAN_DUMMY_10    0x0e9a
+
+#define    RTL8367B_REG_SVLAN_DUMMY_11    0x0e9b
+
+#define    RTL8367B_REG_SVLAN_DUMMY_12    0x0e9c
+
+#define    RTL8367B_REG_SVLAN_DUMMY_13    0x0e9d
+
+#define    RTL8367B_REG_SVLAN_DUMMY_14    0x0e9e
+
+#define    RTL8367B_REG_SVLAN_DUMMY_15    0x0e9f
+
+#define    RTL8367B_REG_SVLAN_DUMMY_16    0x0ea0
+
+#define    RTL8367B_REG_SVLAN_DUMMY_17    0x0ea1
+
+#define    RTL8367B_REG_SVLAN_DUMMY_18    0x0ea2
+
+#define    RTL8367B_REG_SVLAN_DUMMY_19    0x0ea3
+
+#define    RTL8367B_REG_SVLAN_DUMMY_20    0x0ea4
+
+#define    RTL8367B_REG_SVLAN_DUMMY_21    0x0ea5
+
+#define    RTL8367B_REG_SVLAN_DUMMY_22    0x0ea6
+
+#define    RTL8367B_REG_SVLAN_DUMMY_23    0x0ea7
+
+#define    RTL8367B_REG_SVLAN_DUMMY_24    0x0ea8
+
+#define    RTL8367B_REG_SVLAN_DUMMY_25    0x0ea9
+
+#define    RTL8367B_REG_SVLAN_DUMMY_26    0x0eaa
+
+#define    RTL8367B_REG_SVLAN_DUMMY_27    0x0eab
+
+#define    RTL8367B_REG_SVLAN_DUMMY_28    0x0eac
+
+#define    RTL8367B_REG_SVLAN_DUMMY_29    0x0ead
+
+#define    RTL8367B_REG_SVLAN_DUMMY_30    0x0eae
+
+#define    RTL8367B_REG_SVLAN_DUMMY_31    0x0eaf
+
+/* (16'h0f00)hsactrl_reg */
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY0_CTRL0    0x0f00
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY0_CTRL1    0x0f01
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY0_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY1_CTRL0    0x0f02
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY1_CTRL1    0x0f03
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY1_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY2_CTRL0    0x0f04
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY2_CTRL1    0x0f05
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY2_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY3_CTRL0    0x0f06
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY3_CTRL1    0x0f07
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY3_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY4_CTRL0    0x0f08
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY4_CTRL1    0x0f09
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY4_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY5_CTRL0    0x0f0a
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY5_CTRL1    0x0f0b
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY5_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY6_CTRL0    0x0f0c
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY6_CTRL1    0x0f0d
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY6_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY7_CTRL0    0x0f0e
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY7_CTRL1    0x0f0f
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY7_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY8_CTRL0    0x0f10
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY8_CTRL1    0x0f11
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY8_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY9_CTRL0    0x0f12
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY9_CTRL1    0x0f13
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY9_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY10_CTRL0    0x0f14
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY10_CTRL1    0x0f15
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY10_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY11_CTRL0    0x0f16
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY11_CTRL1    0x0f17
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY11_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY12_CTRL0    0x0f18
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY12_CTRL1    0x0f19
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY12_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY13_CTRL0    0x0f1a
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY13_CTRL1    0x0f1b
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY13_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY14_CTRL0    0x0f1c
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY14_CTRL1    0x0f1d
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY14_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY15_CTRL0    0x0f1e
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY15_CTRL1    0x0f1f
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY15_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY16_CTRL0    0x0f20
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY16_CTRL1    0x0f21
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY16_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY17_CTRL0    0x0f22
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY17_CTRL1    0x0f23
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY17_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY18_CTRL0    0x0f24
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY18_CTRL1    0x0f25
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY18_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY19_CTRL0    0x0f26
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY19_CTRL1    0x0f27
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY19_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY20_CTRL0    0x0f28
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY20_CTRL1    0x0f29
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY20_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY21_CTRL0    0x0f2a
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY21_CTRL1    0x0f2b
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY21_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY22_CTRL0    0x0f2c
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY22_CTRL1    0x0f2d
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY22_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY23_CTRL0    0x0f2e
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY23_CTRL1    0x0f2f
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY23_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY24_CTRL0    0x0f30
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY24_CTRL1    0x0f31
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY24_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY25_CTRL0    0x0f32
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY25_CTRL1    0x0f33
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY25_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY26_CTRL0    0x0f34
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY26_CTRL1    0x0f35
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY26_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY27_CTRL0    0x0f36
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY27_CTRL1    0x0f37
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY27_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY28_CTRL0    0x0f38
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY28_CTRL1    0x0f39
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY28_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY29_CTRL0    0x0f3a
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY29_CTRL1    0x0f3b
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY29_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY30_CTRL0    0x0f3c
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY30_CTRL1    0x0f3d
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY30_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY31_CTRL0    0x0f3e
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY31_CTRL1    0x0f3f
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY31_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY32_CTRL0    0x0f40
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY32_CTRL1    0x0f41
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY32_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY33_CTRL0    0x0f42
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY33_CTRL1    0x0f43
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY33_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY34_CTRL0    0x0f44
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY34_CTRL1    0x0f45
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY34_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY35_CTRL0    0x0f46
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY35_CTRL1    0x0f47
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY35_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY36_CTRL0    0x0f48
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY36_CTRL1    0x0f49
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY36_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY37_CTRL0    0x0f4a
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY37_CTRL1    0x0f4b
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY37_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY38_CTRL0    0x0f4c
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY38_CTRL1    0x0f4d
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY38_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY39_CTRL0    0x0f4e
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY39_CTRL1    0x0f4f
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY39_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY40_CTRL0    0x0f50
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY40_CTRL1    0x0f51
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY40_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY41_CTRL0    0x0f52
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY41_CTRL1    0x0f53
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY41_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY42_CTRL0    0x0f54
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY42_CTRL1    0x0f55
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY42_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY43_CTRL0    0x0f56
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY43_CTRL1    0x0f57
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY43_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY44_CTRL0    0x0f58
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY44_CTRL1    0x0f59
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY44_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY45_CTRL0    0x0f5a
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY45_CTRL1    0x0f5b
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY45_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY46_CTRL0    0x0f5c
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY46_CTRL1    0x0f5d
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY46_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY47_CTRL0    0x0f5e
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY47_CTRL1    0x0f5f
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY47_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY48_CTRL0    0x0f60
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY48_CTRL1    0x0f61
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY48_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY49_CTRL0    0x0f62
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY49_CTRL1    0x0f63
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY49_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY50_CTRL0    0x0f64
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY50_CTRL1    0x0f65
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY50_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY51_CTRL0    0x0f66
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY51_CTRL1    0x0f67
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY51_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY52_CTRL0    0x0f68
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY52_CTRL1    0x0f69
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY52_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY53_CTRL0    0x0f6a
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY53_CTRL1    0x0f6b
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY53_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY54_CTRL0    0x0f6c
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY54_CTRL1    0x0f6d
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY54_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY55_CTRL0    0x0f6e
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY55_CTRL1    0x0f6f
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY55_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY56_CTRL0    0x0f70
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY56_CTRL1    0x0f71
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY56_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY57_CTRL0    0x0f72
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY57_CTRL1    0x0f73
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY57_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY58_CTRL0    0x0f74
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY58_CTRL1    0x0f75
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY58_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY59_CTRL0    0x0f76
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY59_CTRL1    0x0f77
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY59_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY60_CTRL0    0x0f78
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY60_CTRL1    0x0f79
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY60_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY61_CTRL0    0x0f7a
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY61_CTRL1    0x0f7b
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY61_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY62_CTRL0    0x0f7c
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY62_CTRL1    0x0f7d
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY62_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY63_CTRL0    0x0f7e
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY63_CTRL1    0x0f7f
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY63_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY64_CTRL0    0x0f80
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY64_CTRL1    0x0f81
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY64_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY65_CTRL0    0x0f82
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY65_CTRL1    0x0f83
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY65_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY66_CTRL0    0x0f84
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY66_CTRL1    0x0f85
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY66_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY67_CTRL0    0x0f86
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY67_CTRL1    0x0f87
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY67_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY68_CTRL0    0x0f88
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY68_CTRL1    0x0f89
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY68_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY69_CTRL0    0x0f8a
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY69_CTRL1    0x0f8b
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY69_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY70_CTRL0    0x0f8c
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY70_CTRL1    0x0f8d
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY70_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY71_CTRL0    0x0f8e
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY71_CTRL1    0x0f8f
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY71_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY72_CTRL0    0x0f90
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY72_CTRL1    0x0f91
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY72_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY73_CTRL0    0x0f92
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY73_CTRL1    0x0f93
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY73_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY74_CTRL0    0x0f94
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY74_CTRL1    0x0f95
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY74_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY75_CTRL0    0x0f96
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY75_CTRL1    0x0f97
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY75_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY76_CTRL0    0x0f98
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY76_CTRL1    0x0f99
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY76_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY77_CTRL0    0x0f9a
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY77_CTRL1    0x0f9b
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY77_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY78_CTRL0    0x0f9c
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY78_CTRL1    0x0f9d
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY78_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY79_CTRL0    0x0f9e
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY79_CTRL1    0x0f9f
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY79_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY80_CTRL0    0x0fa0
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY80_CTRL1    0x0fa1
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY80_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY81_CTRL0    0x0fa2
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY81_CTRL1    0x0fa3
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY81_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY82_CTRL0    0x0fa4
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY82_CTRL1    0x0fa5
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY82_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY83_CTRL0    0x0fa6
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY83_CTRL1    0x0fa7
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY83_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY84_CTRL0    0x0fa8
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY84_CTRL1    0x0fa9
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY84_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY85_CTRL0    0x0faa
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY85_CTRL1    0x0fab
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY85_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY86_CTRL0    0x0fac
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY86_CTRL1    0x0fad
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY86_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY87_CTRL0    0x0fae
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY87_CTRL1    0x0faf
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY87_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY88_CTRL0    0x0fb0
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY88_CTRL1    0x0fb1
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY88_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY89_CTRL0    0x0fb2
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY89_CTRL1    0x0fb3
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY89_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY90_CTRL0    0x0fb4
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY90_CTRL1    0x0fb5
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY90_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY91_CTRL0    0x0fb6
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY91_CTRL1    0x0fb7
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY91_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY92_CTRL0    0x0fb8
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY92_CTRL1    0x0fb9
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY92_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY93_CTRL0    0x0fba
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY93_CTRL1    0x0fbb
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY93_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY94_CTRL0    0x0fbc
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY94_CTRL1    0x0fbd
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY94_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY95_CTRL0    0x0fbe
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY95_CTRL1    0x0fbf
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY95_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY96_CTRL0    0x0fc0
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY96_CTRL1    0x0fc1
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY96_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY97_CTRL0    0x0fc2
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY97_CTRL1    0x0fc3
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY97_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY98_CTRL0    0x0fc4
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY98_CTRL1    0x0fc5
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY98_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY99_CTRL0    0x0fc6
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY99_CTRL1    0x0fc7
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY99_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY100_CTRL0    0x0fc8
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY100_CTRL1    0x0fc9
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY100_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY101_CTRL0    0x0fca
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY101_CTRL1    0x0fcb
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY101_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY102_CTRL0    0x0fcc
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY102_CTRL1    0x0fcd
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY102_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY103_CTRL0    0x0fce
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY103_CTRL1    0x0fcf
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY103_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY104_CTRL0    0x0fd0
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY104_CTRL1    0x0fd1
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY104_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY105_CTRL0    0x0fd2
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY105_CTRL1    0x0fd3
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY105_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY106_CTRL0    0x0fd4
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY106_CTRL1    0x0fd5
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY106_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY107_CTRL0    0x0fd6
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY107_CTRL1    0x0fd7
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY107_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY108_CTRL0    0x0fd8
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY108_CTRL1    0x0fd9
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY108_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY109_CTRL0    0x0fda
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY109_CTRL1    0x0fdb
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY109_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY110_CTRL0    0x0fdc
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY110_CTRL1    0x0fdd
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY110_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY111_CTRL0    0x0fde
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY111_CTRL1    0x0fdf
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY111_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY112_CTRL0    0x0fe0
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY112_CTRL1    0x0fe1
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY112_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY113_CTRL0    0x0fe2
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY113_CTRL1    0x0fe3
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY113_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY114_CTRL0    0x0fe4
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY114_CTRL1    0x0fe5
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY114_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY115_CTRL0    0x0fe6
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY115_CTRL1    0x0fe7
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY115_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY116_CTRL0    0x0fe8
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY116_CTRL1    0x0fe9
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY116_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY117_CTRL0    0x0fea
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY117_CTRL1    0x0feb
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY117_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY118_CTRL0    0x0fec
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY118_CTRL1    0x0fed
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY118_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY119_CTRL0    0x0fee
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY119_CTRL1    0x0fef
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY119_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY120_CTRL0    0x0ff0
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY120_CTRL1    0x0ff1
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY120_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY121_CTRL0    0x0ff2
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY121_CTRL1    0x0ff3
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY121_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY122_CTRL0    0x0ff4
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY122_CTRL1    0x0ff5
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY122_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY123_CTRL0    0x0ff6
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY123_CTRL1    0x0ff7
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY123_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY124_CTRL0    0x0ff8
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY124_CTRL1    0x0ff9
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY124_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY125_CTRL0    0x0ffa
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY125_CTRL1    0x0ffb
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY125_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY126_CTRL0    0x0ffc
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY126_CTRL1    0x0ffd
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY126_CTRL1_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY127_CTRL0    0x0ffe
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL0_SVIDX_OFFSET    3
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL0_SVIDX_MASK    0x1F8
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL0_DST_PORT_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL0_DST_PORT_MASK    0x7
+
+#define    RTL8367B_REG_SVLAN_SP2C_ENTRY127_CTRL1    0x0fff
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL1_VALID_OFFSET    12
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL1_VALID_MASK    0x1000
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL1_VID_OFFSET    0
+#define    RTL8367B_SVLAN_SP2C_ENTRY127_CTRL1_VID_MASK    0xFFF
+
+/* (16'h1000)mib_reg */
+
+#define    RTL8367B_REG_MIB_COUNTER0    0x1000
+
+#define    RTL8367B_REG_MIB_COUNTER1    0x1001
+
+#define    RTL8367B_REG_MIB_COUNTER2    0x1002
+
+#define    RTL8367B_REG_MIB_COUNTER3    0x1003
+
+#define    RTL8367B_REG_MIB_ADDRESS    0x1004
+#define    RTL8367B_MIB_ADDRESS_OFFSET    0
+#define    RTL8367B_MIB_ADDRESS_MASK    0x1FF
+
+#define    RTL8367B_REG_MIB_CTRL0    0x1005
+#define    RTL8367B_RESET_VALUE_OFFSET    12
+#define    RTL8367B_RESET_VALUE_MASK    0x1000
+#define    RTL8367B_GLOBAL_RESET_OFFSET    11
+#define    RTL8367B_GLOBAL_RESET_MASK    0x800
+#define    RTL8367B_QM_RESET_OFFSET    10
+#define    RTL8367B_QM_RESET_MASK    0x400
+#define    RTL8367B_PORT7_RESET_OFFSET    9
+#define    RTL8367B_PORT7_RESET_MASK    0x200
+#define    RTL8367B_PORT6_RESET_OFFSET    8
+#define    RTL8367B_PORT6_RESET_MASK    0x100
+#define    RTL8367B_PORT5_RESET_OFFSET    7
+#define    RTL8367B_PORT5_RESET_MASK    0x80
+#define    RTL8367B_PORT4_RESET_OFFSET    6
+#define    RTL8367B_PORT4_RESET_MASK    0x40
+#define    RTL8367B_PORT3_RESET_OFFSET    5
+#define    RTL8367B_PORT3_RESET_MASK    0x20
+#define    RTL8367B_PORT2_RESET_OFFSET    4
+#define    RTL8367B_PORT2_RESET_MASK    0x10
+#define    RTL8367B_PORT1_RESET_OFFSET    3
+#define    RTL8367B_PORT1_RESET_MASK    0x8
+#define    RTL8367B_PORT0_RESET_OFFSET    2
+#define    RTL8367B_PORT0_RESET_MASK    0x4
+#define    RTL8367B_RESET_FLAG_OFFSET    1
+#define    RTL8367B_RESET_FLAG_MASK    0x2
+#define    RTL8367B_MIB_CTRL0_BUSY_FLAG_OFFSET    0
+#define    RTL8367B_MIB_CTRL0_BUSY_FLAG_MASK    0x1
+
+#define    RTL8367B_REG_MIB_CTRL1    0x1007
+#define    RTL8367B_COUNTER15_RESET_OFFSET    15
+#define    RTL8367B_COUNTER15_RESET_MASK    0x8000
+#define    RTL8367B_COUNTER14_RESET_OFFSET    14
+#define    RTL8367B_COUNTER14_RESET_MASK    0x4000
+#define    RTL8367B_COUNTER13_RESET_OFFSET    13
+#define    RTL8367B_COUNTER13_RESET_MASK    0x2000
+#define    RTL8367B_COUNTER12_RESET_OFFSET    12
+#define    RTL8367B_COUNTER12_RESET_MASK    0x1000
+#define    RTL8367B_COUNTER11_RESET_OFFSET    11
+#define    RTL8367B_COUNTER11_RESET_MASK    0x800
+#define    RTL8367B_COUNTER10_RESET_OFFSET    10
+#define    RTL8367B_COUNTER10_RESET_MASK    0x400
+#define    RTL8367B_COUNTER9_RESET_OFFSET    9
+#define    RTL8367B_COUNTER9_RESET_MASK    0x200
+#define    RTL8367B_COUNTER8_RESET_OFFSET    8
+#define    RTL8367B_COUNTER8_RESET_MASK    0x100
+#define    RTL8367B_COUNTER7_RESET_OFFSET    7
+#define    RTL8367B_COUNTER7_RESET_MASK    0x80
+#define    RTL8367B_COUNTER6_RESET_OFFSET    6
+#define    RTL8367B_COUNTER6_RESET_MASK    0x40
+#define    RTL8367B_COUNTER5_RESET_OFFSET    5
+#define    RTL8367B_COUNTER5_RESET_MASK    0x20
+#define    RTL8367B_COUNTER4_RESET_OFFSET    4
+#define    RTL8367B_COUNTER4_RESET_MASK    0x10
+#define    RTL8367B_COUNTER3_RESET_OFFSET    3
+#define    RTL8367B_COUNTER3_RESET_MASK    0x8
+#define    RTL8367B_COUNTER2_RESET_OFFSET    2
+#define    RTL8367B_COUNTER2_RESET_MASK    0x4
+#define    RTL8367B_COUNTER1_RESET_OFFSET    1
+#define    RTL8367B_COUNTER1_RESET_MASK    0x2
+#define    RTL8367B_COUNTER0_RESET_OFFSET    0
+#define    RTL8367B_COUNTER0_RESET_MASK    0x1
+
+#define    RTL8367B_REG_MIB_CTRL2    0x1008
+#define    RTL8367B_COUNTER31_RESET_OFFSET    15
+#define    RTL8367B_COUNTER31_RESET_MASK    0x8000
+#define    RTL8367B_COUNTER30_RESET_OFFSET    14
+#define    RTL8367B_COUNTER30_RESET_MASK    0x4000
+#define    RTL8367B_COUNTER29_RESET_OFFSET    13
+#define    RTL8367B_COUNTER29_RESET_MASK    0x2000
+#define    RTL8367B_COUNTER28_RESET_OFFSET    12
+#define    RTL8367B_COUNTER28_RESET_MASK    0x1000
+#define    RTL8367B_COUNTER27_RESET_OFFSET    11
+#define    RTL8367B_COUNTER27_RESET_MASK    0x800
+#define    RTL8367B_COUNTER26_RESET_OFFSET    10
+#define    RTL8367B_COUNTER26_RESET_MASK    0x400
+#define    RTL8367B_COUNTER25_RESET_OFFSET    9
+#define    RTL8367B_COUNTER25_RESET_MASK    0x200
+#define    RTL8367B_COUNTER24_RESET_OFFSET    8
+#define    RTL8367B_COUNTER24_RESET_MASK    0x100
+#define    RTL8367B_COUNTER23_RESET_OFFSET    7
+#define    RTL8367B_COUNTER23_RESET_MASK    0x80
+#define    RTL8367B_COUNTER22_RESET_OFFSET    6
+#define    RTL8367B_COUNTER22_RESET_MASK    0x40
+#define    RTL8367B_COUNTER21_RESET_OFFSET    5
+#define    RTL8367B_COUNTER21_RESET_MASK    0x20
+#define    RTL8367B_COUNTER20_RESET_OFFSET    4
+#define    RTL8367B_COUNTER20_RESET_MASK    0x10
+#define    RTL8367B_COUNTER19_RESET_OFFSET    3
+#define    RTL8367B_COUNTER19_RESET_MASK    0x8
+#define    RTL8367B_COUNTER18_RESET_OFFSET    2
+#define    RTL8367B_COUNTER18_RESET_MASK    0x4
+#define    RTL8367B_COUNTER17_RESET_OFFSET    1
+#define    RTL8367B_COUNTER17_RESET_MASK    0x2
+#define    RTL8367B_COUNTER16_RESET_OFFSET    0
+#define    RTL8367B_COUNTER16_RESET_MASK    0x1
+
+#define    RTL8367B_REG_MIB_CTRL3    0x1009
+#define    RTL8367B_COUNTER15_MODE_OFFSET    15
+#define    RTL8367B_COUNTER15_MODE_MASK    0x8000
+#define    RTL8367B_COUNTER14_MODE_OFFSET    14
+#define    RTL8367B_COUNTER14_MODE_MASK    0x4000
+#define    RTL8367B_COUNTER13_MODE_OFFSET    13
+#define    RTL8367B_COUNTER13_MODE_MASK    0x2000
+#define    RTL8367B_COUNTER12_MODE_OFFSET    12
+#define    RTL8367B_COUNTER12_MODE_MASK    0x1000
+#define    RTL8367B_COUNTER11_MODE_OFFSET    11
+#define    RTL8367B_COUNTER11_MODE_MASK    0x800
+#define    RTL8367B_COUNTER10_MODE_OFFSET    10
+#define    RTL8367B_COUNTER10_MODE_MASK    0x400
+#define    RTL8367B_COUNTER9_MODE_OFFSET    9
+#define    RTL8367B_COUNTER9_MODE_MASK    0x200
+#define    RTL8367B_COUNTER8_MODE_OFFSET    8
+#define    RTL8367B_COUNTER8_MODE_MASK    0x100
+#define    RTL8367B_COUNTER7_MODE_OFFSET    7
+#define    RTL8367B_COUNTER7_MODE_MASK    0x80
+#define    RTL8367B_COUNTER6_MODE_OFFSET    6
+#define    RTL8367B_COUNTER6_MODE_MASK    0x40
+#define    RTL8367B_COUNTER5_MODE_OFFSET    5
+#define    RTL8367B_COUNTER5_MODE_MASK    0x20
+#define    RTL8367B_COUNTER4_MODE_OFFSET    4
+#define    RTL8367B_COUNTER4_MODE_MASK    0x10
+#define    RTL8367B_COUNTER3_MODE_OFFSET    3
+#define    RTL8367B_COUNTER3_MODE_MASK    0x8
+#define    RTL8367B_COUNTER2_MODE_OFFSET    2
+#define    RTL8367B_COUNTER2_MODE_MASK    0x4
+#define    RTL8367B_COUNTER1_MODE_OFFSET    1
+#define    RTL8367B_COUNTER1_MODE_MASK    0x2
+#define    RTL8367B_COUNTER0_MODE_OFFSET    0
+#define    RTL8367B_COUNTER0_MODE_MASK    0x1
+
+#define    RTL8367B_REG_MIB_CTRL4    0x100a
+#define    RTL8367B_MIB_USAGE_MODE_OFFSET    8
+#define    RTL8367B_MIB_USAGE_MODE_MASK    0x100
+#define    RTL8367B_MIB_TIMER_OFFSET    0
+#define    RTL8367B_MIB_TIMER_MASK    0xFF
+
+#define    RTL8367B_REG_MIB_CTRL5    0x100b
+#define    RTL8367B_MIB_CTRL5_COUNTER15_TYPE_OFFSET    15
+#define    RTL8367B_MIB_CTRL5_COUNTER15_TYPE_MASK    0x8000
+#define    RTL8367B_MIB_CTRL5_COUNTER14_TYPE_OFFSET    14
+#define    RTL8367B_MIB_CTRL5_COUNTER14_TYPE_MASK    0x4000
+#define    RTL8367B_MIB_CTRL5_COUNTER13_TYPE_OFFSET    13
+#define    RTL8367B_MIB_CTRL5_COUNTER13_TYPE_MASK    0x2000
+#define    RTL8367B_MIB_CTRL5_COUNTER12_TYPE_OFFSET    12
+#define    RTL8367B_MIB_CTRL5_COUNTER12_TYPE_MASK    0x1000
+#define    RTL8367B_MIB_CTRL5_COUNTER11_TYPE_OFFSET    11
+#define    RTL8367B_MIB_CTRL5_COUNTER11_TYPE_MASK    0x800
+#define    RTL8367B_MIB_CTRL5_COUNTER10_TYPE_OFFSET    10
+#define    RTL8367B_MIB_CTRL5_COUNTER10_TYPE_MASK    0x400
+#define    RTL8367B_MIB_CTRL5_COUNTER9_TYPE_OFFSET    9
+#define    RTL8367B_MIB_CTRL5_COUNTER9_TYPE_MASK    0x200
+#define    RTL8367B_MIB_CTRL5_COUNTER8_TYPE_OFFSET    8
+#define    RTL8367B_MIB_CTRL5_COUNTER8_TYPE_MASK    0x100
+#define    RTL8367B_MIB_CTRL5_COUNTER7_TYPE_OFFSET    7
+#define    RTL8367B_MIB_CTRL5_COUNTER7_TYPE_MASK    0x80
+#define    RTL8367B_MIB_CTRL5_COUNTER6_TYPE_OFFSET    6
+#define    RTL8367B_MIB_CTRL5_COUNTER6_TYPE_MASK    0x40
+#define    RTL8367B_MIB_CTRL5_COUNTER5_TYPE_OFFSET    5
+#define    RTL8367B_MIB_CTRL5_COUNTER5_TYPE_MASK    0x20
+#define    RTL8367B_MIB_CTRL5_COUNTER4_TYPE_OFFSET    4
+#define    RTL8367B_MIB_CTRL5_COUNTER4_TYPE_MASK    0x10
+#define    RTL8367B_MIB_CTRL5_COUNTER3_TYPE_OFFSET    3
+#define    RTL8367B_MIB_CTRL5_COUNTER3_TYPE_MASK    0x8
+#define    RTL8367B_MIB_CTRL5_COUNTER2_TYPE_OFFSET    2
+#define    RTL8367B_MIB_CTRL5_COUNTER2_TYPE_MASK    0x4
+#define    RTL8367B_MIB_CTRL5_COUNTER1_TYPE_OFFSET    1
+#define    RTL8367B_MIB_CTRL5_COUNTER1_TYPE_MASK    0x2
+#define    RTL8367B_MIB_CTRL5_COUNTER0_TYPE_OFFSET    0
+#define    RTL8367B_MIB_CTRL5_COUNTER0_TYPE_MASK    0x1
+
+/* (16'h1100)intrpt_reg */
+
+#define    RTL8367B_REG_INTR_CTRL    0x1100
+#define    RTL8367B_INTR_CTRL_OFFSET    0
+#define    RTL8367B_INTR_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_INTR_IMR    0x1101
+#define    RTL8367B_INTR_IMR_SLIENT_START_OFFSET    11
+#define    RTL8367B_INTR_IMR_SLIENT_START_MASK    0x800
+#define    RTL8367B_INTR_IMR_UPS_EVENT_OFFSET    10
+#define    RTL8367B_INTR_IMR_UPS_EVENT_MASK    0x400
+#define    RTL8367B_INTR_IMR_ACL_ACTION_OFFSET    9
+#define    RTL8367B_INTR_IMR_ACL_ACTION_MASK    0x200
+#define    RTL8367B_INTR_IMR_CABLE_DIAG_FIN_OFFSET    8
+#define    RTL8367B_INTR_IMR_CABLE_DIAG_FIN_MASK    0x100
+#define    RTL8367B_INTR_IMR_INTERRUPT_8051_OFFSET    7
+#define    RTL8367B_INTR_IMR_INTERRUPT_8051_MASK    0x80
+#define    RTL8367B_INTR_IMR_LOOP_DETECTION_OFFSET    6
+#define    RTL8367B_INTR_IMR_LOOP_DETECTION_MASK    0x40
+#define    RTL8367B_INTR_IMR_GREEN_TIMER_OFFSET    5
+#define    RTL8367B_INTR_IMR_GREEN_TIMER_MASK    0x20
+#define    RTL8367B_INTR_IMR_SPECIAL_CONGEST_OFFSET    4
+#define    RTL8367B_INTR_IMR_SPECIAL_CONGEST_MASK    0x10
+#define    RTL8367B_INTR_IMR_SPEED_CHANGE_OFFSET    3
+#define    RTL8367B_INTR_IMR_SPEED_CHANGE_MASK    0x8
+#define    RTL8367B_INTR_IMR_LEARN_OVER_OFFSET    2
+#define    RTL8367B_INTR_IMR_LEARN_OVER_MASK    0x4
+#define    RTL8367B_INTR_IMR_METER_EXCEEDED_OFFSET    1
+#define    RTL8367B_INTR_IMR_METER_EXCEEDED_MASK    0x2
+#define    RTL8367B_INTR_IMR_LINK_CHANGE_OFFSET    0
+#define    RTL8367B_INTR_IMR_LINK_CHANGE_MASK    0x1
+
+#define    RTL8367B_REG_INTR_IMS    0x1102
+#define    RTL8367B_INTR_IMS_SLIENT_START_OFFSET    11
+#define    RTL8367B_INTR_IMS_SLIENT_START_MASK    0x800
+#define    RTL8367B_INTR_IMS_UPS_EVENT_OFFSET    10
+#define    RTL8367B_INTR_IMS_UPS_EVENT_MASK    0x400
+#define    RTL8367B_INTR_IMS_ACL_ACTION_OFFSET    9
+#define    RTL8367B_INTR_IMS_ACL_ACTION_MASK    0x200
+#define    RTL8367B_INTR_IMS_CABLE_DIAG_FIN_OFFSET    8
+#define    RTL8367B_INTR_IMS_CABLE_DIAG_FIN_MASK    0x100
+#define    RTL8367B_INTR_IMS_INTERRUPT_8051_OFFSET    7
+#define    RTL8367B_INTR_IMS_INTERRUPT_8051_MASK    0x80
+#define    RTL8367B_INTR_IMS_LOOP_DETECTION_OFFSET    6
+#define    RTL8367B_INTR_IMS_LOOP_DETECTION_MASK    0x40
+#define    RTL8367B_INTR_IMS_GREEN_TIMER_OFFSET    5
+#define    RTL8367B_INTR_IMS_GREEN_TIMER_MASK    0x20
+#define    RTL8367B_INTR_IMS_SPECIAL_CONGEST_OFFSET    4
+#define    RTL8367B_INTR_IMS_SPECIAL_CONGEST_MASK    0x10
+#define    RTL8367B_INTR_IMS_SPEED_CHANGE_OFFSET    3
+#define    RTL8367B_INTR_IMS_SPEED_CHANGE_MASK    0x8
+#define    RTL8367B_INTR_IMS_LEARN_OVER_OFFSET    2
+#define    RTL8367B_INTR_IMS_LEARN_OVER_MASK    0x4
+#define    RTL8367B_INTR_IMS_METER_EXCEEDED_OFFSET    1
+#define    RTL8367B_INTR_IMS_METER_EXCEEDED_MASK    0x2
+#define    RTL8367B_INTR_IMS_LINK_CHANGE_OFFSET    0
+#define    RTL8367B_INTR_IMS_LINK_CHANGE_MASK    0x1
+
+#define    RTL8367B_REG_LEARN_OVER_INDICATOR    0x1103
+#define    RTL8367B_LEARN_OVER_INDICATOR_OFFSET    0
+#define    RTL8367B_LEARN_OVER_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_SPEED_CHANGE_INDICATOR    0x1104
+#define    RTL8367B_SPEED_CHANGE_INDICATOR_OFFSET    0
+#define    RTL8367B_SPEED_CHANGE_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_SPECIAL_CONGEST_INDICATOR    0x1105
+#define    RTL8367B_SPECIAL_CONGEST_INDICATOR_OFFSET    0
+#define    RTL8367B_SPECIAL_CONGEST_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_LINKDOWN_INDICATOR    0x1106
+#define    RTL8367B_PORT_LINKDOWN_INDICATOR_OFFSET    0
+#define    RTL8367B_PORT_LINKDOWN_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_LINKUP_INDICATOR    0x1107
+#define    RTL8367B_PORT_LINKUP_INDICATOR_OFFSET    0
+#define    RTL8367B_PORT_LINKUP_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_INTR_IMR_8051    0x1118
+#define    RTL8367B_INTR_IMR_8051_SLIENT_START_OFFSET    12
+#define    RTL8367B_INTR_IMR_8051_SLIENT_START_MASK    0x1000
+#define    RTL8367B_INTR_IMR_8051_UPS_EVENT_OFFSET    11
+#define    RTL8367B_INTR_IMR_8051_UPS_EVENT_MASK    0x800
+#define    RTL8367B_INTR_IMR_8051_ACL_ACTION_OFFSET    10
+#define    RTL8367B_INTR_IMR_8051_ACL_ACTION_MASK    0x400
+#define    RTL8367B_INTR_IMR_8051_SAMOVING_8051_OFFSET    9
+#define    RTL8367B_INTR_IMR_8051_SAMOVING_8051_MASK    0x200
+#define    RTL8367B_INTR_IMR_8051_CABLE_DIAG_FIN_8051_OFFSET    8
+#define    RTL8367B_INTR_IMR_8051_CABLE_DIAG_FIN_8051_MASK    0x100
+#define    RTL8367B_INTR_IMR_8051_EEELLDP_8051_OFFSET    7
+#define    RTL8367B_INTR_IMR_8051_EEELLDP_8051_MASK    0x80
+#define    RTL8367B_INTR_IMR_8051_LOOP_DETECTION_8051_OFFSET    6
+#define    RTL8367B_INTR_IMR_8051_LOOP_DETECTION_8051_MASK    0x40
+#define    RTL8367B_INTR_IMR_8051_GREEN_TIMER_8051_OFFSET    5
+#define    RTL8367B_INTR_IMR_8051_GREEN_TIMER_8051_MASK    0x20
+#define    RTL8367B_INTR_IMR_8051_SPECIAL_CONGEST_8051_OFFSET    4
+#define    RTL8367B_INTR_IMR_8051_SPECIAL_CONGEST_8051_MASK    0x10
+#define    RTL8367B_INTR_IMR_8051_SPEED_CHANGE_8051_OFFSET    3
+#define    RTL8367B_INTR_IMR_8051_SPEED_CHANGE_8051_MASK    0x8
+#define    RTL8367B_INTR_IMR_8051_LEARN_OVER_8051_OFFSET    2
+#define    RTL8367B_INTR_IMR_8051_LEARN_OVER_8051_MASK    0x4
+#define    RTL8367B_INTR_IMR_8051_METER_EXCEEDED_8051_OFFSET    1
+#define    RTL8367B_INTR_IMR_8051_METER_EXCEEDED_8051_MASK    0x2
+#define    RTL8367B_INTR_IMR_8051_LINK_CHANGE_8051_OFFSET    0
+#define    RTL8367B_INTR_IMR_8051_LINK_CHANGE_8051_MASK    0x1
+
+#define    RTL8367B_REG_INTR_IMS_8051    0x1119
+#define    RTL8367B_INTR_IMS_8051_SLIENT_START_OFFSET    12
+#define    RTL8367B_INTR_IMS_8051_SLIENT_START_MASK    0x1000
+#define    RTL8367B_INTR_IMS_8051_UPS_EVENT_OFFSET    11
+#define    RTL8367B_INTR_IMS_8051_UPS_EVENT_MASK    0x800
+#define    RTL8367B_INTR_IMS_8051_ACL_ACTION_OFFSET    10
+#define    RTL8367B_INTR_IMS_8051_ACL_ACTION_MASK    0x400
+#define    RTL8367B_INTR_IMS_8051_SAMOVING_8051_OFFSET    9
+#define    RTL8367B_INTR_IMS_8051_SAMOVING_8051_MASK    0x200
+#define    RTL8367B_INTR_IMS_8051_CABLE_DIAG_FIN_8051_OFFSET    8
+#define    RTL8367B_INTR_IMS_8051_CABLE_DIAG_FIN_8051_MASK    0x100
+#define    RTL8367B_INTR_IMS_8051_EEELLDP_8051_OFFSET    7
+#define    RTL8367B_INTR_IMS_8051_EEELLDP_8051_MASK    0x80
+#define    RTL8367B_INTR_IMS_8051_LOOP_DETECTION_8051_OFFSET    6
+#define    RTL8367B_INTR_IMS_8051_LOOP_DETECTION_8051_MASK    0x40
+#define    RTL8367B_INTR_IMS_8051_GREEN_TIMER_8051_OFFSET    5
+#define    RTL8367B_INTR_IMS_8051_GREEN_TIMER_8051_MASK    0x20
+#define    RTL8367B_INTR_IMS_8051_SPECIAL_CONGEST_8051_OFFSET    4
+#define    RTL8367B_INTR_IMS_8051_SPECIAL_CONGEST_8051_MASK    0x10
+#define    RTL8367B_INTR_IMS_8051_SPEED_CHANGE_8051_OFFSET    3
+#define    RTL8367B_INTR_IMS_8051_SPEED_CHANGE_8051_MASK    0x8
+#define    RTL8367B_INTR_IMS_8051_LEARN_OVER_8051_OFFSET    2
+#define    RTL8367B_INTR_IMS_8051_LEARN_OVER_8051_MASK    0x4
+#define    RTL8367B_INTR_IMS_8051_METER_EXCEEDED_8051_OFFSET    1
+#define    RTL8367B_INTR_IMS_8051_METER_EXCEEDED_8051_MASK    0x2
+#define    RTL8367B_INTR_IMS_8051_LINK_CHANGE_8051_OFFSET    0
+#define    RTL8367B_INTR_IMS_8051_LINK_CHANGE_8051_MASK    0x1
+
+#define    RTL8367B_REG_DW8051_INT_CPU    0x111a
+#define    RTL8367B_DW8051_INT_CPU_OFFSET    0
+#define    RTL8367B_DW8051_INT_CPU_MASK    0x1
+
+#define    RTL8367B_REG_LEARN_OVER_INDICATOR_8051    0x1120
+#define    RTL8367B_LEARN_OVER_INDICATOR_8051_OFFSET    0
+#define    RTL8367B_LEARN_OVER_INDICATOR_8051_MASK    0xFF
+
+#define    RTL8367B_REG_SPEED_CHANGE_INDICATOR_8051    0x1121
+#define    RTL8367B_SPEED_CHANGE_INDICATOR_8051_OFFSET    0
+#define    RTL8367B_SPEED_CHANGE_INDICATOR_8051_MASK    0xFF
+
+#define    RTL8367B_REG_SPECIAL_CONGEST_INDICATOR_8051    0x1122
+#define    RTL8367B_SPECIAL_CONGEST_INDICATOR_8051_OFFSET    0
+#define    RTL8367B_SPECIAL_CONGEST_INDICATOR_8051_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_LINKDOWN_INDICATOR_8051    0x1123
+#define    RTL8367B_PORT_LINKDOWN_INDICATOR_8051_OFFSET    0
+#define    RTL8367B_PORT_LINKDOWN_INDICATOR_8051_MASK    0xFF
+
+#define    RTL8367B_REG_PORT_LINKUP_INDICATOR_8051    0x1124
+#define    RTL8367B_PORT_LINKUP_INDICATOR_8051_OFFSET    0
+#define    RTL8367B_PORT_LINKUP_INDICATOR_8051_MASK    0xFF
+
+/* (16'h1200)swcore_reg */
+
+#define    RTL8367B_REG_MAX_LENGTH_LIMINT_IPG    0x1200
+#define    RTL8367B_MAX_LENTH_CTRL_OFFSET    13
+#define    RTL8367B_MAX_LENTH_CTRL_MASK    0x6000
+#define    RTL8367B_PAGES_BEFORE_FCDROP_OFFSET    6
+#define    RTL8367B_PAGES_BEFORE_FCDROP_MASK    0x1FC0
+#define    RTL8367B_CHECK_MIN_IPG_RXDV_OFFSET    5
+#define    RTL8367B_CHECK_MIN_IPG_RXDV_MASK    0x20
+#define    RTL8367B_LIMIT_IPG_CFG_OFFSET    0
+#define    RTL8367B_LIMIT_IPG_CFG_MASK    0x1F
+
+#define    RTL8367B_REG_IOL_RXDROP_CFG    0x1201
+#define    RTL8367B_RX_IOL_MAX_LENGTH_CFG_OFFSET    13
+#define    RTL8367B_RX_IOL_MAX_LENGTH_CFG_MASK    0x2000
+#define    RTL8367B_RX_IOL_ERROR_LENGTH_CFG_OFFSET    12
+#define    RTL8367B_RX_IOL_ERROR_LENGTH_CFG_MASK    0x1000
+#define    RTL8367B_RX_NODROP_PAUSE_CFG_OFFSET    8
+#define    RTL8367B_RX_NODROP_PAUSE_CFG_MASK    0x100
+#define    RTL8367B_RX_DV_CNT_CFG_OFFSET    0
+#define    RTL8367B_RX_DV_CNT_CFG_MASK    0x3F
+
+#define    RTL8367B_REG_VS_TPID    0x1202
+
+#define    RTL8367B_REG_INBW_BOUND    0x1203
+#define    RTL8367B_HBOUND_OFFSET    4
+#define    RTL8367B_HBOUND_MASK    0xF0
+#define    RTL8367B_LBOUND_OFFSET    0
+#define    RTL8367B_LBOUND_MASK    0xF
+
+#define    RTL8367B_REG_CFG_BACKPRESSURE    0x1207
+#define    RTL8367B_LONGTXE_OFFSET    12
+#define    RTL8367B_LONGTXE_MASK    0x1000
+#define    RTL8367B_EN_BYPASS_ERROR_OFFSET    8
+#define    RTL8367B_EN_BYPASS_ERROR_MASK    0x100
+#define    RTL8367B_EN_BACKPRESSURE_OFFSET    4
+#define    RTL8367B_EN_BACKPRESSURE_MASK    0x10
+#define    RTL8367B_EN_48_PASS_1_OFFSET    0
+#define    RTL8367B_EN_48_PASS_1_MASK    0x1
+
+#define    RTL8367B_REG_CFG_UNHIOL    0x1208
+#define    RTL8367B_IOL_BACKOFF_OFFSET    12
+#define    RTL8367B_IOL_BACKOFF_MASK    0x1000
+#define    RTL8367B_BACKOFF_RANDOM_TIME_OFFSET    8
+#define    RTL8367B_BACKOFF_RANDOM_TIME_MASK    0x100
+#define    RTL8367B_DISABLE_BACK_OFF_OFFSET    4
+#define    RTL8367B_DISABLE_BACK_OFF_MASK    0x10
+#define    RTL8367B_IPG_COMPENSATION_OFFSET    0
+#define    RTL8367B_IPG_COMPENSATION_MASK    0x1
+
+#define    RTL8367B_REG_SWITCH_MAC0    0x1209
+
+#define    RTL8367B_REG_SWITCH_MAC1    0x120a
+
+#define    RTL8367B_REG_SWITCH_MAC2    0x120b
+
+#define    RTL8367B_REG_SWITCH_CTRL0    0x120c
+#define    RTL8367B_REMARKING_DSCP_ENABLE_OFFSET    8
+#define    RTL8367B_REMARKING_DSCP_ENABLE_MASK    0x100
+#define    RTL8367B_SHORT_IPG_OFFSET    4
+#define    RTL8367B_SHORT_IPG_MASK    0x10
+#define    RTL8367B_PAUSE_MAX128_OFFSET    0
+#define    RTL8367B_PAUSE_MAX128_MASK    0x1
+
+#define    RTL8367B_REG_QOS_DSCP_REMARK_CTRL0    0x120d
+#define    RTL8367B_INTPRI1_DSCP_OFFSET    8
+#define    RTL8367B_INTPRI1_DSCP_MASK    0x3F00
+#define    RTL8367B_INTPRI0_DSCP_OFFSET    0
+#define    RTL8367B_INTPRI0_DSCP_MASK    0x3F
+
+#define    RTL8367B_REG_QOS_DSCP_REMARK_CTRL1    0x120e
+#define    RTL8367B_INTPRI3_DSCP_OFFSET    8
+#define    RTL8367B_INTPRI3_DSCP_MASK    0x3F00
+#define    RTL8367B_INTPRI2_DSCP_OFFSET    0
+#define    RTL8367B_INTPRI2_DSCP_MASK    0x3F
+
+#define    RTL8367B_REG_QOS_DSCP_REMARK_CTRL2    0x120f
+#define    RTL8367B_INTPRI5_DSCP_OFFSET    8
+#define    RTL8367B_INTPRI5_DSCP_MASK    0x3F00
+#define    RTL8367B_INTPRI4_DSCP_OFFSET    0
+#define    RTL8367B_INTPRI4_DSCP_MASK    0x3F
+
+#define    RTL8367B_REG_QOS_DSCP_REMARK_CTRL3    0x1210
+#define    RTL8367B_INTPRI7_DSCP_OFFSET    8
+#define    RTL8367B_INTPRI7_DSCP_MASK    0x3F00
+#define    RTL8367B_INTPRI6_DSCP_OFFSET    0
+#define    RTL8367B_INTPRI6_DSCP_MASK    0x3F
+
+#define    RTL8367B_REG_QOS_1Q_REMARK_CTRL0    0x1211
+#define    RTL8367B_INTPRI3_PRI_OFFSET    12
+#define    RTL8367B_INTPRI3_PRI_MASK    0x7000
+#define    RTL8367B_INTPRI2_PRI_OFFSET    8
+#define    RTL8367B_INTPRI2_PRI_MASK    0x700
+#define    RTL8367B_INTPRI1_PRI_OFFSET    4
+#define    RTL8367B_INTPRI1_PRI_MASK    0x70
+#define    RTL8367B_INTPRI0_PRI_OFFSET    0
+#define    RTL8367B_INTPRI0_PRI_MASK    0x7
+
+#define    RTL8367B_REG_QOS_1Q_REMARK_CTRL1    0x1212
+#define    RTL8367B_INTPRI7_PRI_OFFSET    12
+#define    RTL8367B_INTPRI7_PRI_MASK    0x7000
+#define    RTL8367B_INTPRI6_PRI_OFFSET    8
+#define    RTL8367B_INTPRI6_PRI_MASK    0x700
+#define    RTL8367B_INTPRI5_PRI_OFFSET    4
+#define    RTL8367B_INTPRI5_PRI_MASK    0x70
+#define    RTL8367B_INTPRI4_PRI_OFFSET    0
+#define    RTL8367B_INTPRI4_PRI_MASK    0x7
+
+#define    RTL8367B_REG_PKTGEN_COMMAND    0x1213
+#define    RTL8367B_PKTGEN_STOP_OFFSET    8
+#define    RTL8367B_PKTGEN_STOP_MASK    0x100
+#define    RTL8367B_PKTGEN_START_OFFSET    4
+#define    RTL8367B_PKTGEN_START_MASK    0x10
+#define    RTL8367B_PKTGEN_BYPASS_FLOWCONTROL_OFFSET    0
+#define    RTL8367B_PKTGEN_BYPASS_FLOWCONTROL_MASK    0x1
+
+#define    RTL8367B_REG_SW_DUMMY0    0x1214
+#define    RTL8367B_SW_DUMMY0_DUMMY_OFFSET    3
+#define    RTL8367B_SW_DUMMY0_DUMMY_MASK    0xFFF8
+#define    RTL8367B_INGRESSBW_BYPASS_EN_OFFSET    2
+#define    RTL8367B_INGRESSBW_BYPASS_EN_MASK    0x4
+#define    RTL8367B_CFG_RX_MIN_OFFSET    0
+#define    RTL8367B_CFG_RX_MIN_MASK    0x3
+
+#define    RTL8367B_REG_SW_DUMMY1    0x1215
+
+#define    RTL8367B_REG_PKTGEN_PAUSE_TIME    0x1216
+
+#define    RTL8367B_REG_SVLAN_UPLINK_PORTMASK    0x1218
+#define    RTL8367B_SVLAN_UPLINK_PORTMASK_OFFSET    0
+#define    RTL8367B_SVLAN_UPLINK_PORTMASK_MASK    0xFF
+
+#define    RTL8367B_REG_CPU_PORT_MASK    0x1219
+#define    RTL8367B_CPU_PORT_MASK_OFFSET    0
+#define    RTL8367B_CPU_PORT_MASK_MASK    0xFF
+
+#define    RTL8367B_REG_CPU_CTRL    0x121a
+#define    RTL8367B_CPU_TAG_FORMAT_OFFSET    9
+#define    RTL8367B_CPU_TAG_FORMAT_MASK    0x200
+#define    RTL8367B_IOL_16DROP_OFFSET    8
+#define    RTL8367B_IOL_16DROP_MASK    0x100
+#define    RTL8367B_CPU_TAG_RXBYTECOUNT_OFFSET    7
+#define    RTL8367B_CPU_TAG_RXBYTECOUNT_MASK    0x80
+#define    RTL8367B_CPU_TAG_POSITION_OFFSET    6
+#define    RTL8367B_CPU_TAG_POSITION_MASK    0x40
+#define    RTL8367B_CPU_TRAP_PORT_OFFSET    3
+#define    RTL8367B_CPU_TRAP_PORT_MASK    0x38
+#define    RTL8367B_CPU_INSERTMODE_OFFSET    1
+#define    RTL8367B_CPU_INSERTMODE_MASK    0x6
+#define    RTL8367B_CPU_EN_OFFSET    0
+#define    RTL8367B_CPU_EN_MASK    0x1
+
+#define    RTL8367B_REG_MIRROR_CTRL    0x121c
+#define    RTL8367B_MIRROR_CTRL_DUMMY_OFFSET    12
+#define    RTL8367B_MIRROR_CTRL_DUMMY_MASK    0xF000
+#define    RTL8367B_MIRROR_ISO_OFFSET    11
+#define    RTL8367B_MIRROR_ISO_MASK    0x800
+#define    RTL8367B_MIRROR_TX_OFFSET    10
+#define    RTL8367B_MIRROR_TX_MASK    0x400
+#define    RTL8367B_MIRROR_RX_OFFSET    9
+#define    RTL8367B_MIRROR_RX_MASK    0x200
+#define    RTL8367B_MIRROR_MONITOR_PORT_OFFSET    4
+#define    RTL8367B_MIRROR_MONITOR_PORT_MASK    0x70
+#define    RTL8367B_MIRROR_SOURCE_PORT_OFFSET    0
+#define    RTL8367B_MIRROR_SOURCE_PORT_MASK    0x7
+
+#define    RTL8367B_REG_FLOWCTRL_CTRL0    0x121d
+#define    RTL8367B_FLOWCTRL_TYPE_OFFSET    15
+#define    RTL8367B_FLOWCTRL_TYPE_MASK    0x8000
+#define    RTL8367B_DROP_ALL_THRESHOLD_OFFSET    5
+#define    RTL8367B_DROP_ALL_THRESHOLD_MASK    0x7FE0
+#define    RTL8367B_ITFSP_REG_OFFSET    0
+#define    RTL8367B_ITFSP_REG_MASK    0x7
+
+#define    RTL8367B_REG_FLOWCTRL_ALL_ON    0x121e
+#define    RTL8367B_CFG_RLDPACT_OFFSET    12
+#define    RTL8367B_CFG_RLDPACT_MASK    0x1000
+#define    RTL8367B_FLOWCTRL_ALL_ON_THRESHOLD_OFFSET    0
+#define    RTL8367B_FLOWCTRL_ALL_ON_THRESHOLD_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_SYS_ON    0x121f
+#define    RTL8367B_FLOWCTRL_SYS_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_SYS_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_SYS_OFF    0x1220
+#define    RTL8367B_FLOWCTRL_SYS_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_SYS_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_SHARE_ON    0x1221
+#define    RTL8367B_FLOWCTRL_SHARE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_SHARE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_SHARE_OFF    0x1222
+#define    RTL8367B_FLOWCTRL_SHARE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_SHARE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_SYS_ON    0x1223
+#define    RTL8367B_FLOWCTRL_FCOFF_SYS_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_SYS_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_SYS_OFF    0x1224
+#define    RTL8367B_FLOWCTRL_FCOFF_SYS_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_SYS_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_SHARE_ON    0x1225
+#define    RTL8367B_FLOWCTRL_FCOFF_SHARE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_SHARE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_SHARE_OFF    0x1226
+#define    RTL8367B_FLOWCTRL_FCOFF_SHARE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_SHARE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_ON    0x1227
+#define    RTL8367B_FLOWCTRL_PORT_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_OFF    0x1228
+#define    RTL8367B_FLOWCTRL_PORT_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_PRIVATE_ON    0x1229
+#define    RTL8367B_FLOWCTRL_PORT_PRIVATE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_PRIVATE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT_PRIVATE_OFF    0x122a
+#define    RTL8367B_FLOWCTRL_PORT_PRIVATE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT_PRIVATE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_RRCP_CTRL0    0x122b
+#define    RTL8367B_COL_SEL_OFFSET    14
+#define    RTL8367B_COL_SEL_MASK    0x4000
+#define    RTL8367B_CRS_SEL_OFFSET    13
+#define    RTL8367B_CRS_SEL_MASK    0x2000
+#define    RTL8367B_RRCP_PBVLAN_EN_OFFSET    11
+#define    RTL8367B_RRCP_PBVLAN_EN_MASK    0x800
+#define    RTL8367B_RRCPV3_SECURITY_CRC_OFFSET    10
+#define    RTL8367B_RRCPV3_SECURITY_CRC_MASK    0x400
+#define    RTL8367B_RRCPV3_HANDLE_OFFSET    8
+#define    RTL8367B_RRCPV3_HANDLE_MASK    0x300
+#define    RTL8367B_RRCPV1_MALFORMED_ACT_OFFSET    5
+#define    RTL8367B_RRCPV1_MALFORMED_ACT_MASK    0x60
+#define    RTL8367B_RRCP_VLANLEAKY_OFFSET    4
+#define    RTL8367B_RRCP_VLANLEAKY_MASK    0x10
+#define    RTL8367B_RRCPV1_SECURITY_CRC_GET_OFFSET    3
+#define    RTL8367B_RRCPV1_SECURITY_CRC_GET_MASK    0x8
+#define    RTL8367B_RRCPV1_SECURITY_CRC_SET_OFFSET    2
+#define    RTL8367B_RRCPV1_SECURITY_CRC_SET_MASK    0x4
+#define    RTL8367B_RRCPV1_HANDLE_OFFSET    1
+#define    RTL8367B_RRCPV1_HANDLE_MASK    0x2
+#define    RTL8367B_RRCP_ENABLE_OFFSET    0
+#define    RTL8367B_RRCP_ENABLE_MASK    0x1
+
+#define    RTL8367B_REG_RRCP_CTRL1    0x122c
+#define    RTL8367B_RRCP_ADMIN_PMSK_OFFSET    8
+#define    RTL8367B_RRCP_ADMIN_PMSK_MASK    0xFF00
+#define    RTL8367B_RRCP_AUTH_PMSK_OFFSET    0
+#define    RTL8367B_RRCP_AUTH_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_RRCP_CTRL2    0x122d
+#define    RTL8367B_RRCPV1_HELLOFWD_TAG_OFFSET    9
+#define    RTL8367B_RRCPV1_HELLOFWD_TAG_MASK    0x600
+#define    RTL8367B_RRCP_FWD_TAG_OFFSET    7
+#define    RTL8367B_RRCP_FWD_TAG_MASK    0x180
+#define    RTL8367B_RRCPV1_REPLY_TAG_OFFSET    6
+#define    RTL8367B_RRCPV1_REPLY_TAG_MASK    0x40
+#define    RTL8367B_RRCPV1_HELLO_COUNT_OFFSET    3
+#define    RTL8367B_RRCPV1_HELLO_COUNT_MASK    0x38
+#define    RTL8367B_RRCPV1_HELLO_PEDIOD_OFFSET    0
+#define    RTL8367B_RRCPV1_HELLO_PEDIOD_MASK    0x3
+
+#define    RTL8367B_REG_RRCP_CTRL3    0x122e
+#define    RTL8367B_RRCP_TAG_PRIORITY_OFFSET    13
+#define    RTL8367B_RRCP_TAG_PRIORITY_MASK    0xE000
+#define    RTL8367B_RRCP_TAG_VID_OFFSET    0
+#define    RTL8367B_RRCP_TAG_VID_MASK    0xFFF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_PORT_ON    0x122f
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_PORT_OFF    0x1230
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_PORT_PRIVATE_ON    0x1231
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_PRIVATE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_PRIVATE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_FCOFF_PORT_PRIVATE_OFF    0x1232
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_PRIVATE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_FCOFF_PORT_PRIVATE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_SYS_ON    0x1233
+#define    RTL8367B_FLOWCTRL_JUMBO_SYS_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_SYS_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_SYS_OFF    0x1234
+#define    RTL8367B_FLOWCTRL_JUMBO_SYS_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_SYS_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_SHARE_ON    0x1235
+#define    RTL8367B_FLOWCTRL_JUMBO_SHARE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_SHARE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_SHARE_OFF    0x1236
+#define    RTL8367B_FLOWCTRL_JUMBO_SHARE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_SHARE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_PORT_ON    0x1237
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_PORT_OFF    0x1238
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_PORT_PRIVATE_ON    0x1239
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_PRIVATE_ON_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_PRIVATE_ON_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_PORT_PRIVATE_OFF    0x123a
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_PRIVATE_OFF_OFFSET    0
+#define    RTL8367B_FLOWCTRL_JUMBO_PORT_PRIVATE_OFF_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_JUMBO_SIZE    0x123b
+#define    RTL8367B_JUMBO_MODE_OFFSET    2
+#define    RTL8367B_JUMBO_MODE_MASK    0x4
+#define    RTL8367B_JUMBO_SIZE_OFFSET    0
+#define    RTL8367B_JUMBO_SIZE_MASK    0x3
+
+#define    RTL8367B_REG_FLOWCTRL_TOTAL_PAGE_COUNTER    0x124c
+#define    RTL8367B_FLOWCTRL_TOTAL_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_TOTAL_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PUBLIC_PAGE_COUNTER    0x124d
+#define    RTL8367B_FLOWCTRL_PUBLIC_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PUBLIC_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_TOTAL_PAGE_MAX    0x124e
+#define    RTL8367B_FLOWCTRL_TOTAL_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_TOTAL_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PUBLIC_PAGE_MAX    0x124f
+#define    RTL8367B_FLOWCTRL_PUBLIC_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PUBLIC_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT0_PAGE_COUNTER    0x1250
+#define    RTL8367B_FLOWCTRL_PORT0_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT0_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT1_PAGE_COUNTER    0x1251
+#define    RTL8367B_FLOWCTRL_PORT1_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT1_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT2_PAGE_COUNTER    0x1252
+#define    RTL8367B_FLOWCTRL_PORT2_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT2_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT3_PAGE_COUNTER    0x1253
+#define    RTL8367B_FLOWCTRL_PORT3_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT3_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT4_PAGE_COUNTER    0x1254
+#define    RTL8367B_FLOWCTRL_PORT4_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT4_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT5_PAGE_COUNTER    0x1255
+#define    RTL8367B_FLOWCTRL_PORT5_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT5_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT6_PAGE_COUNTER    0x1256
+#define    RTL8367B_FLOWCTRL_PORT6_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT6_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT7_PAGE_COUNTER    0x1257
+#define    RTL8367B_FLOWCTRL_PORT7_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT7_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PUBLIC_FCOFF_PAGE_COUNTER    0x1258
+#define    RTL8367B_FLOWCTRL_PUBLIC_FCOFF_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PUBLIC_FCOFF_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PUBLIC_JUMBO_PAGE_COUNTER    0x1259
+#define    RTL8367B_FLOWCTRL_PUBLIC_JUMBO_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PUBLIC_JUMBO_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_MAX_PUBLIC_FCOFF_PAGE_COUNTER    0x125a
+#define    RTL8367B_FLOWCTRL_MAX_PUBLIC_FCOFF_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_MAX_PUBLIC_FCOFF_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_MAX_PUBLIC_JUMBO_PAGE_COUNTER    0x125b
+#define    RTL8367B_FLOWCTRL_MAX_PUBLIC_JUMBO_PAGE_COUNTER_OFFSET    0
+#define    RTL8367B_FLOWCTRL_MAX_PUBLIC_JUMBO_PAGE_COUNTER_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT0_PAGE_MAX    0x1260
+#define    RTL8367B_FLOWCTRL_PORT0_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT0_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT1_PAGE_MAX    0x1261
+#define    RTL8367B_FLOWCTRL_PORT1_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT1_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT2_PAGE_MAX    0x1262
+#define    RTL8367B_FLOWCTRL_PORT2_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT2_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT3_PAGE_MAX    0x1263
+#define    RTL8367B_FLOWCTRL_PORT3_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT3_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT4_PAGE_MAX    0x1264
+#define    RTL8367B_FLOWCTRL_PORT4_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT4_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT5_PAGE_MAX    0x1265
+#define    RTL8367B_FLOWCTRL_PORT5_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT5_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT6_PAGE_MAX    0x1266
+#define    RTL8367B_FLOWCTRL_PORT6_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT6_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PORT7_PAGE_MAX    0x1267
+#define    RTL8367B_FLOWCTRL_PORT7_PAGE_MAX_OFFSET    0
+#define    RTL8367B_FLOWCTRL_PORT7_PAGE_MAX_MASK    0x3FF
+
+#define    RTL8367B_REG_FLOWCTRL_PAGE_COUNT_CLEAR    0x1268
+#define    RTL8367B_DIS_SKIP_FP_OFFSET    1
+#define    RTL8367B_DIS_SKIP_FP_MASK    0x2
+#define    RTL8367B_PAGE_COUNT_CLEAR_OFFSET    0
+#define    RTL8367B_PAGE_COUNT_CLEAR_MASK    0x1
+
+#define    RTL8367B_REG_EMA_CTRL0    0x1270
+#define    RTL8367B_CFG_DVSE_VIAROM_OFFSET    13
+#define    RTL8367B_CFG_DVSE_VIAROM_MASK    0x2000
+#define    RTL8367B_CFG_DVSE_MIBRAM_OFFSET    12
+#define    RTL8367B_CFG_DVSE_MIBRAM_MASK    0x1000
+#define    RTL8367B_CFG_DVSE_IROM_OFFSET    11
+#define    RTL8367B_CFG_DVSE_IROM_MASK    0x800
+#define    RTL8367B_CFG_DVSE_ERAM_OFFSET    10
+#define    RTL8367B_CFG_DVSE_ERAM_MASK    0x400
+#define    RTL8367B_CFG_DVSE_IRAM_OFFSET    9
+#define    RTL8367B_CFG_DVSE_IRAM_MASK    0x200
+#define    RTL8367B_CFG_DVSE_NICRAM_OFFSET    8
+#define    RTL8367B_CFG_DVSE_NICRAM_MASK    0x100
+#define    RTL8367B_CFG_DVSE_CVLANRAM_OFFSET    7
+#define    RTL8367B_CFG_DVSE_CVLANRAM_MASK    0x80
+#define    RTL8367B_CFG_DVSE_ACTRAM_OFFSET    6
+#define    RTL8367B_CFG_DVSE_ACTRAM_MASK    0x40
+#define    RTL8367B_CFG_DVSE_INQRAM_OFFSET    5
+#define    RTL8367B_CFG_DVSE_INQRAM_MASK    0x20
+#define    RTL8367B_CFG_DVSE_HSARAM_OFFSET    4
+#define    RTL8367B_CFG_DVSE_HSARAM_MASK    0x10
+#define    RTL8367B_CFG_DVSE_OUTQRAM_OFFSET    3
+#define    RTL8367B_CFG_DVSE_OUTQRAM_MASK    0x8
+#define    RTL8367B_CFG_DVSE_HTRAM_OFFSET    2
+#define    RTL8367B_CFG_DVSE_HTRAM_MASK    0x4
+#define    RTL8367B_CFG_DVSE_PBRAM_OFFSET    1
+#define    RTL8367B_CFG_DVSE_PBRAM_MASK    0x2
+#define    RTL8367B_CFG_DVSE_L2RAM_OFFSET    0
+#define    RTL8367B_CFG_DVSE_L2RAM_MASK    0x1
+
+#define    RTL8367B_REG_EMA_CTRL1    0x1271
+#define    RTL8367B_CFG_DVS_OUTQRAM_OFFSET    12
+#define    RTL8367B_CFG_DVS_OUTQRAM_MASK    0xF000
+#define    RTL8367B_CFG_DVS_HTRAM_OFFSET    8
+#define    RTL8367B_CFG_DVS_HTRAM_MASK    0x700
+#define    RTL8367B_CFG_DVS_PBRAM_OFFSET    4
+#define    RTL8367B_CFG_DVS_PBRAM_MASK    0xF0
+#define    RTL8367B_CFG_DVS_L2RAM_OFFSET    0
+#define    RTL8367B_CFG_DVS_L2RAM_MASK    0xF
+
+#define    RTL8367B_REG_EMA_CTRL2    0x1272
+#define    RTL8367B_CFG_DVS_CVLANRAM_OFFSET    12
+#define    RTL8367B_CFG_DVS_CVLANRAM_MASK    0xF000
+#define    RTL8367B_CFG_DVS_ACTRAM_OFFSET    8
+#define    RTL8367B_CFG_DVS_ACTRAM_MASK    0xF00
+#define    RTL8367B_CFG_DVS_INQRAM_OFFSET    4
+#define    RTL8367B_CFG_DVS_INQRAM_MASK    0xF0
+#define    RTL8367B_CFG_DVS_HSARAM_OFFSET    0
+#define    RTL8367B_CFG_DVS_HSARAM_MASK    0xF
+
+#define    RTL8367B_REG_EMA_CTRL3    0x1273
+#define    RTL8367B_CFG_DVS_IROM_OFFSET    12
+#define    RTL8367B_CFG_DVS_IROM_MASK    0xF000
+#define    RTL8367B_CFG_DVS_ERAM_OFFSET    8
+#define    RTL8367B_CFG_DVS_ERAM_MASK    0xF00
+#define    RTL8367B_CFG_DVS_IRAM_OFFSET    4
+#define    RTL8367B_CFG_DVS_IRAM_MASK    0xF0
+#define    RTL8367B_CFG_DVS_NICRAM_OFFSET    0
+#define    RTL8367B_CFG_DVS_NICRAM_MASK    0xF
+
+#define    RTL8367B_REG_EMA_CTRL4    0x1274
+#define    RTL8367B_CFG_DVS_VIAROM_OFFSET    4
+#define    RTL8367B_CFG_DVS_VIAROM_MASK    0xF0
+#define    RTL8367B_CFG_DVS_MIBRAM_OFFSET    0
+#define    RTL8367B_CFG_DVS_MIBRAM_MASK    0xF
+
+#define    RTL8367B_REG_DIAG_MODE    0x1275
+#define    RTL8367B_DIAG_MODE_OFFSET    0
+#define    RTL8367B_DIAG_MODE_MASK    0x1F
+
+#define    RTL8367B_REG_BIST_MODE    0x1276
+
+#define    RTL8367B_REG_STS_BIST_DONE    0x1277
+
+#define    RTL8367B_REG_STS_BIST_RLT0    0x1278
+#define    RTL8367B_STS_BIST_RLT0_OFFSET    0
+#define    RTL8367B_STS_BIST_RLT0_MASK    0x1
+
+#define    RTL8367B_REG_STS_BIST_RLT1    0x1279
+
+#define    RTL8367B_REG_STS_BIST_RLT2    0x127a
+
+#define    RTL8367B_REG_STS_BIST_RLT3    0x127b
+#define    RTL8367B_STS_BIST_RLT3_OFFSET    0
+#define    RTL8367B_STS_BIST_RLT3_MASK    0x7F
+
+#define    RTL8367B_REG_STS_BIST_RLT4    0x127c
+#define    RTL8367B_STS_BIST_RLT4_OFFSET    0
+#define    RTL8367B_STS_BIST_RLT4_MASK    0x7
+
+#define    RTL8367B_REG_VIAROM_MISR    0x127d
+
+#define    RTL8367B_REG_DRF_BIST_MODE    0x1280
+#define    RTL8367B_DRF_TCAMDEL_OFFSET    15
+#define    RTL8367B_DRF_TCAMDEL_MASK    0x8000
+#define    RTL8367B_CFG_DRF_BIST_MODE_OFFSET    0
+#define    RTL8367B_CFG_DRF_BIST_MODE_MASK    0x7FFF
+
+#define    RTL8367B_REG_STS_DRF_BIST    0x1281
+#define    RTL8367B_STS_DRF_BIST_OFFSET    0
+#define    RTL8367B_STS_DRF_BIST_MASK    0x7FFF
+
+#define    RTL8367B_REG_STS_DRF_BIST_RLT0    0x1282
+#define    RTL8367B_STS_DRF_BIST_RLT0_OFFSET    0
+#define    RTL8367B_STS_DRF_BIST_RLT0_MASK    0x1
+
+#define    RTL8367B_REG_STS_DRF_BIST_RLT1    0x1283
+
+#define    RTL8367B_REG_STS_DRF_BIST_RLT2    0x1284
+
+#define    RTL8367B_REG_STS_DRF_BIST_RLT3    0x1285
+#define    RTL8367B_STS_DRF_BIST_RLT3_OFFSET    0
+#define    RTL8367B_STS_DRF_BIST_RLT3_MASK    0x7F
+
+#define    RTL8367B_REG_STS_DRF_BIST_RLT4    0x1286
+#define    RTL8367B_STS_DRF_BIST_RLT4_OFFSET    0
+#define    RTL8367B_STS_DRF_BIST_RLT4_MASK    0x7FFF
+
+#define    RTL8367B_REG_RAM_DRF_CTRL    0x1289
+#define    RTL8367B_RAM_DRF_CTRL_OFFSET    0
+#define    RTL8367B_RAM_DRF_CTRL_MASK    0x1
+
+#define    RTL8367B_REG_COND0_BISR_OUT0    0x1290
+
+#define    RTL8367B_REG_COND0_BISR_OUT1    0x1291
+
+#define    RTL8367B_REG_COND0_BISR_OUT2    0x1292
+
+#define    RTL8367B_REG_COND0_BISR_OUT3    0x1293
+
+#define    RTL8367B_REG_COND0_BISR_OUT4    0x1294
+#define    RTL8367B_COND0_BISR_OUT4_OFFSET    0
+#define    RTL8367B_COND0_BISR_OUT4_MASK    0x3F
+
+#define    RTL8367B_REG_COND0_BISR_OUT5    0x1295
+#define    RTL8367B_COND0_BISR_OUT5_OFFSET    0
+#define    RTL8367B_COND0_BISR_OUT5_MASK    0x7
+
+#define    RTL8367B_REG_COND0_BIST_PASS    0x1297
+#define    RTL8367B_COND0_DRF_BIST_NOFAIL_OFFSET    1
+#define    RTL8367B_COND0_DRF_BIST_NOFAIL_MASK    0x2
+#define    RTL8367B_COND0_BIST_NOFAIL_OFFSET    0
+#define    RTL8367B_COND0_BIST_NOFAIL_MASK    0x1
+
+#define    RTL8367B_REG_COND1_BISR_OUT0    0x1298
+
+#define    RTL8367B_REG_COND1_BISR_OUT1    0x1299
+
+#define    RTL8367B_REG_COND1_BISR_OUT2    0x129a
+
+#define    RTL8367B_REG_COND1_BISR_OUT3    0x129b
+
+#define    RTL8367B_REG_COND1_BISR_OUT4    0x129c
+#define    RTL8367B_COND1_BISR_OUT4_OFFSET    0
+#define    RTL8367B_COND1_BISR_OUT4_MASK    0x3F
+
+#define    RTL8367B_REG_COND1_BISR_OUT5    0x129d
+#define    RTL8367B_COND1_BISR_OUT5_OFFSET    0
+#define    RTL8367B_COND1_BISR_OUT5_MASK    0x7
+
+#define    RTL8367B_REG_COND1_BIST_PASS    0x129f
+#define    RTL8367B_COND1_DRF_BIST_NOFAIL_OFFSET    1
+#define    RTL8367B_COND1_DRF_BIST_NOFAIL_MASK    0x2
+#define    RTL8367B_COND1_BIST_NOFAIL_OFFSET    0
+#define    RTL8367B_COND1_BIST_NOFAIL_MASK    0x1
+
+#define    RTL8367B_REG_EEE_TX_THR_Giga    0x12a0
+
+#define    RTL8367B_REG_EEE_TX_THR_FE    0x12a1
+
+#define    RTL8367B_REG_EEE_MISC    0x12a3
+#define    RTL8367B_EEE_REQ_SET1_OFFSET    13
+#define    RTL8367B_EEE_REQ_SET1_MASK    0x2000
+#define    RTL8367B_EEE_REQ_SET0_OFFSET    12
+#define    RTL8367B_EEE_REQ_SET0_MASK    0x1000
+#define    RTL8367B_EEE_WAKE_SET1_OFFSET    9
+#define    RTL8367B_EEE_WAKE_SET1_MASK    0x200
+#define    RTL8367B_EEE_Wake_SET0_OFFSET    8
+#define    RTL8367B_EEE_Wake_SET0_MASK    0x100
+#define    RTL8367B_EEE_TU_GIGA_OFFSET    4
+#define    RTL8367B_EEE_TU_GIGA_MASK    0x30
+#define    RTL8367B_EEE_TU_100M_OFFSET    2
+#define    RTL8367B_EEE_TU_100M_MASK    0xC
+
+#define    RTL8367B_REG_EEE_GIGA_CTRL0    0x12a4
+#define    RTL8367B_EEE_TW_GIGA_OFFSET    8
+#define    RTL8367B_EEE_TW_GIGA_MASK    0xFF00
+#define    RTL8367B_EEE_TR_GIGA_OFFSET    0
+#define    RTL8367B_EEE_TR_GIGA_MASK    0xFF
+
+#define    RTL8367B_REG_EEE_GIGA_CTRL1    0x12a5
+#define    RTL8367B_EEE_TD_GIGA_OFFSET    8
+#define    RTL8367B_EEE_TD_GIGA_MASK    0xFF00
+#define    RTL8367B_EEE_TP_GIGA_OFFSET    0
+#define    RTL8367B_EEE_TP_GIGA_MASK    0xFF
+
+#define    RTL8367B_REG_EEE_100M_CTRL0    0x12a6
+#define    RTL8367B_EEE_TW_100M_OFFSET    8
+#define    RTL8367B_EEE_TW_100M_MASK    0xFF00
+#define    RTL8367B_EEE_TR_100M_OFFSET    0
+#define    RTL8367B_EEE_TR_100M_MASK    0xFF
+
+#define    RTL8367B_REG_EEE_100M_CTRL1    0x12a7
+#define    RTL8367B_EEE_TD_100M_OFFSET    8
+#define    RTL8367B_EEE_TD_100M_MASK    0xFF00
+#define    RTL8367B_EEE_TP_100M_OFFSET    0
+#define    RTL8367B_EEE_TP_100M_MASK    0xFF
+
+#define    RTL8367B_REG_RX_FC_REG    0x12aa
+#define    RTL8367B_EN_EEE_HALF_DUP_OFFSET    8
+#define    RTL8367B_EN_EEE_HALF_DUP_MASK    0x100
+#define    RTL8367B_RX_PGCNT_OFFSET    0
+#define    RTL8367B_RX_PGCNT_MASK    0xFF
+
+#define    RTL8367B_REG_MAX_FIFO_SIZE    0x12af
+#define    RTL8367B_MAX_FIFO_SIZE_OFFSET    0
+#define    RTL8367B_MAX_FIFO_SIZE_MASK    0xF
+
+#define    RTL8367B_REG_EEEP_RX_RATE_GIGA    0x12b0
+
+#define    RTL8367B_REG_EEEP_RX_RATE_100M    0x12b1
+
+#define    RTL8367B_REG_DUMMY_REG_12_2    0x12b2
+
+#define    RTL8367B_REG_EEEP_TX_RATE_GIGA    0x12b3
+
+#define    RTL8367B_REG_EEEP_TX_RATE_100M    0x12b4
+
+#define    RTL8367B_REG_DUMMY_REG_12_3    0x12b5
+
+#define    RTL8367B_REG_EEEP_GIGA_CTRL0    0x12b6
+#define    RTL8367B_EEEP_TR_GIGA_OFFSET    8
+#define    RTL8367B_EEEP_TR_GIGA_MASK    0xFF00
+#define    RTL8367B_EEEP_RW_GIGA_OFFSET    0
+#define    RTL8367B_EEEP_RW_GIGA_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_GIGA_CTRL1    0x12b7
+#define    RTL8367B_EEEP_TW_GIGA_OFFSET    8
+#define    RTL8367B_EEEP_TW_GIGA_MASK    0xFF00
+#define    RTL8367B_EEEP_TP_GIGA_OFFSET    0
+#define    RTL8367B_EEEP_TP_GIGA_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_GIGA_CTRL2    0x12b8
+#define    RTL8367B_EEEP_TXEN_GIGA_OFFSET    12
+#define    RTL8367B_EEEP_TXEN_GIGA_MASK    0x1000
+#define    RTL8367B_EEEP_TU_GIGA_OFFSET    8
+#define    RTL8367B_EEEP_TU_GIGA_MASK    0x300
+#define    RTL8367B_EEEP_TS_GIGA_OFFSET    0
+#define    RTL8367B_EEEP_TS_GIGA_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_100M_CTRL0    0x12b9
+#define    RTL8367B_EEEP_TR_100M_OFFSET    8
+#define    RTL8367B_EEEP_TR_100M_MASK    0xFF00
+#define    RTL8367B_EEEP_RW_100M_OFFSET    0
+#define    RTL8367B_EEEP_RW_100M_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_100M_CTRL1    0x12ba
+#define    RTL8367B_EEEP_TW_100M_OFFSET    8
+#define    RTL8367B_EEEP_TW_100M_MASK    0xFF00
+#define    RTL8367B_EEEP_TP_100M_OFFSET    0
+#define    RTL8367B_EEEP_TP_100M_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_100M_CTRL2    0x12bb
+#define    RTL8367B_EEEP_TXEN_100M_OFFSET    12
+#define    RTL8367B_EEEP_TXEN_100M_MASK    0x1000
+#define    RTL8367B_EEEP_TU_100M_OFFSET    8
+#define    RTL8367B_EEEP_TU_100M_MASK    0x300
+#define    RTL8367B_EEEP_TS_100M_OFFSET    0
+#define    RTL8367B_EEEP_TS_100M_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_CTRL0    0x12bc
+#define    RTL8367B_EEEP_CTRL0_DUMMY_OFFSET    8
+#define    RTL8367B_EEEP_CTRL0_DUMMY_MASK    0xFF00
+#define    RTL8367B_EEEP_SLEEP_STEP_OFFSET    0
+#define    RTL8367B_EEEP_SLEEP_STEP_MASK    0xFF
+
+#define    RTL8367B_REG_EEEP_CTRL1    0x12bd
+#define    RTL8367B_EEEP_TXR_GIGA_OFFSET    8
+#define    RTL8367B_EEEP_TXR_GIGA_MASK    0xFF00
+#define    RTL8367B_EEEP_TXR_100M_OFFSET    0
+#define    RTL8367B_EEEP_TXR_100M_MASK    0xFF
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL0    0x12c0
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL1    0x12c1
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL2    0x12c2
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL3    0x12c3
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL4    0x12c4
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL5    0x12c5
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL6    0x12c6
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL7    0x12c7
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL8    0x12c8
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL9    0x12c9
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL10    0x12ca
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL11    0x12cb
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL12    0x12cc
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL13    0x12cd
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL14    0x12ce
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL15    0x12cf
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL16    0x12d0
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL17    0x12d1
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL18    0x12d2
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL19    0x12d3
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL20    0x12d4
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL21    0x12d5
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL22    0x12d6
+
+#define    RTL8367B_REG_PKTGEN_PAYLOAD_CTRL23    0x12d7
+
+#define    RTL8367B_REG_RRCP_CTRL4    0x12e0
+
+#define    RTL8367B_REG_RRCP_CTRL5    0x12e1
+
+#define    RTL8367B_REG_RRCP_CTRL6    0x12e2
+
+#define    RTL8367B_REG_RRCP_CTRL7    0x12e3
+
+#define    RTL8367B_REG_RRCP_CTRL8    0x12e4
+
+#define    RTL8367B_REG_RRCP_CTRL9    0x12e5
+
+#define    RTL8367B_REG_RRCP_CTRL10    0x12e6
+
+#define    RTL8367B_REG_FIELD_SELECTOR0    0x12e7
+#define    RTL8367B_FIELD_SELECTOR0_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR0_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR0_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR0_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR1    0x12e8
+#define    RTL8367B_FIELD_SELECTOR1_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR1_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR1_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR1_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR2    0x12e9
+#define    RTL8367B_FIELD_SELECTOR2_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR2_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR2_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR2_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR3    0x12ea
+#define    RTL8367B_FIELD_SELECTOR3_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR3_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR3_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR3_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR4    0x12eb
+#define    RTL8367B_FIELD_SELECTOR4_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR4_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR4_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR4_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR5    0x12ec
+#define    RTL8367B_FIELD_SELECTOR5_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR5_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR5_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR5_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR6    0x12ed
+#define    RTL8367B_FIELD_SELECTOR6_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR6_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR6_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR6_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR7    0x12ee
+#define    RTL8367B_FIELD_SELECTOR7_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR7_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR7_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR7_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR8    0x12ef
+#define    RTL8367B_FIELD_SELECTOR8_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR8_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR8_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR8_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR9    0x12f0
+#define    RTL8367B_FIELD_SELECTOR9_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR9_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR9_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR9_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR10    0x12f1
+#define    RTL8367B_FIELD_SELECTOR10_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR10_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR10_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR10_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR11    0x12f2
+#define    RTL8367B_FIELD_SELECTOR11_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR11_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR11_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR11_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR12    0x12f3
+#define    RTL8367B_FIELD_SELECTOR12_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR12_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR12_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR12_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR13    0x12f4
+#define    RTL8367B_FIELD_SELECTOR13_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR13_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR13_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR13_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR14    0x12f5
+#define    RTL8367B_FIELD_SELECTOR14_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR14_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR14_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR14_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_FIELD_SELECTOR15    0x12f6
+#define    RTL8367B_FIELD_SELECTOR15_FORMAT_OFFSET    8
+#define    RTL8367B_FIELD_SELECTOR15_FORMAT_MASK    0x700
+#define    RTL8367B_FIELD_SELECTOR15_OFFSET_OFFSET    0
+#define    RTL8367B_FIELD_SELECTOR15_OFFSET_MASK    0xFF
+
+#define    RTL8367B_REG_MIRROR_SRC_PMSK    0x12fb
+#define    RTL8367B_MIRROR_SRC_PMSK_OFFSET    0
+#define    RTL8367B_MIRROR_SRC_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_EEE_BURSTSIZE    0x12fc
+
+#define    RTL8367B_REG_EEE_IFG_CFG    0x12fd
+#define    RTL8367B_EEE_IFG_CFG_OFFSET    0
+#define    RTL8367B_EEE_IFG_CFG_MASK    0x1
+
+#define    RTL8367B_REG_FPGA_VER_MAC    0x12fe
+
+#define    RTL8367B_REG_HWPKT_GEN_MISC    0x12ff
+#define    RTL8367B_PKT_GEN_SUSPEND_OFFSET    8
+#define    RTL8367B_PKT_GEN_SUSPEND_MASK    0xFF00
+#define    RTL8367B_PKT_GEN_STATUS_OFFSET    0
+#define    RTL8367B_PKT_GEN_STATUS_MASK    0xFF
+
+/* (16'h1300)chip_reg */
+
+#define    RTL8367B_REG_CHIP_NUMBER    0x1300
+
+#define    RTL8367B_REG_CHIP_VER    0x1301
+#define    RTL8367B_RLVID_OFFSET    12
+#define    RTL8367B_RLVID_MASK    0xF000
+#define    RTL8367B_MCID_OFFSET    8
+#define    RTL8367B_MCID_MASK    0xF00
+#define    RTL8367B_BOID_OFFSET    4
+#define    RTL8367B_BOID_MASK    0xF0
+#define    RTL8367B_AFE_VERSION_OFFSET    0
+#define    RTL8367B_AFE_VERSION_MASK    0x1
+
+#define    RTL8367B_REG_CHIP_DEBUG0    0x1303
+#define    RTL8367B_SEL33_EXT2_OFFSET    10
+#define    RTL8367B_SEL33_EXT2_MASK    0x400
+#define    RTL8367B_SEL33_EXT1_OFFSET    9
+#define    RTL8367B_SEL33_EXT1_MASK    0x200
+#define    RTL8367B_SEL33_EXT0_OFFSET    8
+#define    RTL8367B_SEL33_EXT0_MASK    0x100
+#define    RTL8367B_DRI_OTHER_OFFSET    7
+#define    RTL8367B_DRI_OTHER_MASK    0x80
+#define    RTL8367B_DRI_EXT1_RG_OFFSET    6
+#define    RTL8367B_DRI_EXT1_RG_MASK    0x40
+#define    RTL8367B_DRI_EXT0_RG_OFFSET    5
+#define    RTL8367B_DRI_EXT0_RG_MASK    0x20
+#define    RTL8367B_DRI_EXT1_OFFSET    4
+#define    RTL8367B_DRI_EXT1_MASK    0x10
+#define    RTL8367B_DRI_EXT0_OFFSET    3
+#define    RTL8367B_DRI_EXT0_MASK    0x8
+#define    RTL8367B_SLR_OTHER_OFFSET    2
+#define    RTL8367B_SLR_OTHER_MASK    0x4
+#define    RTL8367B_SLR_EXT1_OFFSET    1
+#define    RTL8367B_SLR_EXT1_MASK    0x2
+#define    RTL8367B_SLR_EXt0_OFFSET    0
+#define    RTL8367B_SLR_EXt0_MASK    0x1
+
+#define    RTL8367B_REG_CHIP_DEBUG1    0x1304
+#define    RTL8367B_RG1_DN_OFFSET    12
+#define    RTL8367B_RG1_DN_MASK    0x7000
+#define    RTL8367B_RG1_DP_OFFSET    8
+#define    RTL8367B_RG1_DP_MASK    0x700
+#define    RTL8367B_RG0_DN_OFFSET    4
+#define    RTL8367B_RG0_DN_MASK    0x70
+#define    RTL8367B_RG0_DP_OFFSET    0
+#define    RTL8367B_RG0_DP_MASK    0x7
+
+#define    RTL8367B_REG_DIGITAL_INTERFACE_SELECT    0x1305
+#define    RTL8367B_ORG_COL_OFFSET    15
+#define    RTL8367B_ORG_COL_MASK    0x8000
+#define    RTL8367B_ORG_CRS_OFFSET    14
+#define    RTL8367B_ORG_CRS_MASK    0x4000
+#define    RTL8367B_SKIP_MII_1_RXER_OFFSET    13
+#define    RTL8367B_SKIP_MII_1_RXER_MASK    0x2000
+#define    RTL8367B_SKIP_MII_0_RXER_OFFSET    12
+#define    RTL8367B_SKIP_MII_0_RXER_MASK    0x1000
+#define    RTL8367B_SELECT_GMII_1_OFFSET    4
+#define    RTL8367B_SELECT_GMII_1_MASK    0xF0
+#define    RTL8367B_SELECT_GMII_0_OFFSET    0
+#define    RTL8367B_SELECT_GMII_0_MASK    0xF
+
+#define    RTL8367B_REG_EXT0_RGMXF    0x1306
+#define    RTL8367B_EXT0_RGTX_INV_OFFSET    6
+#define    RTL8367B_EXT0_RGTX_INV_MASK    0x40
+#define    RTL8367B_EXT0_RGRX_INV_OFFSET    5
+#define    RTL8367B_EXT0_RGRX_INV_MASK    0x20
+#define    RTL8367B_EXT0_RGMXF_OFFSET    0
+#define    RTL8367B_EXT0_RGMXF_MASK    0x1F
+
+#define    RTL8367B_REG_EXT1_RGMXF    0x1307
+#define    RTL8367B_EXT1_RGTX_INV_OFFSET    6
+#define    RTL8367B_EXT1_RGTX_INV_MASK    0x40
+#define    RTL8367B_EXT1_RGRX_INV_OFFSET    5
+#define    RTL8367B_EXT1_RGRX_INV_MASK    0x20
+#define    RTL8367B_EXT1_RGMXF_OFFSET    0
+#define    RTL8367B_EXT1_RGMXF_MASK    0x1F
+
+#define    RTL8367B_REG_BISR_CTRL    0x1308
+#define    RTL8367B_BISR_CTRL_OFFSET    0
+#define    RTL8367B_BISR_CTRL_MASK    0x7
+
+#define    RTL8367B_REG_SLF_IF    0x1309
+#define    RTL8367B_LINK_DOWN_CLR_FIFO_OFFSET    7
+#define    RTL8367B_LINK_DOWN_CLR_FIFO_MASK    0x80
+#define    RTL8367B_LOOPBACK_OFFSET    6
+#define    RTL8367B_LOOPBACK_MASK    0x40
+#define    RTL8367B_WATER_LEVEL_OFFSET    4
+#define    RTL8367B_WATER_LEVEL_MASK    0x30
+#define    RTL8367B_SLF_IF_OFFSET    0
+#define    RTL8367B_SLF_IF_MASK    0x3
+
+#define    RTL8367B_REG_I2C_CLOCK_DIV    0x130a
+#define    RTL8367B_I2C_CLOCK_DIV_OFFSET    0
+#define    RTL8367B_I2C_CLOCK_DIV_MASK    0x3FF
+
+#define    RTL8367B_REG_MDX_MDC_DIV    0x130b
+#define    RTL8367B_MDX_MDC_DIV_OFFSET    0
+#define    RTL8367B_MDX_MDC_DIV_MASK    0x3FF
+
+#define    RTL8367B_REG_MISCELLANEOUS_CONFIGURE0    0x130c
+#define    RTL8367B_VIAROM_ENABLE_OFFSET    15
+#define    RTL8367B_VIAROM_ENABLE_MASK    0x8000
+#define    RTL8367B_ADCCKI_FROM_PAD_OFFSET    14
+#define    RTL8367B_ADCCKI_FROM_PAD_MASK    0x4000
+#define    RTL8367B_ADCCKI_EN_OFFSET    13
+#define    RTL8367B_ADCCKI_EN_MASK    0x2000
+#define    RTL8367B_FLASH_ENABLE_OFFSET    12
+#define    RTL8367B_FLASH_ENABLE_MASK    0x1000
+#define    RTL8367B_EEE_ENABLE_OFFSET    11
+#define    RTL8367B_EEE_ENABLE_MASK    0x800
+#define    RTL8367B_NIC_ENABLE_OFFSET    10
+#define    RTL8367B_NIC_ENABLE_MASK    0x400
+#define    RTL8367B_FT_ENABLE_OFFSET    9
+#define    RTL8367B_FT_ENABLE_MASK    0x200
+#define    RTL8367B_OLT_ENABLE_OFFSET    8
+#define    RTL8367B_OLT_ENABLE_MASK    0x100
+#define    RTL8367B_RTCT_EN_OFFSET    7
+#define    RTL8367B_RTCT_EN_MASK    0x80
+#define    RTL8367B_PON_LIGHT_EN_OFFSET    6
+#define    RTL8367B_PON_LIGHT_EN_MASK    0x40
+#define    RTL8367B_DW8051_EN_OFFSET    5
+#define    RTL8367B_DW8051_EN_MASK    0x20
+#define    RTL8367B_AUTOLOAD_EN_OFFSET    4
+#define    RTL8367B_AUTOLOAD_EN_MASK    0x10
+#define    RTL8367B_NRESTORE_EN_OFFSET    3
+#define    RTL8367B_NRESTORE_EN_MASK    0x8
+#define    RTL8367B_DIS_PON_TABLE_INIT_OFFSET    2
+#define    RTL8367B_DIS_PON_TABLE_INIT_MASK    0x4
+#define    RTL8367B_DIS_PON_BIST_OFFSET    1
+#define    RTL8367B_DIS_PON_BIST_MASK    0x2
+#define    RTL8367B_EFUSE_EN_OFFSET    0
+#define    RTL8367B_EFUSE_EN_MASK    0x1
+
+#define    RTL8367B_REG_MISCELLANEOUS_CONFIGURE1    0x130d
+#define    RTL8367B_EEPROM_DEV_ADR_OFFSET    8
+#define    RTL8367B_EEPROM_DEV_ADR_MASK    0x7F00
+#define    RTL8367B_EEPROM_MSB_OFFSET    7
+#define    RTL8367B_EEPROM_MSB_MASK    0x80
+#define    RTL8367B_EEPROM_ADDRESS_16B_OFFSET    6
+#define    RTL8367B_EEPROM_ADDRESS_16B_MASK    0x40
+#define    RTL8367B_SPI_SLAVE_EN_OFFSET    2
+#define    RTL8367B_SPI_SLAVE_EN_MASK    0x4
+#define    RTL8367B_SMI_SEL_OFFSET    0
+#define    RTL8367B_SMI_SEL_MASK    0x3
+
+#define    RTL8367B_REG_PHY_AD    0x130f
+#define    RTL8367B_EN_PHY_MAX_POWER_OFFSET    14
+#define    RTL8367B_EN_PHY_MAX_POWER_MASK    0x4000
+#define    RTL8367B_EN_PHY_SEL_DEG_OFFSET    13
+#define    RTL8367B_EN_PHY_SEL_DEG_MASK    0x2000
+#define    RTL8367B_EXTPHY_AD_OFFSET    8
+#define    RTL8367B_EXTPHY_AD_MASK    0x1F00
+#define    RTL8367B_EN_PHY_LOW_POWER_MODE_OFFSET    7
+#define    RTL8367B_EN_PHY_LOW_POWER_MODE_MASK    0x80
+#define    RTL8367B_EN_PHY_GREEN_OFFSET    6
+#define    RTL8367B_EN_PHY_GREEN_MASK    0x40
+#define    RTL8367B_PDNPHY_OFFSET    5
+#define    RTL8367B_PDNPHY_MASK    0x20
+#define    RTL8367B_INTPHY_AD_OFFSET    0
+#define    RTL8367B_INTPHY_AD_MASK    0x1F
+
+#define    RTL8367B_REG_DIGITAL_INTERFACE0_FORCE    0x1310
+#define    RTL8367B_GMII_0_FORCE_OFFSET    12
+#define    RTL8367B_GMII_0_FORCE_MASK    0x1000
+#define    RTL8367B_RGMII_0_FORCE_OFFSET    0
+#define    RTL8367B_RGMII_0_FORCE_MASK    0xFFF
+
+#define    RTL8367B_REG_DIGITAL_INTERFACE1_FORCE    0x1311
+#define    RTL8367B_GMII_1_FORCE_OFFSET    12
+#define    RTL8367B_GMII_1_FORCE_MASK    0x1000
+#define    RTL8367B_RGMII_1_FORCE_OFFSET    0
+#define    RTL8367B_RGMII_1_FORCE_MASK    0xFFF
+
+#define    RTL8367B_REG_MAC0_FORCE_SELECT    0x1312
+#define    RTL8367B_EN_MAC0_FORCE_OFFSET    12
+#define    RTL8367B_EN_MAC0_FORCE_MASK    0x1000
+#define    RTL8367B_MAC0_FORCE_ABLTY_OFFSET    0
+#define    RTL8367B_MAC0_FORCE_ABLTY_MASK    0xFFF
+
+#define    RTL8367B_REG_MAC1_FORCE_SELECT    0x1313
+#define    RTL8367B_EN_MAC1_FORCE_OFFSET    12
+#define    RTL8367B_EN_MAC1_FORCE_MASK    0x1000
+#define    RTL8367B_MAC1_FORCE_ABLTY_OFFSET    0
+#define    RTL8367B_MAC1_FORCE_ABLTY_MASK    0xFFF
+
+#define    RTL8367B_REG_MAC2_FORCE_SELECT    0x1314
+#define    RTL8367B_EN_MAC2_FORCE_OFFSET    12
+#define    RTL8367B_EN_MAC2_FORCE_MASK    0x1000
+#define    RTL8367B_MAC2_FORCE_ABLTY_OFFSET    0
+#define    RTL8367B_MAC2_FORCE_ABLTY_MASK    0xFFF
+
+#define    RTL8367B_REG_MAC3_FORCE_SELECT    0x1315
+#define    RTL8367B_EN_MAC3_FORCE_OFFSET    12
+#define    RTL8367B_EN_MAC3_FORCE_MASK    0x1000
+#define    RTL8367B_MAC3_FORCE_ABLTY_OFFSET    0
+#define    RTL8367B_MAC3_FORCE_ABLTY_MASK    0xFFF
+
+#define    RTL8367B_REG_MAC4_FORCE_SELECT    0x1316
+#define    RTL8367B_EN_MAC4_FORCE_OFFSET    12
+#define    RTL8367B_EN_MAC4_FORCE_MASK    0x1000
+#define    RTL8367B_MAC4_FORCE_ABLTY_OFFSET    0
+#define    RTL8367B_MAC4_FORCE_ABLTY_MASK    0xFFF
+
+#define    RTL8367B_REG_CHIP_RESET    0x1322
+#define    RTL8367B_GPHY_RESET_OFFSET    6
+#define    RTL8367B_GPHY_RESET_MASK    0x40
+#define    RTL8367B_NIC_RST_OFFSET    5
+#define    RTL8367B_NIC_RST_MASK    0x20
+#define    RTL8367B_DW8051_RST_OFFSET    4
+#define    RTL8367B_DW8051_RST_MASK    0x10
+#define    RTL8367B_SDS_RST_OFFSET    3
+#define    RTL8367B_SDS_RST_MASK    0x8
+#define    RTL8367B_CONFIG_RST_OFFSET    2
+#define    RTL8367B_CONFIG_RST_MASK    0x4
+#define    RTL8367B_SW_RST_OFFSET    1
+#define    RTL8367B_SW_RST_MASK    0x2
+#define    RTL8367B_CHIP_RST_OFFSET    0
+#define    RTL8367B_CHIP_RST_MASK    0x1
+
+#define    RTL8367B_REG_DIGITAL_DEBUG_0    0x1323
+
+#define    RTL8367B_REG_DIGITAL_DEBUG_1    0x1324
+
+#define    RTL8367B_REG_INTERNAL_PHY_MDC_DRIVER    0x1325
+#define    RTL8367B_INTERNAL_PHY_MDC_DRIVER_OFFSET    0
+#define    RTL8367B_INTERNAL_PHY_MDC_DRIVER_MASK    0x3FF
+
+#define    RTL8367B_REG_LINKDOWN_TIME_CTRL    0x1326
+#define    RTL8367B_LINKDOWN_TIME_CFG_OFFSET    9
+#define    RTL8367B_LINKDOWN_TIME_CFG_MASK    0x7E00
+#define    RTL8367B_LINKDOWN_TIME_ENABLE_OFFSET    8
+#define    RTL8367B_LINKDOWN_TIME_ENABLE_MASK    0x100
+#define    RTL8367B_LINKDOWN_TIME_OFFSET    0
+#define    RTL8367B_LINKDOWN_TIME_MASK    0xFF
+
+#define    RTL8367B_REG_PHYACK_TIMEOUT    0x1331
+
+#define    RTL8367B_REG_MDXACK_TIMEOUT    0x1333
+
+#define    RTL8367B_REG_DW8051_RDY    0x1336
+#define    RTL8367B_VIAROM_WRITE_EN_OFFSET    9
+#define    RTL8367B_VIAROM_WRITE_EN_MASK    0x200
+#define    RTL8367B_SPIF_CK2_OFFSET    8
+#define    RTL8367B_SPIF_CK2_MASK    0x100
+#define    RTL8367B_RRCP_MDOE_OFFSET    7
+#define    RTL8367B_RRCP_MDOE_MASK    0x80
+#define    RTL8367B_DW8051_RATE_OFFSET    4
+#define    RTL8367B_DW8051_RATE_MASK    0x70
+#define    RTL8367B_IROM_MSB_OFFSET    2
+#define    RTL8367B_IROM_MSB_MASK    0xC
+#define    RTL8367B_ACS_IROM_ENABLE_OFFSET    1
+#define    RTL8367B_ACS_IROM_ENABLE_MASK    0x2
+#define    RTL8367B_DW8051_READY_OFFSET    0
+#define    RTL8367B_DW8051_READY_MASK    0x1
+
+#define    RTL8367B_REG_BIST_CTRL    0x133c
+#define    RTL8367B_DRF_BIST_DONE_ALL_OFFSET    5
+#define    RTL8367B_DRF_BIST_DONE_ALL_MASK    0x20
+#define    RTL8367B_DRF_BIST_PAUSE_ALL_OFFSET    4
+#define    RTL8367B_DRF_BIST_PAUSE_ALL_MASK    0x10
+#define    RTL8367B_BIST_DOAN_ALL_OFFSET    3
+#define    RTL8367B_BIST_DOAN_ALL_MASK    0x8
+#define    RTL8367B_BIST_PASS_OFFSET    0
+#define    RTL8367B_BIST_PASS_MASK    0x7
+
+#define    RTL8367B_REG_DIAG_MODE2    0x133d
+#define    RTL8367B_DIAG_MODE2_ACTRAM_OFFSET    1
+#define    RTL8367B_DIAG_MODE2_ACTRAM_MASK    0x2
+#define    RTL8367B_DIAG_MODE2_BCAM_ACTION_OFFSET    0
+#define    RTL8367B_DIAG_MODE2_BCAM_ACTION_MASK    0x1
+
+#define    RTL8367B_REG_MDX_PHY_REG0    0x133e
+#define    RTL8367B_PHY_BRD_MASK_OFFSET    4
+#define    RTL8367B_PHY_BRD_MASK_MASK    0x1F0
+#define    RTL8367B_MDX_INDACC_PAGE_OFFSET    0
+#define    RTL8367B_MDX_INDACC_PAGE_MASK    0xF
+
+#define    RTL8367B_REG_MDX_PHY_REG1    0x133f
+#define    RTL8367B_PHY_BRD_MODE_OFFSET    5
+#define    RTL8367B_PHY_BRD_MODE_MASK    0x20
+#define    RTL8367B_BRD_PHYAD_OFFSET    0
+#define    RTL8367B_BRD_PHYAD_MASK    0x1F
+
+#define    RTL8367B_REG_DEBUG_SIGNAL_SELECT_A    0x1340
+
+#define    RTL8367B_REG_DEBUG_SIGNAL_SELECT_B    0x1341
+#define    RTL8367B_DEBUG_SEL_OFFSET    4
+#define    RTL8367B_DEBUG_SEL_MASK    0x10
+#define    RTL8367B_DEBUG_SHIFT_OFFSET    0
+#define    RTL8367B_DEBUG_SHIFT_MASK    0xF
+
+#define    RTL8367B_REG_DEBUG_SIGNAL_I    0x1343
+
+#define    RTL8367B_REG_DEBUG_SIGNAL_H    0x1344
+
+#define    RTL8367B_REG_BYPASS_ABLTY_LOCK    0x1349
+#define    RTL8367B_BYPASS_ABLTY_LOCK_OFFSET    0
+#define    RTL8367B_BYPASS_ABLTY_LOCK_MASK    0x1F
+
+#define    RTL8367B_REG_BYPASS_ABLTY_LOCK_EXT    0x134a
+#define    RTL8367B_BYPASS_ABLTY_LOCK_EXT_OFFSET    0
+#define    RTL8367B_BYPASS_ABLTY_LOCK_EXT_MASK    0x7
+
+#define    RTL8367B_REG_ACL_GPIO    0x134f
+#define    RTL8367B_ACL_GPIO_13_OFFSET    13
+#define    RTL8367B_ACL_GPIO_13_MASK    0x2000
+#define    RTL8367B_ACL_GPIO_12_OFFSET    12
+#define    RTL8367B_ACL_GPIO_12_MASK    0x1000
+#define    RTL8367B_ACL_GPIO_11_OFFSET    11
+#define    RTL8367B_ACL_GPIO_11_MASK    0x800
+#define    RTL8367B_ACL_GPIO_10_OFFSET    10
+#define    RTL8367B_ACL_GPIO_10_MASK    0x400
+#define    RTL8367B_ACL_GPIO_9_OFFSET    9
+#define    RTL8367B_ACL_GPIO_9_MASK    0x200
+#define    RTL8367B_ACL_GPIO_8_OFFSET    8
+#define    RTL8367B_ACL_GPIO_8_MASK    0x100
+#define    RTL8367B_ACL_GPIO_7_OFFSET    7
+#define    RTL8367B_ACL_GPIO_7_MASK    0x80
+#define    RTL8367B_ACL_GPIO_6_OFFSET    6
+#define    RTL8367B_ACL_GPIO_6_MASK    0x40
+#define    RTL8367B_ACL_GPIO_5_OFFSET    5
+#define    RTL8367B_ACL_GPIO_5_MASK    0x20
+#define    RTL8367B_ACL_GPIO_4_OFFSET    4
+#define    RTL8367B_ACL_GPIO_4_MASK    0x10
+#define    RTL8367B_ACL_GPIO_3_OFFSET    3
+#define    RTL8367B_ACL_GPIO_3_MASK    0x8
+#define    RTL8367B_ACL_GPIO_2_OFFSET    2
+#define    RTL8367B_ACL_GPIO_2_MASK    0x4
+#define    RTL8367B_ACL_GPIO_1_OFFSET    1
+#define    RTL8367B_ACL_GPIO_1_MASK    0x2
+#define    RTL8367B_ACL_GPIO_0_OFFSET    0
+#define    RTL8367B_ACL_GPIO_0_MASK    0x1
+
+#define    RTL8367B_REG_EN_GPIO    0x1350
+#define    RTL8367B_EN_GPIO_13_OFFSET    13
+#define    RTL8367B_EN_GPIO_13_MASK    0x2000
+#define    RTL8367B_EN_GPIO_12_OFFSET    12
+#define    RTL8367B_EN_GPIO_12_MASK    0x1000
+#define    RTL8367B_EN_GPIO_11_OFFSET    11
+#define    RTL8367B_EN_GPIO_11_MASK    0x800
+#define    RTL8367B_EN_GPIO_10_OFFSET    10
+#define    RTL8367B_EN_GPIO_10_MASK    0x400
+#define    RTL8367B_EN_GPIO_9_OFFSET    9
+#define    RTL8367B_EN_GPIO_9_MASK    0x200
+#define    RTL8367B_EN_GPIO_8_OFFSET    8
+#define    RTL8367B_EN_GPIO_8_MASK    0x100
+#define    RTL8367B_EN_GPIO_7_OFFSET    7
+#define    RTL8367B_EN_GPIO_7_MASK    0x80
+#define    RTL8367B_EN_GPIO_6_OFFSET    6
+#define    RTL8367B_EN_GPIO_6_MASK    0x40
+#define    RTL8367B_EN_GPIO_5_OFFSET    5
+#define    RTL8367B_EN_GPIO_5_MASK    0x20
+#define    RTL8367B_EN_GPIO_4_OFFSET    4
+#define    RTL8367B_EN_GPIO_4_MASK    0x10
+#define    RTL8367B_EN_GPIO_3_OFFSET    3
+#define    RTL8367B_EN_GPIO_3_MASK    0x8
+#define    RTL8367B_EN_GPIO_2_OFFSET    2
+#define    RTL8367B_EN_GPIO_2_MASK    0x4
+#define    RTL8367B_EN_GPIO_1_OFFSET    1
+#define    RTL8367B_EN_GPIO_1_MASK    0x2
+#define    RTL8367B_EN_GPIO_0_OFFSET    0
+#define    RTL8367B_EN_GPIO_0_MASK    0x1
+
+#define    RTL8367B_REG_CFG_MULTI_PIN    0x1351
+#define    RTL8367B_CFG_MULTI_PIN_OFFSET    0
+#define    RTL8367B_CFG_MULTI_PIN_MASK    0x3
+
+#define    RTL8367B_REG_PORT0_STATUS    0x1352
+#define    RTL8367B_PORT0_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT0_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT0_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT0_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT0_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT0_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT0_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT0_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT0_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT0_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT0_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT0_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT0_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT0_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT0_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT0_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT0_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT0_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT0_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT0_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT1_STATUS    0x1353
+#define    RTL8367B_PORT1_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT1_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT1_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT1_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT1_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT1_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT1_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT1_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT1_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT1_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT1_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT1_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT1_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT1_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT1_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT1_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT1_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT1_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT1_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT1_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT2_STATUS    0x1354
+#define    RTL8367B_PORT2_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT2_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT2_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT2_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT2_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT2_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT2_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT2_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT2_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT2_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT2_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT2_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT2_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT2_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT2_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT2_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT2_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT2_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT2_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT2_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT3_STATUS    0x1355
+#define    RTL8367B_PORT3_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT3_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT3_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT3_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT3_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT3_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT3_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT3_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT3_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT3_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT3_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT3_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT3_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT3_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT3_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT3_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT3_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT3_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT3_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT3_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT4_STATUS    0x1356
+#define    RTL8367B_PORT4_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT4_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT4_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT4_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT4_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT4_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT4_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT4_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT4_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT4_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT4_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT4_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT4_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT4_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT4_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT4_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT4_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT4_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT4_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT4_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT5_STATUS    0x1357
+#define    RTL8367B_PORT5_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT5_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT5_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT5_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT5_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT5_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT5_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT5_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT5_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT5_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT5_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT5_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT5_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT5_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT5_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT5_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT5_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT5_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT5_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT5_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT6_STATUS    0x1358
+#define    RTL8367B_PORT6_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT6_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT6_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT6_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT6_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT6_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT6_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT6_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT6_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT6_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT6_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT6_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT6_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT6_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT6_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT6_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT6_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT6_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT6_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT6_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_PORT7_STATUS    0x1359
+#define    RTL8367B_PORT7_STATUS_EN_1000_LPI_OFFSET    11
+#define    RTL8367B_PORT7_STATUS_EN_1000_LPI_MASK    0x800
+#define    RTL8367B_PORT7_STATUS_EN_100_LPI_OFFSET    10
+#define    RTL8367B_PORT7_STATUS_EN_100_LPI_MASK    0x400
+#define    RTL8367B_PORT7_STATUS_NWAY_FAULT_OFFSET    9
+#define    RTL8367B_PORT7_STATUS_NWAY_FAULT_MASK    0x200
+#define    RTL8367B_PORT7_STATUS_LINK_ON_MASTER_OFFSET    8
+#define    RTL8367B_PORT7_STATUS_LINK_ON_MASTER_MASK    0x100
+#define    RTL8367B_PORT7_STATUS_NWAY_CAP_OFFSET    7
+#define    RTL8367B_PORT7_STATUS_NWAY_CAP_MASK    0x80
+#define    RTL8367B_PORT7_STATUS_TX_FLOWCTRL_CAP_OFFSET    6
+#define    RTL8367B_PORT7_STATUS_TX_FLOWCTRL_CAP_MASK    0x40
+#define    RTL8367B_PORT7_STATUS_RX_FLOWCTRL_CAP_OFFSET    5
+#define    RTL8367B_PORT7_STATUS_RX_FLOWCTRL_CAP_MASK    0x20
+#define    RTL8367B_PORT7_STATUS_LINK_STATE_OFFSET    4
+#define    RTL8367B_PORT7_STATUS_LINK_STATE_MASK    0x10
+#define    RTL8367B_PORT7_STATUS_FULL_DUPLUX_CAP_OFFSET    2
+#define    RTL8367B_PORT7_STATUS_FULL_DUPLUX_CAP_MASK    0x4
+#define    RTL8367B_PORT7_STATUS_LINK_SPEED_OFFSET    0
+#define    RTL8367B_PORT7_STATUS_LINK_SPEED_MASK    0x3
+
+#define    RTL8367B_REG_UPS_CTRL0    0x1362
+#define    RTL8367B_P3_REF_SD_BIT0_OFFSET    8
+#define    RTL8367B_P3_REF_SD_BIT0_MASK    0xFF00
+#define    RTL8367B_P2_REF_SD_OFFSET    0
+#define    RTL8367B_P2_REF_SD_MASK    0xFF
+
+#define    RTL8367B_REG_UPS_CTRL1    0x1363
+#define    RTL8367B_UPS_OUT_OFFSET    8
+#define    RTL8367B_UPS_OUT_MASK    0xFF00
+#define    RTL8367B_UPS_WRITE_PULSE_OFFSET    1
+#define    RTL8367B_UPS_WRITE_PULSE_MASK    0x2
+#define    RTL8367B_UPS_EN_OFFSET    0
+#define    RTL8367B_UPS_EN_MASK    0x1
+
+#define    RTL8367B_REG_UPS_CTRL2    0x1364
+#define    RTL8367B_IGNOE_MAC5_LINK_OFFSET    15
+#define    RTL8367B_IGNOE_MAC5_LINK_MASK    0x8000
+#define    RTL8367B_AGREE_SLEEP_OFFSET    14
+#define    RTL8367B_AGREE_SLEEP_MASK    0x4000
+#define    RTL8367B_WAIT_FOR_AGREEMENT_OFFSET    13
+#define    RTL8367B_WAIT_FOR_AGREEMENT_MASK    0x2000
+#define    RTL8367B_WAKE_UP_BY_LINK_OFFSET    12
+#define    RTL8367B_WAKE_UP_BY_LINK_MASK    0x1000
+#define    RTL8367B_WAKE_UP_BY_PHY_OFFSET    11
+#define    RTL8367B_WAKE_UP_BY_PHY_MASK    0x800
+#define    RTL8367B_SLOW_CLK_TGL_RATE_OFFSET    7
+#define    RTL8367B_SLOW_CLK_TGL_RATE_MASK    0x780
+#define    RTL8367B_PLL_G1_CTRL_EN_OFFSET    6
+#define    RTL8367B_PLL_G1_CTRL_EN_MASK    0x40
+#define    RTL8367B_PLL_G0_CTRL_EN_OFFSET    5
+#define    RTL8367B_PLL_G0_CTRL_EN_MASK    0x20
+#define    RTL8367B_SLOW_DOWN_PLL_EN_OFFSET    4
+#define    RTL8367B_SLOW_DOWN_PLL_EN_MASK    0x10
+#define    RTL8367B_SLOW_DOWN_CLK_EN_OFFSET    3
+#define    RTL8367B_SLOW_DOWN_CLK_EN_MASK    0x8
+#define    RTL8367B_GATING_CLK_SDS_EN_OFFSET    2
+#define    RTL8367B_GATING_CLK_SDS_EN_MASK    0x4
+#define    RTL8367B_GATING_CLK_CHIP_EN_OFFSET    1
+#define    RTL8367B_GATING_CLK_CHIP_EN_MASK    0x2
+#define    RTL8367B_GATING_SW_EN_OFFSET    0
+#define    RTL8367B_GATING_SW_EN_MASK    0x1
+
+#define    RTL8367B_REG_GATING_CLK_1    0x1365
+#define    RTL8367B_ALDPS_MODE_4_OFFSET    15
+#define    RTL8367B_ALDPS_MODE_4_MASK    0x8000
+#define    RTL8367B_ALDPS_MODE_3_OFFSET    14
+#define    RTL8367B_ALDPS_MODE_3_MASK    0x4000
+#define    RTL8367B_ALDPS_MODE_2_OFFSET    13
+#define    RTL8367B_ALDPS_MODE_2_MASK    0x2000
+#define    RTL8367B_ALDPS_MODE_1_OFFSET    12
+#define    RTL8367B_ALDPS_MODE_1_MASK    0x1000
+#define    RTL8367B_ALDPS_MODE_0_OFFSET    11
+#define    RTL8367B_ALDPS_MODE_0_MASK    0x800
+#define    RTL8367B_UPS_DBGO_OFFSET    10
+#define    RTL8367B_UPS_DBGO_MASK    0x400
+#define    RTL8367B_IFMX_AFF_NOT_FF_OUT_OFFSET    9
+#define    RTL8367B_IFMX_AFF_NOT_FF_OUT_MASK    0x200
+#define    RTL8367B_WATER_LEVEL_FD_OFFSET    6
+#define    RTL8367B_WATER_LEVEL_FD_MASK    0x1C0
+#define    RTL8367B_WATER_LEVEL_Y2X_OFFSET    3
+#define    RTL8367B_WATER_LEVEL_Y2X_MASK    0x38
+#define    RTL8367B_WATER_LEVEL_X2Y_2_OFFSET    2
+#define    RTL8367B_WATER_LEVEL_X2Y_2_MASK    0x4
+#define    RTL8367B_IGNOE_MAC7_LINK_OFFSET    1
+#define    RTL8367B_IGNOE_MAC7_LINK_MASK    0x2
+#define    RTL8367B_IGNOE_MAC6_LINK_OFFSET    0
+#define    RTL8367B_IGNOE_MAC6_LINK_MASK    0x1
+
+#define    RTL8367B_REG_UPS_CTRL4    0x1366
+#define    RTL8367B_PROB_EN_OFFSET    6
+#define    RTL8367B_PROB_EN_MASK    0x40
+#define    RTL8367B_PLL_DOWN_OFFSET    1
+#define    RTL8367B_PLL_DOWN_MASK    0x2
+#define    RTL8367B_XTAL_DOWN_OFFSET    0
+#define    RTL8367B_XTAL_DOWN_MASK    0x1
+
+#define    RTL8367B_REG_UPS_CTRL5    0x1367
+#define    RTL8367B_FRC_CPU_ACPT_OFFSET    3
+#define    RTL8367B_FRC_CPU_ACPT_MASK    0x8
+#define    RTL8367B_UPS_CPU_ACPT_OFFSET    2
+#define    RTL8367B_UPS_CPU_ACPT_MASK    0x4
+#define    RTL8367B_UPS_DBG_4_OFFSET    0
+#define    RTL8367B_UPS_DBG_4_MASK    0x3
+
+#define    RTL8367B_REG_UPS_CTRL6    0x1368
+#define    RTL8367B_UPS_CTRL6_OFFSET    0
+#define    RTL8367B_UPS_CTRL6_MASK    0xF
+
+#define    RTL8367B_REG_EFUSE_CMD    0x1370
+#define    RTL8367B_EFUSE_ACCESS_BUSY_OFFSET    2
+#define    RTL8367B_EFUSE_ACCESS_BUSY_MASK    0x4
+#define    RTL8367B_EFUSE_COMMAND_EN_OFFSET    1
+#define    RTL8367B_EFUSE_COMMAND_EN_MASK    0x2
+#define    RTL8367B_EFUSE_WR_OFFSET    0
+#define    RTL8367B_EFUSE_WR_MASK    0x1
+
+#define    RTL8367B_REG_EFUSE_ADR    0x1371
+#define    RTL8367B_DUMMY_15_10_OFFSET    10
+#define    RTL8367B_DUMMY_15_10_MASK    0xFC00
+#define    RTL8367B_EFUSE_ADDRESS_OFFSET    0
+#define    RTL8367B_EFUSE_ADDRESS_MASK    0x3FF
+
+#define    RTL8367B_REG_EFUSE_WDAT    0x1372
+#define    RTL8367B_DUMMY_15_8_OFFSET    8
+#define    RTL8367B_DUMMY_15_8_MASK    0xFF00
+#define    RTL8367B_EFUSE_WRITE_DATA_OFFSET    0
+#define    RTL8367B_EFUSE_WRITE_DATA_MASK    0xFF
+
+#define    RTL8367B_REG_EFUSE_RDAT    0x1373
+#define    RTL8367B_EFUSE_RDAT_OFFSET    0
+#define    RTL8367B_EFUSE_RDAT_MASK    0xFF
+
+#define    RTL8367B_REG_I2C_CTRL    0x1374
+#define    RTL8367B_MDX_MST_FAIL_LAT_OFFSET    1
+#define    RTL8367B_MDX_MST_FAIL_LAT_MASK    0x2
+#define    RTL8367B_MDX_MST_FAIL_CLRPS_OFFSET    0
+#define    RTL8367B_MDX_MST_FAIL_CLRPS_MASK    0x1
+
+#define    RTL8367B_REG_EEE_CFG    0x1375
+#define    RTL8367B_CFG_BYPASS_GATELPTD_OFFSET    11
+#define    RTL8367B_CFG_BYPASS_GATELPTD_MASK    0x800
+#define    RTL8367B_EEE_ABT_ADDR2_OFFSET    6
+#define    RTL8367B_EEE_ABT_ADDR2_MASK    0x7C0
+#define    RTL8367B_EEE_ABT_ADDR1_OFFSET    1
+#define    RTL8367B_EEE_ABT_ADDR1_MASK    0x3E
+#define    RTL8367B_EEE_POLL_EN_OFFSET    0
+#define    RTL8367B_EEE_POLL_EN_MASK    0x1
+
+#define    RTL8367B_REG_EEE_PAGE    0x1376
+
+#define    RTL8367B_REG_EEE_EXT_PAGE    0x1377
+
+#define    RTL8367B_REG_EEE_EN_SPD1000    0x1378
+
+#define    RTL8367B_REG_EEE_EN_SPD100    0x1379
+
+#define    RTL8367B_REG_EEE_LP_SPD1000    0x137a
+
+#define    RTL8367B_REG_EEE_LP_SPD100    0x137b
+
+#define    RTL8367B_REG_DW8051_PRO_REG0    0x13a0
+
+#define    RTL8367B_REG_DW8051_PRO_REG1    0x13a1
+
+#define    RTL8367B_REG_DW8051_PRO_REG2    0x13a2
+
+#define    RTL8367B_REG_DW8051_PRO_REG3    0x13a3
+
+#define    RTL8367B_REG_DW8051_PRO_REG4    0x13a4
+
+#define    RTL8367B_REG_DW8051_PRO_REG5    0x13a5
+
+#define    RTL8367B_REG_DW8051_PRO_REG6    0x13a6
+
+#define    RTL8367B_REG_DW8051_PRO_REG7    0x13a7
+
+#define    RTL8367B_REG_MAGIC_ID    0x13c2
+
+#define    RTL8367B_REG_DIGITAL_INTERFACE_SELECT_1    0x13c3
+#define    RTL8367B_SKIP_MII_2_RXER_OFFSET    4
+#define    RTL8367B_SKIP_MII_2_RXER_MASK    0x10
+#define    RTL8367B_SELECT_RGMII_2_OFFSET    0
+#define    RTL8367B_SELECT_RGMII_2_MASK    0xF
+
+#define    RTL8367B_REG_DIGITAL_INTERFACE2_FORCE    0x13c4
+#define    RTL8367B_GMII_2_FORCE_OFFSET    12
+#define    RTL8367B_GMII_2_FORCE_MASK    0x1000
+#define    RTL8367B_RGMII_2_FORCE_OFFSET    0
+#define    RTL8367B_RGMII_2_FORCE_MASK    0xFFF
+
+#define    RTL8367B_REG_EXT2_RGMXF    0x13c5
+#define    RTL8367B_EXT2_RGTX_INV_OFFSET    6
+#define    RTL8367B_EXT2_RGTX_INV_MASK    0x40
+#define    RTL8367B_EXT2_RGRX_INV_OFFSET    5
+#define    RTL8367B_EXT2_RGRX_INV_MASK    0x20
+#define    RTL8367B_EXT2_RGMXF_OFFSET    0
+#define    RTL8367B_EXT2_RGMXF_MASK    0x1F
+
+#define    RTL8367B_REG_ROUTER_UPS_CFG    0x13c6
+#define    RTL8367B_UPS_Status_OFFSET    1
+#define    RTL8367B_UPS_Status_MASK    0x2
+#define    RTL8367B_SoftStart_OFFSET    0
+#define    RTL8367B_SoftStart_MASK    0x1
+
+#define    RTL8367B_REG_CTRL_GPIO    0x13c7
+#define    RTL8367B_CTRL_GPIO_13_OFFSET    13
+#define    RTL8367B_CTRL_GPIO_13_MASK    0x2000
+#define    RTL8367B_CTRL_GPIO_12_OFFSET    12
+#define    RTL8367B_CTRL_GPIO_12_MASK    0x1000
+#define    RTL8367B_CTRL_GPIO_11_OFFSET    11
+#define    RTL8367B_CTRL_GPIO_11_MASK    0x800
+#define    RTL8367B_CTRL_GPIO_10_OFFSET    10
+#define    RTL8367B_CTRL_GPIO_10_MASK    0x400
+#define    RTL8367B_CTRL_GPIO_9_OFFSET    9
+#define    RTL8367B_CTRL_GPIO_9_MASK    0x200
+#define    RTL8367B_CTRL_GPIO_8_OFFSET    8
+#define    RTL8367B_CTRL_GPIO_8_MASK    0x100
+#define    RTL8367B_CTRL_GPIO_7_OFFSET    7
+#define    RTL8367B_CTRL_GPIO_7_MASK    0x80
+#define    RTL8367B_CTRL_GPIO_6_OFFSET    6
+#define    RTL8367B_CTRL_GPIO_6_MASK    0x40
+#define    RTL8367B_CTRL_GPIO_5_OFFSET    5
+#define    RTL8367B_CTRL_GPIO_5_MASK    0x20
+#define    RTL8367B_CTRL_GPIO_4_OFFSET    4
+#define    RTL8367B_CTRL_GPIO_4_MASK    0x10
+#define    RTL8367B_CTRL_GPIO_3_OFFSET    3
+#define    RTL8367B_CTRL_GPIO_3_MASK    0x8
+#define    RTL8367B_CTRL_GPIO_2_OFFSET    2
+#define    RTL8367B_CTRL_GPIO_2_MASK    0x4
+#define    RTL8367B_CTRL_GPIO_1_OFFSET    1
+#define    RTL8367B_CTRL_GPIO_1_MASK    0x2
+#define    RTL8367B_CTRL_GPIO_0_OFFSET    0
+#define    RTL8367B_CTRL_GPIO_0_MASK    0x1
+
+#define    RTL8367B_REG_SEL_GPIO    0x13c8
+#define    RTL8367B_SEL_GPIO_13_OFFSET    13
+#define    RTL8367B_SEL_GPIO_13_MASK    0x2000
+#define    RTL8367B_SEL_GPIO_12_OFFSET    12
+#define    RTL8367B_SEL_GPIO_12_MASK    0x1000
+#define    RTL8367B_SEL_GPIO_11_OFFSET    11
+#define    RTL8367B_SEL_GPIO_11_MASK    0x800
+#define    RTL8367B_SEL_GPIO_10_OFFSET    10
+#define    RTL8367B_SEL_GPIO_10_MASK    0x400
+#define    RTL8367B_SEL_GPIO_9_OFFSET    9
+#define    RTL8367B_SEL_GPIO_9_MASK    0x200
+#define    RTL8367B_SEL_GPIO_8_OFFSET    8
+#define    RTL8367B_SEL_GPIO_8_MASK    0x100
+#define    RTL8367B_SEL_GPIO_7_OFFSET    7
+#define    RTL8367B_SEL_GPIO_7_MASK    0x80
+#define    RTL8367B_SEL_GPIO_6_OFFSET    6
+#define    RTL8367B_SEL_GPIO_6_MASK    0x40
+#define    RTL8367B_SEL_GPIO_5_OFFSET    5
+#define    RTL8367B_SEL_GPIO_5_MASK    0x20
+#define    RTL8367B_SEL_GPIO_4_OFFSET    4
+#define    RTL8367B_SEL_GPIO_4_MASK    0x10
+#define    RTL8367B_SEL_GPIO_3_OFFSET    3
+#define    RTL8367B_SEL_GPIO_3_MASK    0x8
+#define    RTL8367B_SEL_GPIO_2_OFFSET    2
+#define    RTL8367B_SEL_GPIO_2_MASK    0x4
+#define    RTL8367B_SEL_GPIO_1_OFFSET    1
+#define    RTL8367B_SEL_GPIO_1_MASK    0x2
+#define    RTL8367B_SEL_GPIO_0_OFFSET    0
+#define    RTL8367B_SEL_GPIO_0_MASK    0x1
+
+#define    RTL8367B_REG_STATUS_GPIO    0x13c9
+#define    RTL8367B_STATUS_GPIO_OFFSET    0
+#define    RTL8367B_STATUS_GPIO_MASK    0x3FFF
+
+#define    RTL8367B_REG_SYNC_ETH_CFG    0x13e0
+#define    RTL8367B_DUMMY2_OFFSET    9
+#define    RTL8367B_DUMMY2_MASK    0xFE00
+#define    RTL8367B_RFC2819_TYPE_OFFSET    8
+#define    RTL8367B_RFC2819_TYPE_MASK    0x100
+#define    RTL8367B_DUMMY1_OFFSET    6
+#define    RTL8367B_DUMMY1_MASK    0xC0
+#define    RTL8367B_SYNC_ETH_EN_RTT2_OFFSET    5
+#define    RTL8367B_SYNC_ETH_EN_RTT2_MASK    0x20
+#define    RTL8367B_SYNC_ETH_EN_RTT1_OFFSET    4
+#define    RTL8367B_SYNC_ETH_EN_RTT1_MASK    0x10
+#define    RTL8367B_SYNC_ETH_SEL_DPLL_OFFSET    3
+#define    RTL8367B_SYNC_ETH_SEL_DPLL_MASK    0x8
+#define    RTL8367B_SYNC_ETH_SEL_PHYREF_OFFSET    2
+#define    RTL8367B_SYNC_ETH_SEL_PHYREF_MASK    0x4
+#define    RTL8367B_SYNC_ETH_SEL_XTAL_OFFSET    1
+#define    RTL8367B_SYNC_ETH_SEL_XTAL_MASK    0x2
+#define    RTL8367B_DUMMY0_OFFSET    0
+#define    RTL8367B_DUMMY0_MASK    0x1
+
+#define    RTL8367B_REG_LED_DRI_CFG    0x13e1
+#define    RTL8367B_LED_DRI_CFG_DUMMY_OFFSET    1
+#define    RTL8367B_LED_DRI_CFG_DUMMY_MASK    0xFFFE
+#define    RTL8367B_LED_DRIVING_OFFSET    0
+#define    RTL8367B_LED_DRIVING_MASK    0x1
+
+#define    RTL8367B_REG_CHIP_DEBUG2    0x13e2
+#define    RTL8367B_RG2_DN_OFFSET    6
+#define    RTL8367B_RG2_DN_MASK    0x1C0
+#define    RTL8367B_RG2_DP_OFFSET    3
+#define    RTL8367B_RG2_DP_MASK    0x38
+#define    RTL8367B_DRI_EXT2_RG_OFFSET    2
+#define    RTL8367B_DRI_EXT2_RG_MASK    0x4
+#define    RTL8367B_DRI_EXT2_OFFSET    1
+#define    RTL8367B_DRI_EXT2_MASK    0x2
+#define    RTL8367B_SLR_EXt2_OFFSET    0
+#define    RTL8367B_SLR_EXt2_MASK    0x1
+
+#define    RTL8367B_REG_DIGITAL_DEBUG_2    0x13e3
+
+#define    RTL8367B_REG_FIBER_RTL_OUI_CFG0    0x13e4
+#define    RTL8367B_FIBER_RTL_OUI_CFG0_OFFSET    0
+#define    RTL8367B_FIBER_RTL_OUI_CFG0_MASK    0xFF
+
+#define    RTL8367B_REG_FIBER_RTL_OUI_CFG1    0x13e5
+
+#define    RTL8367B_REG_FIBER_CFG_0    0x13e6
+#define    RTL8367B_REV_NUM_OFFSET    8
+#define    RTL8367B_REV_NUM_MASK    0xF00
+#define    RTL8367B_MODEL_NUM_OFFSET    0
+#define    RTL8367B_MODEL_NUM_MASK    0x3F
+
+#define    RTL8367B_REG_FIBER_CFG_1    0x13e7
+#define    RTL8367B_SDS_FRC_REG4_OFFSET    12
+#define    RTL8367B_SDS_FRC_REG4_MASK    0x1000
+#define    RTL8367B_SDS_FRC_REG4_FIB100_OFFSET    11
+#define    RTL8367B_SDS_FRC_REG4_FIB100_MASK    0x800
+#define    RTL8367B_SEL_MASK_ONL_OFFSET    5
+#define    RTL8367B_SEL_MASK_ONL_MASK    0x20
+#define    RTL8367B_DIS_QUALITY_IN_MASK_OFFSET    4
+#define    RTL8367B_DIS_QUALITY_IN_MASK_MASK    0x10
+#define    RTL8367B_SDS_FRC_MODE_OFFSET    3
+#define    RTL8367B_SDS_FRC_MODE_MASK    0x8
+#define    RTL8367B_SDS_MODE_OFFSET    0
+#define    RTL8367B_SDS_MODE_MASK    0x7
+
+#define    RTL8367B_REG_FIBER_CFG_2    0x13e8
+#define    RTL8367B_SEL_SDET_PS_OFFSET    12
+#define    RTL8367B_SEL_SDET_PS_MASK    0xF000
+#define    RTL8367B_UTP_DIS_RX_OFFSET    10
+#define    RTL8367B_UTP_DIS_RX_MASK    0xC00
+#define    RTL8367B_UTP_FRC_LD_OFFSET    8
+#define    RTL8367B_UTP_FRC_LD_MASK    0x300
+#define    RTL8367B_SDS_RX_DISABLE_OFFSET    6
+#define    RTL8367B_SDS_RX_DISABLE_MASK    0xC0
+#define    RTL8367B_SDS_TX_DISABLE_OFFSET    4
+#define    RTL8367B_SDS_TX_DISABLE_MASK    0x30
+#define    RTL8367B_SDS_PWR_ISO_OFFSET    2
+#define    RTL8367B_SDS_PWR_ISO_MASK    0xC
+#define    RTL8367B_SDS_FRC_LD_OFFSET    0
+#define    RTL8367B_SDS_FRC_LD_MASK    0x3
+
+#define    RTL8367B_REG_FIBER_CFG_3    0x13e9
+#define    RTL8367B_FIBER_CFG_3_OFFSET    0
+#define    RTL8367B_FIBER_CFG_3_MASK    0xFFF
+
+#define    RTL8367B_REG_FIBER_CFG_4    0x13ea
+
+#define    RTL8367B_REG_UTP_FIB_DET    0x13eb
+#define    RTL8367B_FORCE_SEL_FIBER_OFFSET    14
+#define    RTL8367B_FORCE_SEL_FIBER_MASK    0xC000
+#define    RTL8367B_FIB_FINAL_TIMER_OFFSET    12
+#define    RTL8367B_FIB_FINAL_TIMER_MASK    0x3000
+#define    RTL8367B_FIB_LINK_TIMER_OFFSET    10
+#define    RTL8367B_FIB_LINK_TIMER_MASK    0xC00
+#define    RTL8367B_FIB_SDET_TIMER_OFFSET    8
+#define    RTL8367B_FIB_SDET_TIMER_MASK    0x300
+#define    RTL8367B_UTP_LINK_TIMER_OFFSET    6
+#define    RTL8367B_UTP_LINK_TIMER_MASK    0xC0
+#define    RTL8367B_UTP_SDET_TIMER_OFFSET    4
+#define    RTL8367B_UTP_SDET_TIMER_MASK    0x30
+#define    RTL8367B_FORCE_AUTODET_OFFSET    3
+#define    RTL8367B_FORCE_AUTODET_MASK    0x8
+#define    RTL8367B_AUTODET_FSM_CLR_OFFSET    2
+#define    RTL8367B_AUTODET_FSM_CLR_MASK    0x4
+#define    RTL8367B_UTP_FIRST_OFFSET    1
+#define    RTL8367B_UTP_FIRST_MASK    0x2
+#define    RTL8367B_UTP_FIB_DISAUTODET_OFFSET    0
+#define    RTL8367B_UTP_FIB_DISAUTODET_MASK    0x1
+
+#define    RTL8367B_REG_NRESTORE_MAGIC_NUM    0x13ec
+#define    RTL8367B_NRESTORE_MAGIC_NUM_MASK    0xFFFF
+#define    RTL8367B_EEPROM_PROGRAM_CYCLE_OFFSET    0
+#define    RTL8367B_EEPROM_PROGRAM_CYCLE_MASK    0x3
+
+#define    RTL8367B_REG_MAC_ACTIVE    0x13ee
+#define    RTL8367B_FORCE_MAC_ACTIVE_OFFSET    8
+#define    RTL8367B_FORCE_MAC_ACTIVE_MASK    0x100
+#define    RTL8367B_MAC_ACTIVE_OFFSET    0
+#define    RTL8367B_MAC_ACTIVE_MASK    0xFF
+
+#define    RTL8367B_REG_SERDES_RESULT    0x13ef
+#define    RTL8367B_FIB100_DET_OFFSET    4
+#define    RTL8367B_FIB100_DET_MASK    0x10
+#define    RTL8367B_FIB_ISO_OFFSET    3
+#define    RTL8367B_FIB_ISO_MASK    0x8
+#define    RTL8367B_SDS_ANFAULT_OFFSET    2
+#define    RTL8367B_SDS_ANFAULT_MASK    0x4
+#define    RTL8367B_SDS_INTB_OFFSET    1
+#define    RTL8367B_SDS_INTB_MASK    0x2
+#define    RTL8367B_SDS_LINK_OK_OFFSET    0
+#define    RTL8367B_SDS_LINK_OK_MASK    0x1
+
+#define    RTL8367B_REG_CHIP_ECO    0x13f0
+#define    RTL8367B_CFG_CHIP_ECO_OFFSET    1
+#define    RTL8367B_CFG_CHIP_ECO_MASK    0xFFFE
+#define    RTL8367B_CFG_CKOUTEN_OFFSET    0
+#define    RTL8367B_CFG_CKOUTEN_MASK    0x1
+
+#define    RTL8367B_REG_WAKELPI_SLOT_PRD    0x13f1
+#define    RTL8367B_WAKELPI_SLOT_PRD_OFFSET    0
+#define    RTL8367B_WAKELPI_SLOT_PRD_MASK    0x1F
+
+#define    RTL8367B_REG_WAKELPI_SLOT_PG0    0x13f2
+#define    RTL8367B_WAKELPI_SLOT_P1_OFFSET    8
+#define    RTL8367B_WAKELPI_SLOT_P1_MASK    0x1F00
+#define    RTL8367B_WAKELPI_SLOT_P0_OFFSET    0
+#define    RTL8367B_WAKELPI_SLOT_P0_MASK    0x1F
+
+#define    RTL8367B_REG_WAKELPI_SLOT_PG1    0x13f3
+#define    RTL8367B_WAKELPI_SLOT_P3_OFFSET    8
+#define    RTL8367B_WAKELPI_SLOT_P3_MASK    0x1F00
+#define    RTL8367B_WAKELPI_SLOT_P2_OFFSET    0
+#define    RTL8367B_WAKELPI_SLOT_P2_MASK    0x1F
+
+#define    RTL8367B_REG_WAKELPI_SLOT_PG2    0x13f4
+#define    RTL8367B_WAKELPI_SLOT_P5_OFFSET    8
+#define    RTL8367B_WAKELPI_SLOT_P5_MASK    0x1F00
+#define    RTL8367B_WAKELPI_SLOT_P4_OFFSET    0
+#define    RTL8367B_WAKELPI_SLOT_P4_MASK    0x1F
+
+#define    RTL8367B_REG_WAKELPI_SLOT_PG3    0x13f5
+#define    RTL8367B_WAKELPI_SLOT_P7_OFFSET    8
+#define    RTL8367B_WAKELPI_SLOT_P7_MASK    0x1F00
+#define    RTL8367B_WAKELPI_SLOT_P6_OFFSET    0
+#define    RTL8367B_WAKELPI_SLOT_P6_MASK    0x1F
+
+#define    RTL8367B_REG_SYNC_FIFO_0    0x13f6
+#define    RTL8367B_SYNC_FIFO_TX_OFFSET    8
+#define    RTL8367B_SYNC_FIFO_TX_MASK    0x700
+#define    RTL8367B_SYNC_FIFO_RX_OFFSET    0
+#define    RTL8367B_SYNC_FIFO_RX_MASK    0xFF
+
+#define    RTL8367B_REG_SYNC_FIFO_1    0x13f7
+#define    RTL8367B_SYNC_FIFO_TX_ERR_OFFSET    8
+#define    RTL8367B_SYNC_FIFO_TX_ERR_MASK    0x700
+#define    RTL8367B_SYNC_FIFO_RX_ERR_OFFSET    0
+#define    RTL8367B_SYNC_FIFO_RX_ERR_MASK    0xFF
+
+#define    RTL8367B_REG_RGM_EEE    0x13f8
+#define    RTL8367B_EXT2_PAD_STOP_EN_OFFSET    14
+#define    RTL8367B_EXT2_PAD_STOP_EN_MASK    0x4000
+#define    RTL8367B_EXT1_PAD_STOP_EN_OFFSET    13
+#define    RTL8367B_EXT1_PAD_STOP_EN_MASK    0x2000
+#define    RTL8367B_EXT0_PAD_STOP_EN_OFFSET    12
+#define    RTL8367B_EXT0_PAD_STOP_EN_MASK    0x1000
+#define    RTL8367B_EXT2_CYCLE_PAD_OFFSET    8
+#define    RTL8367B_EXT2_CYCLE_PAD_MASK    0xF00
+#define    RTL8367B_EXT1_CYCLE_PAD_OFFSET    4
+#define    RTL8367B_EXT1_CYCLE_PAD_MASK    0xF0
+#define    RTL8367B_EXT0_CYCLE_PAD_OFFSET    0
+#define    RTL8367B_EXT0_CYCLE_PAD_MASK    0xF
+
+#define    RTL8367B_REG_EXT_TXC_DLY    0x13f9
+#define    RTL8367B_EXT1_GMII_TX_DELAY_OFFSET    12
+#define    RTL8367B_EXT1_GMII_TX_DELAY_MASK    0x7000
+#define    RTL8367B_EXT0_GMII_TX_DELAY_OFFSET    9
+#define    RTL8367B_EXT0_GMII_TX_DELAY_MASK    0xE00
+#define    RTL8367B_EXT2_RGMII_TX_DELAY_OFFSET    6
+#define    RTL8367B_EXT2_RGMII_TX_DELAY_MASK    0x1C0
+#define    RTL8367B_EXT1_RGMII_TX_DELAY_OFFSET    3
+#define    RTL8367B_EXT1_RGMII_TX_DELAY_MASK    0x38
+#define    RTL8367B_EXT0_RGMII_TX_DELAY_OFFSET    0
+#define    RTL8367B_EXT0_RGMII_TX_DELAY_MASK    0x7
+
+/* (16'h1400)mtrpool_reg */
+
+#define    RTL8367B_REG_METER0_RATE_CTRL0    0x1400
+
+#define    RTL8367B_REG_METER0_RATE_CTRL1    0x1401
+#define    RTL8367B_METER0_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER0_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER1_RATE_CTRL0    0x1402
+
+#define    RTL8367B_REG_METER1_RATE_CTRL1    0x1403
+#define    RTL8367B_METER1_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER1_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER2_RATE_CTRL0    0x1404
+
+#define    RTL8367B_REG_METER2_RATE_CTRL1    0x1405
+#define    RTL8367B_METER2_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER2_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER3_RATE_CTRL0    0x1406
+
+#define    RTL8367B_REG_METER3_RATE_CTRL1    0x1407
+#define    RTL8367B_METER3_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER3_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER4_RATE_CTRL0    0x1408
+
+#define    RTL8367B_REG_METER4_RATE_CTRL1    0x1409
+#define    RTL8367B_METER4_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER4_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER5_RATE_CTRL0    0x140a
+
+#define    RTL8367B_REG_METER5_RATE_CTRL1    0x140b
+#define    RTL8367B_METER5_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER5_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER6_RATE_CTRL0    0x140c
+
+#define    RTL8367B_REG_METER6_RATE_CTRL1    0x140d
+#define    RTL8367B_METER6_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER6_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER7_RATE_CTRL0    0x140e
+
+#define    RTL8367B_REG_METER7_RATE_CTRL1    0x140f
+#define    RTL8367B_METER7_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER7_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER8_RATE_CTRL0    0x1410
+
+#define    RTL8367B_REG_METER8_RATE_CTRL1    0x1411
+#define    RTL8367B_METER8_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER8_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER9_RATE_CTRL0    0x1412
+
+#define    RTL8367B_REG_METER9_RATE_CTRL1    0x1413
+#define    RTL8367B_METER9_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER9_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER10_RATE_CTRL0    0x1414
+
+#define    RTL8367B_REG_METER10_RATE_CTRL1    0x1415
+#define    RTL8367B_METER10_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER10_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER11_RATE_CTRL0    0x1416
+
+#define    RTL8367B_REG_METER11_RATE_CTRL1    0x1417
+#define    RTL8367B_METER11_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER11_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER12_RATE_CTRL0    0x1418
+
+#define    RTL8367B_REG_METER12_RATE_CTRL1    0x1419
+#define    RTL8367B_METER12_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER12_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER13_RATE_CTRL0    0x141a
+
+#define    RTL8367B_REG_METER13_RATE_CTRL1    0x141b
+#define    RTL8367B_METER13_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER13_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER14_RATE_CTRL0    0x141c
+
+#define    RTL8367B_REG_METER14_RATE_CTRL1    0x141d
+#define    RTL8367B_METER14_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER14_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER15_RATE_CTRL0    0x141e
+
+#define    RTL8367B_REG_METER15_RATE_CTRL1    0x141f
+#define    RTL8367B_METER15_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER15_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER16_RATE_CTRL0    0x1420
+
+#define    RTL8367B_REG_METER16_RATE_CTRL1    0x1421
+#define    RTL8367B_METER16_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER16_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER17_RATE_CTRL0    0x1422
+
+#define    RTL8367B_REG_METER17_RATE_CTRL1    0x1423
+#define    RTL8367B_METER17_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER17_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER18_RATE_CTRL0    0x1424
+
+#define    RTL8367B_REG_METER18_RATE_CTRL1    0x1425
+#define    RTL8367B_METER18_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER18_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER19_RATE_CTRL0    0x1426
+
+#define    RTL8367B_REG_METER19_RATE_CTRL1    0x1427
+#define    RTL8367B_METER19_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER19_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER20_RATE_CTRL0    0x1428
+
+#define    RTL8367B_REG_METER20_RATE_CTRL1    0x1429
+#define    RTL8367B_METER20_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER20_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER21_RATE_CTRL0    0x142a
+
+#define    RTL8367B_REG_METER21_RATE_CTRL1    0x142b
+#define    RTL8367B_METER21_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER21_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER22_RATE_CTRL0    0x142c
+
+#define    RTL8367B_REG_METER22_RATE_CTRL1    0x142d
+#define    RTL8367B_METER22_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER22_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER23_RATE_CTRL0    0x142e
+
+#define    RTL8367B_REG_METER23_RATE_CTRL1    0x142f
+#define    RTL8367B_METER23_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER23_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER24_RATE_CTRL0    0x1430
+
+#define    RTL8367B_REG_METER24_RATE_CTRL1    0x1431
+#define    RTL8367B_METER24_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER24_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER25_RATE_CTRL0    0x1432
+
+#define    RTL8367B_REG_METER25_RATE_CTRL1    0x1433
+#define    RTL8367B_METER25_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER25_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER26_RATE_CTRL0    0x1434
+
+#define    RTL8367B_REG_METER26_RATE_CTRL1    0x1435
+#define    RTL8367B_METER26_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER26_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER27_RATE_CTRL0    0x1436
+
+#define    RTL8367B_REG_METER27_RATE_CTRL1    0x1437
+#define    RTL8367B_METER27_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER27_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER28_RATE_CTRL0    0x1438
+
+#define    RTL8367B_REG_METER28_RATE_CTRL1    0x1439
+#define    RTL8367B_METER28_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER28_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER29_RATE_CTRL0    0x143a
+
+#define    RTL8367B_REG_METER29_RATE_CTRL1    0x143b
+#define    RTL8367B_METER29_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER29_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER30_RATE_CTRL0    0x143c
+
+#define    RTL8367B_REG_METER30_RATE_CTRL1    0x143d
+#define    RTL8367B_METER30_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER30_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER31_RATE_CTRL0    0x143e
+
+#define    RTL8367B_REG_METER31_RATE_CTRL1    0x143f
+#define    RTL8367B_METER31_RATE_CTRL1_OFFSET    0
+#define    RTL8367B_METER31_RATE_CTRL1_MASK    0x1
+
+#define    RTL8367B_REG_METER0_BUCKET_SIZE    0x1600
+
+#define    RTL8367B_REG_METER1_BUCKET_SIZE    0x1601
+
+#define    RTL8367B_REG_METER2_BUCKET_SIZE    0x1602
+
+#define    RTL8367B_REG_METER3_BUCKET_SIZE    0x1603
+
+#define    RTL8367B_REG_METER4_BUCKET_SIZE    0x1604
+
+#define    RTL8367B_REG_METER5_BUCKET_SIZE    0x1605
+
+#define    RTL8367B_REG_METER6_BUCKET_SIZE    0x1606
+
+#define    RTL8367B_REG_METER7_BUCKET_SIZE    0x1607
+
+#define    RTL8367B_REG_METER8_BUCKET_SIZE    0x1608
+
+#define    RTL8367B_REG_METER9_BUCKET_SIZE    0x1609
+
+#define    RTL8367B_REG_METER10_BUCKET_SIZE    0x160a
+
+#define    RTL8367B_REG_METER11_BUCKET_SIZE    0x160b
+
+#define    RTL8367B_REG_METER12_BUCKET_SIZE    0x160c
+
+#define    RTL8367B_REG_METER13_BUCKET_SIZE    0x160d
+
+#define    RTL8367B_REG_METER14_BUCKET_SIZE    0x160e
+
+#define    RTL8367B_REG_METER15_BUCKET_SIZE    0x160f
+
+#define    RTL8367B_REG_METER16_BUCKET_SIZE    0x1610
+
+#define    RTL8367B_REG_METER17_BUCKET_SIZE    0x1611
+
+#define    RTL8367B_REG_METER18_BUCKET_SIZE    0x1612
+
+#define    RTL8367B_REG_METER19_BUCKET_SIZE    0x1613
+
+#define    RTL8367B_REG_METER20_BUCKET_SIZE    0x1614
+
+#define    RTL8367B_REG_METER21_BUCKET_SIZE    0x1615
+
+#define    RTL8367B_REG_METER22_BUCKET_SIZE    0x1616
+
+#define    RTL8367B_REG_METER23_BUCKET_SIZE    0x1617
+
+#define    RTL8367B_REG_METER24_BUCKET_SIZE    0x1618
+
+#define    RTL8367B_REG_METER25_BUCKET_SIZE    0x1619
+
+#define    RTL8367B_REG_METER26_BUCKET_SIZE    0x161a
+
+#define    RTL8367B_REG_METER27_BUCKET_SIZE    0x161b
+
+#define    RTL8367B_REG_METER28_BUCKET_SIZE    0x161c
+
+#define    RTL8367B_REG_METER29_BUCKET_SIZE    0x161d
+
+#define    RTL8367B_REG_METER30_BUCKET_SIZE    0x161e
+
+#define    RTL8367B_REG_METER31_BUCKET_SIZE    0x161f
+
+#define    RTL8367B_REG_METER_CTRL0    0x1700
+#define    RTL8367B_METER_OP_OFFSET    8
+#define    RTL8367B_METER_OP_MASK    0x100
+#define    RTL8367B_METER_TICK_OFFSET    0
+#define    RTL8367B_METER_TICK_MASK    0xFF
+
+#define    RTL8367B_REG_METER_CTRL1    0x1701
+#define    RTL8367B_METER_CTRL1_OFFSET    0
+#define    RTL8367B_METER_CTRL1_MASK    0xFF
+
+#define    RTL8367B_REG_METER_OVERRATE_INDICATOR0    0x1702
+
+#define    RTL8367B_REG_METER_OVERRATE_INDICATOR1    0x1703
+
+#define    RTL8367B_REG_METER_OVERRATE_INDICATOR0_8051    0x1704
+
+#define    RTL8367B_REG_METER_OVERRATE_INDICATOR1_8051    0x1705
+
+#define    RTL8367B_REG_METER_IFG_CTRL0    0x1712
+#define    RTL8367B_METER15_IFG_OFFSET    15
+#define    RTL8367B_METER15_IFG_MASK    0x8000
+#define    RTL8367B_METER14_IFG_OFFSET    14
+#define    RTL8367B_METER14_IFG_MASK    0x4000
+#define    RTL8367B_METER13_IFG_OFFSET    13
+#define    RTL8367B_METER13_IFG_MASK    0x2000
+#define    RTL8367B_METER12_IFG_OFFSET    12
+#define    RTL8367B_METER12_IFG_MASK    0x1000
+#define    RTL8367B_METER11_IFG_OFFSET    11
+#define    RTL8367B_METER11_IFG_MASK    0x800
+#define    RTL8367B_METER10_IFG_OFFSET    10
+#define    RTL8367B_METER10_IFG_MASK    0x400
+#define    RTL8367B_METER9_IFG_OFFSET    9
+#define    RTL8367B_METER9_IFG_MASK    0x200
+#define    RTL8367B_METER8_IFG_OFFSET    8
+#define    RTL8367B_METER8_IFG_MASK    0x100
+#define    RTL8367B_METER7_IFG_OFFSET    7
+#define    RTL8367B_METER7_IFG_MASK    0x80
+#define    RTL8367B_METER6_IFG_OFFSET    6
+#define    RTL8367B_METER6_IFG_MASK    0x40
+#define    RTL8367B_METER5_IFG_OFFSET    5
+#define    RTL8367B_METER5_IFG_MASK    0x20
+#define    RTL8367B_METER4_IFG_OFFSET    4
+#define    RTL8367B_METER4_IFG_MASK    0x10
+#define    RTL8367B_METER3_IFG_OFFSET    3
+#define    RTL8367B_METER3_IFG_MASK    0x8
+#define    RTL8367B_METER2_IFG_OFFSET    2
+#define    RTL8367B_METER2_IFG_MASK    0x4
+#define    RTL8367B_METER1_IFG_OFFSET    1
+#define    RTL8367B_METER1_IFG_MASK    0x2
+#define    RTL8367B_METER0_IFG_OFFSET    0
+#define    RTL8367B_METER0_IFG_MASK    0x1
+
+#define    RTL8367B_REG_METER_IFG_CTRL1    0x1713
+#define    RTL8367B_METER31_IFG_OFFSET    15
+#define    RTL8367B_METER31_IFG_MASK    0x8000
+#define    RTL8367B_METER30_IFG_OFFSET    14
+#define    RTL8367B_METER30_IFG_MASK    0x4000
+#define    RTL8367B_METER29_IFG_OFFSET    13
+#define    RTL8367B_METER29_IFG_MASK    0x2000
+#define    RTL8367B_METER28_IFG_OFFSET    12
+#define    RTL8367B_METER28_IFG_MASK    0x1000
+#define    RTL8367B_METER27_IFG_OFFSET    11
+#define    RTL8367B_METER27_IFG_MASK    0x800
+#define    RTL8367B_METER26_IFG_OFFSET    10
+#define    RTL8367B_METER26_IFG_MASK    0x400
+#define    RTL8367B_METER25_IFG_OFFSET    9
+#define    RTL8367B_METER25_IFG_MASK    0x200
+#define    RTL8367B_METER24_IFG_OFFSET    8
+#define    RTL8367B_METER24_IFG_MASK    0x100
+#define    RTL8367B_METER23_IFG_OFFSET    7
+#define    RTL8367B_METER23_IFG_MASK    0x80
+#define    RTL8367B_METER22_IFG_OFFSET    6
+#define    RTL8367B_METER22_IFG_MASK    0x40
+#define    RTL8367B_METER21_IFG_OFFSET    5
+#define    RTL8367B_METER21_IFG_MASK    0x20
+#define    RTL8367B_METER20_IFG_OFFSET    4
+#define    RTL8367B_METER20_IFG_MASK    0x10
+#define    RTL8367B_METER19_IFG_OFFSET    3
+#define    RTL8367B_METER19_IFG_MASK    0x8
+#define    RTL8367B_METER18_IFG_OFFSET    2
+#define    RTL8367B_METER18_IFG_MASK    0x4
+#define    RTL8367B_METER17_IFG_OFFSET    1
+#define    RTL8367B_METER17_IFG_MASK    0x2
+#define    RTL8367B_METER16_IFG_OFFSET    0
+#define    RTL8367B_METER16_IFG_MASK    0x1
+
+#define    RTL8367B_REG_METER_CTRL2    0x1722
+#define    RTL8367B_cfg_mtr_tick_8g_OFFSET    8
+#define    RTL8367B_cfg_mtr_tick_8g_MASK    0xFF00
+#define    RTL8367B_cfg_mtr_dec_cnt_8g_OFFSET    0
+#define    RTL8367B_cfg_mtr_dec_cnt_8g_MASK    0xFF
+
+#define    RTL8367B_REG_DUMMY_1723    0x1723
+
+#define    RTL8367B_REG_DUMMY_1724    0x1724
+
+#define    RTL8367B_REG_DUMMY_1725    0x1725
+
+#define    RTL8367B_REG_DUMMY_1726    0x1726
+
+#define    RTL8367B_REG_DUMMY_1727    0x1727
+
+#define    RTL8367B_REG_DUMMY_1728    0x1728
+
+#define    RTL8367B_REG_DUMMY_1729    0x1729
+
+#define    RTL8367B_REG_DUMMY_172A    0x172a
+
+#define    RTL8367B_REG_DUMMY_172B    0x172b
+
+#define    RTL8367B_REG_DUMMY_172C    0x172c
+
+#define    RTL8367B_REG_DUMMY_172D    0x172d
+
+#define    RTL8367B_REG_DUMMY_172E    0x172e
+
+#define    RTL8367B_REG_DUMMY_172F    0x172f
+
+#define    RTL8367B_REG_DUMMY_1730    0x1730
+
+#define    RTL8367B_REG_DUMMY_1731    0x1731
+
+/* (16'h1800)8051_RLDP_EEE_reg */
+
+#define    RTL8367B_REG_EEELLDP_CTRL0    0x1820
+#define    RTL8367B_EEELLDP_SUBTYPE_OFFSET    6
+#define    RTL8367B_EEELLDP_SUBTYPE_MASK    0x3FC0
+#define    RTL8367B_EEELLDP_TRAP_8051_OFFSET    2
+#define    RTL8367B_EEELLDP_TRAP_8051_MASK    0x4
+#define    RTL8367B_EEELLDP_TRAP_CPU_OFFSET    1
+#define    RTL8367B_EEELLDP_TRAP_CPU_MASK    0x2
+#define    RTL8367B_EEELLDP_ENABLE_OFFSET    0
+#define    RTL8367B_EEELLDP_ENABLE_MASK    0x1
+
+#define    RTL8367B_REG_EEELLDP_PMSK    0x1822
+#define    RTL8367B_EEELLDP_PMSK_OFFSET    0
+#define    RTL8367B_EEELLDP_PMSK_MASK    0xFF
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_08    0x1843
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_07    0x1844
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_06    0x1845
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_05    0x1846
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_04    0x1847
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_03    0x1848
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_02    0x1849
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_01    0x184a
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P00_00    0x184b
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_08    0x184c
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_07    0x184d
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_06    0x184e
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_05    0x184f
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_04    0x1850
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_03    0x1851
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_02    0x1852
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_01    0x1853
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P01_00    0x1854
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_08    0x1855
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_07    0x1856
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_06    0x1857
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_05    0x1858
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_04    0x1859
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_03    0x185a
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_02    0x185b
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_01    0x185c
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P02_00    0x185d
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_08    0x185e
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_07    0x185f
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_06    0x1860
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_05    0x1861
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_04    0x1862
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_03    0x1863
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_02    0x1864
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_01    0x1865
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P03_00    0x1866
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_08    0x1867
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_07    0x1868
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_06    0x1869
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_05    0x186a
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_04    0x186b
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_03    0x186c
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_02    0x186d
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_01    0x186e
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P04_00    0x186f
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_08    0x1870
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_07    0x1871
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_06    0x1872
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_05    0x1873
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_04    0x1874
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_03    0x1875
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_02    0x1876
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_01    0x1877
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P05_00    0x1878
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_08    0x1879
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_07    0x187a
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_06    0x187b
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_05    0x187c
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_04    0x187d
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_03    0x187e
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_02    0x187f
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_01    0x1880
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P06_00    0x1881
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_08    0x1882
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_07    0x1883
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_06    0x1884
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_05    0x1885
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_04    0x1886
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_03    0x1887
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_02    0x1888
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_01    0x1889
+
+#define    RTL8367B_REG_EEELLDP_RX_VALUE_P07_00    0x188a
+
+#define    RTL8367B_REG_RLDP_CTRL0    0x18e0
+#define    RTL8367B_RLDP_TRIGGER_MODE_OFFSET    14
+#define    RTL8367B_RLDP_TRIGGER_MODE_MASK    0x4000
+#define    RTL8367B_RLDP_8051_LOOP_PORTMSK_OFFSET    6
+#define    RTL8367B_RLDP_8051_LOOP_PORTMSK_MASK    0x3FC0
+#define    RTL8367B_RLPP_8051_TRAP_OFFSET    5
+#define    RTL8367B_RLPP_8051_TRAP_MASK    0x20
+#define    RTL8367B_RLDP_INDICATOR_SOURCE_OFFSET    4
+#define    RTL8367B_RLDP_INDICATOR_SOURCE_MASK    0x10
+#define    RTL8367B_RLDP_GEN_RANDOM_OFFSET    3
+#define    RTL8367B_RLDP_GEN_RANDOM_MASK    0x8
+#define    RTL8367B_RLDP_COMP_ID_OFFSET    2
+#define    RTL8367B_RLDP_COMP_ID_MASK    0x4
+#define    RTL8367B_RLDP_8051_ENABLE_OFFSET    1
+#define    RTL8367B_RLDP_8051_ENABLE_MASK    0x2
+#define    RTL8367B_RLDP_ENABLE_OFFSET    0
+#define    RTL8367B_RLDP_ENABLE_MASK    0x1
+
+#define    RTL8367B_REG_RLDP_CTRL1    0x18e1
+#define    RTL8367B_RLDP_RETRY_COUNT_LOOPSTATE_OFFSET    8
+#define    RTL8367B_RLDP_RETRY_COUNT_LOOPSTATE_MASK    0xFF00
+#define    RTL8367B_RLDP_RETRY_COUNT_CHKSTATE_OFFSET    0
+#define    RTL8367B_RLDP_RETRY_COUNT_CHKSTATE_MASK    0xFF
+
+#define    RTL8367B_REG_RLDP_CTRL2    0x18e2
+
+#define    RTL8367B_REG_RLDP_CTRL3    0x18e3
+
+#define    RTL8367B_REG_RLDP_CTRL4    0x18e4
+#define    RTL8367B_RLDP_CTRL4_OFFSET    0
+#define    RTL8367B_RLDP_CTRL4_MASK    0xFF
+
+#define    RTL8367B_REG_RLDP_RAND_NUM0    0x18e5
+
+#define    RTL8367B_REG_RLDP_RAND_NUM1    0x18e6
+
+#define    RTL8367B_REG_RLDP_RAND_NUM2    0x18e7
+
+#define    RTL8367B_REG_RLDP_MAGIC_NUM0    0x18e8
+
+#define    RTL8367B_REG_RLDP_MAGIC_NUM1    0x18e9
+
+#define    RTL8367B_REG_RLDP_MAGIC_NUM2    0x18ea
+
+#define    RTL8367B_REG_RLDP_LOOPED_INDICATOR    0x18eb
+#define    RTL8367B_RLDP_LOOPED_INDICATOR_OFFSET    0
+#define    RTL8367B_RLDP_LOOPED_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_RLDP_LOOP_PORT_REG0    0x18ec
+#define    RTL8367B_RLDP_LOOP_PORT_01_OFFSET    8
+#define    RTL8367B_RLDP_LOOP_PORT_01_MASK    0x700
+#define    RTL8367B_RLDP_LOOP_PORT_00_OFFSET    0
+#define    RTL8367B_RLDP_LOOP_PORT_00_MASK    0x7
+
+#define    RTL8367B_REG_RLDP_LOOP_PORT_REG1    0x18ed
+#define    RTL8367B_RLDP_LOOP_PORT_03_OFFSET    8
+#define    RTL8367B_RLDP_LOOP_PORT_03_MASK    0x700
+#define    RTL8367B_RLDP_LOOP_PORT_02_OFFSET    0
+#define    RTL8367B_RLDP_LOOP_PORT_02_MASK    0x7
+
+#define    RTL8367B_REG_RLDP_LOOP_PORT_REG2    0x18ee
+#define    RTL8367B_RLDP_LOOP_PORT_05_OFFSET    8
+#define    RTL8367B_RLDP_LOOP_PORT_05_MASK    0x700
+#define    RTL8367B_RLDP_LOOP_PORT_04_OFFSET    0
+#define    RTL8367B_RLDP_LOOP_PORT_04_MASK    0x7
+
+#define    RTL8367B_REG_RLDP_LOOP_PORT_REG3    0x18ef
+#define    RTL8367B_RLDP_LOOP_PORT_07_OFFSET    8
+#define    RTL8367B_RLDP_LOOP_PORT_07_MASK    0x700
+#define    RTL8367B_RLDP_LOOP_PORT_06_OFFSET    0
+#define    RTL8367B_RLDP_LOOP_PORT_06_MASK    0x7
+
+#define    RTL8367B_REG_RLDP_RELEASED_INDICATOR    0x18f0
+#define    RTL8367B_RLDP_RELEASED_INDICATOR_OFFSET    0
+#define    RTL8367B_RLDP_RELEASED_INDICATOR_MASK    0xFF
+
+#define    RTL8367B_REG_RLDP_LOOPSTATUS_INDICATOR    0x18f1
+#define    RTL8367B_RLDP_LOOPSTATUS_INDICATOR_OFFSET    0
+#define    RTL8367B_RLDP_LOOPSTATUS_INDICATOR_MASK    0xFF
+
+/* (16'h1a00)nic_reg */
+
+#define    RTL8367B_REG_NIC_RXRDRL    0x1a04
+#define    RTL8367B_NIC_RXRDRL_OFFSET    0
+#define    RTL8367B_NIC_RXRDRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_RXRDRH    0x1a05
+#define    RTL8367B_NIC_RXRDRH_OFFSET    0
+#define    RTL8367B_NIC_RXRDRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_TXASRL    0x1a08
+#define    RTL8367B_NIC_TXASRL_OFFSET    0
+#define    RTL8367B_NIC_TXASRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_TXASRH    0x1a09
+#define    RTL8367B_NIC_TXASRH_OFFSET    0
+#define    RTL8367B_NIC_TXASRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_RXCMDR    0x1a0c
+#define    RTL8367B_NIC_RXCMDR_OFFSET    0
+#define    RTL8367B_NIC_RXCMDR_MASK    0x1
+
+#define    RTL8367B_REG_NIC_TXCMDR    0x1a0d
+#define    RTL8367B_NIC_TXCMDR_OFFSET    0
+#define    RTL8367B_NIC_TXCMDR_MASK    0x1
+
+#define    RTL8367B_REG_NIC_IMS    0x1a0e
+#define    RTL8367B_NIC_RXIS_OFFSET    7
+#define    RTL8367B_NIC_RXIS_MASK    0x80
+#define    RTL8367B_NIC_TXIS_OFFSET    6
+#define    RTL8367B_NIC_TXIS_MASK    0x40
+#define    RTL8367B_NIC_TXES_OFFSET    5
+#define    RTL8367B_NIC_TXES_MASK    0x20
+#define    RTL8367B_NIC_IMS_DMY_OFFSET    4
+#define    RTL8367B_NIC_IMS_DMY_MASK    0x10
+#define    RTL8367B_NIC_RXBUS_OFFSET    3
+#define    RTL8367B_NIC_RXBUS_MASK    0x8
+#define    RTL8367B_NIC_TXBOS_OFFSET    2
+#define    RTL8367B_NIC_TXBOS_MASK    0x4
+#define    RTL8367B_NIC_RXMIS_OFFSET    1
+#define    RTL8367B_NIC_RXMIS_MASK    0x2
+#define    RTL8367B_NIC_TXNLS_OFFSET    0
+#define    RTL8367B_NIC_TXNLS_MASK    0x1
+
+#define    RTL8367B_REG_NIC_IMR    0x1a0f
+#define    RTL8367B_NIC_RXIE_OFFSET    7
+#define    RTL8367B_NIC_RXIE_MASK    0x80
+#define    RTL8367B_NIC_TXIE_OFFSET    6
+#define    RTL8367B_NIC_TXIE_MASK    0x40
+#define    RTL8367B_NIC_TXEE_OFFSET    5
+#define    RTL8367B_NIC_TXEE_MASK    0x20
+#define    RTL8367B_NIC_IMR_DMY_OFFSET    4
+#define    RTL8367B_NIC_IMR_DMY_MASK    0x10
+#define    RTL8367B_NIC_RXBUE_OFFSET    3
+#define    RTL8367B_NIC_RXBUE_MASK    0x8
+#define    RTL8367B_NIC_TXBOE_OFFSET    2
+#define    RTL8367B_NIC_TXBOE_MASK    0x4
+#define    RTL8367B_NIC_RXMIE_OFFSET    1
+#define    RTL8367B_NIC_RXMIE_MASK    0x2
+#define    RTL8367B_NIC_TXNLE_OFFSET    0
+#define    RTL8367B_NIC_TXNLE_MASK    0x1
+
+#define    RTL8367B_REG_NIC_RXCR0    0x1a14
+#define    RTL8367B_NIC_HFPPE_OFFSET    7
+#define    RTL8367B_NIC_HFPPE_MASK    0x80
+#define    RTL8367B_NIC_HFMPE_OFFSET    6
+#define    RTL8367B_NIC_HFMPE_MASK    0x40
+#define    RTL8367B_NIC_RXBPE_OFFSET    5
+#define    RTL8367B_NIC_RXBPE_MASK    0x20
+#define    RTL8367B_NIC_RXMPE_OFFSET    4
+#define    RTL8367B_NIC_RXMPE_MASK    0x10
+#define    RTL8367B_NIC_RXPPS_OFFSET    2
+#define    RTL8367B_NIC_RXPPS_MASK    0xC
+#define    RTL8367B_NIC_RXAPE_OFFSET    1
+#define    RTL8367B_NIC_RXAPE_MASK    0x2
+#define    RTL8367B_NIC_ARPPE_OFFSET    0
+#define    RTL8367B_NIC_ARPPE_MASK    0x1
+
+#define    RTL8367B_REG_NIC_RXCR1    0x1a15
+#define    RTL8367B_NIC_RL4CEPE_OFFSET    4
+#define    RTL8367B_NIC_RL4CEPE_MASK    0x10
+#define    RTL8367B_NIC_RL3CEPE_OFFSET    3
+#define    RTL8367B_NIC_RL3CEPE_MASK    0x8
+#define    RTL8367B_NIC_RCRCEPE_OFFSET    2
+#define    RTL8367B_NIC_RCRCEPE_MASK    0x4
+#define    RTL8367B_NIC_RMCRC_OFFSET    1
+#define    RTL8367B_NIC_RMCRC_MASK    0x2
+#define    RTL8367B_NIC_RXENABLE_OFFSET    0
+#define    RTL8367B_NIC_RXENABLE_MASK    0x1
+
+#define    RTL8367B_REG_NIC_TXCR    0x1a16
+#define    RTL8367B_NIC_LBE_OFFSET    2
+#define    RTL8367B_NIC_LBE_MASK    0x4
+#define    RTL8367B_NIC_TXMFM_OFFSET    1
+#define    RTL8367B_NIC_TXMFM_MASK    0x2
+#define    RTL8367B_NIC_TXENABLE_OFFSET    0
+#define    RTL8367B_NIC_TXENABLE_MASK    0x1
+
+#define    RTL8367B_REG_NIC_GCR    0x1a17
+#define    RTL8367B_DUMMY_7_6_OFFSET    6
+#define    RTL8367B_DUMMY_7_6_MASK    0xC0
+#define    RTL8367B_NIC_RXMTU_OFFSET    4
+#define    RTL8367B_NIC_RXMTU_MASK    0x30
+#define    RTL8367B_DUMMY_0_OFFSET    0
+#define    RTL8367B_DUMMY_0_MASK    0x1
+
+#define    RTL8367B_REG_NIC_MHR0    0x1a24
+#define    RTL8367B_NIC_MHR0_OFFSET    0
+#define    RTL8367B_NIC_MHR0_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR1    0x1a25
+#define    RTL8367B_NIC_MHR1_OFFSET    0
+#define    RTL8367B_NIC_MHR1_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR2    0x1a26
+#define    RTL8367B_NIC_MHR2_OFFSET    0
+#define    RTL8367B_NIC_MHR2_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR3    0x1a27
+#define    RTL8367B_NIC_MHR3_OFFSET    0
+#define    RTL8367B_NIC_MHR3_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR4    0x1a28
+#define    RTL8367B_NIC_MHR4_OFFSET    0
+#define    RTL8367B_NIC_MHR4_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR5    0x1a29
+#define    RTL8367B_NIC_MHR5_OFFSET    0
+#define    RTL8367B_NIC_MHR5_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR6    0x1a2a
+#define    RTL8367B_NIC_MHR6_OFFSET    0
+#define    RTL8367B_NIC_MHR6_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_MHR7    0x1a2b
+#define    RTL8367B_NIC_MHR7_OFFSET    0
+#define    RTL8367B_NIC_MHR7_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR0    0x1a2c
+#define    RTL8367B_NIC_PAHR0_OFFSET    0
+#define    RTL8367B_NIC_PAHR0_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR1    0x1a2d
+#define    RTL8367B_NIC_PAHR1_OFFSET    0
+#define    RTL8367B_NIC_PAHR1_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR2    0x1a2e
+#define    RTL8367B_NIC_PAHR2_OFFSET    0
+#define    RTL8367B_NIC_PAHR2_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR3    0x1a2f
+#define    RTL8367B_NIC_PAHR3_OFFSET    0
+#define    RTL8367B_NIC_PAHR3_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR4    0x1a30
+#define    RTL8367B_NIC_PAHR4_OFFSET    0
+#define    RTL8367B_NIC_PAHR4_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR5    0x1a31
+#define    RTL8367B_NIC_PAHR5_OFFSET    0
+#define    RTL8367B_NIC_PAHR5_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR6    0x1a32
+#define    RTL8367B_NIC_PAHR6_OFFSET    0
+#define    RTL8367B_NIC_PAHR6_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_PAHR7    0x1a33
+#define    RTL8367B_NIC_PAHR7_OFFSET    0
+#define    RTL8367B_NIC_PAHR7_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_TXSTOPRL    0x1a44
+#define    RTL8367B_NIC_TXSTOPRL_OFFSET    0
+#define    RTL8367B_NIC_TXSTOPRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_TXSTOPRH    0x1a45
+#define    RTL8367B_NIC_TXSTOPRH_OFFSET    0
+#define    RTL8367B_NIC_TXSTOPRH_MASK    0x3
+
+#define    RTL8367B_REG_NIC_RXSTOPRL    0x1a46
+#define    RTL8367B_NIC_RXSTOPRL_OFFSET    0
+#define    RTL8367B_NIC_RXSTOPRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_RXSTOPRH    0x1a47
+#define    RTL8367B_NIC_RXSTOPRH_OFFSET    0
+#define    RTL8367B_NIC_RXSTOPRH_MASK    0x3
+
+#define    RTL8367B_REG_NIC_RXFSTR    0x1a48
+#define    RTL8367B_NIC_RXFSTR_OFFSET    0
+#define    RTL8367B_NIC_RXFSTR_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_RXMBTRL    0x1a4c
+#define    RTL8367B_NIC_RXMBTRL_OFFSET    0
+#define    RTL8367B_NIC_RXMBTRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_RXMBTRH    0x1a4d
+#define    RTL8367B_NIC_RXMBTRH_OFFSET    0
+#define    RTL8367B_NIC_RXMBTRH_MASK    0x7F
+
+#define    RTL8367B_REG_NIC_RXMPTR    0x1a4e
+#define    RTL8367B_NIC_RXMPTR_OFFSET    0
+#define    RTL8367B_NIC_RXMPTR_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_T0TR    0x1a4f
+#define    RTL8367B_NIC_T0TR_OFFSET    0
+#define    RTL8367B_NIC_T0TR_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_CRXCPRL    0x1a50
+#define    RTL8367B_NIC_CRXCPRL_OFFSET    0
+#define    RTL8367B_NIC_CRXCPRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_CRXCPRH    0x1a51
+#define    RTL8367B_NIC_CRXCPRH_OFFSET    0
+#define    RTL8367B_NIC_CRXCPRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_CTXCPRL    0x1a52
+#define    RTL8367B_NIC_CTXCPRL_OFFSET    0
+#define    RTL8367B_NIC_CTXCPRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_CTXPCRH    0x1a53
+#define    RTL8367B_NIC_CTXPCRH_OFFSET    0
+#define    RTL8367B_NIC_CTXPCRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_SRXCURPKTRL    0x1a54
+#define    RTL8367B_NIC_SRXCURPKTRL_OFFSET    0
+#define    RTL8367B_NIC_SRXCURPKTRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_SRXCURPKTRH    0x1a55
+#define    RTL8367B_NIC_SRXCURPKTRH_OFFSET    0
+#define    RTL8367B_NIC_SRXCURPKTRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXCURPKTRL    0x1a56
+#define    RTL8367B_NIC_STXCURPKTRL_OFFSET    0
+#define    RTL8367B_NIC_STXCURPKTRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXCURPKTRH    0x1a57
+#define    RTL8367B_NIC_STXCURPKTRH_OFFSET    0
+#define    RTL8367B_NIC_STXCURPKTRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXPKTLENRL    0x1a58
+#define    RTL8367B_NIC_STXPKTLENRL_OFFSET    0
+#define    RTL8367B_NIC_STXPKTLENRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXPKTLENRH    0x1a59
+#define    RTL8367B_NIC_STXPKTLENRH_OFFSET    0
+#define    RTL8367B_NIC_STXPKTLENRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXCURUNITRL    0x1a5a
+#define    RTL8367B_NIC_STXCURUNITRL_OFFSET    0
+#define    RTL8367B_NIC_STXCURUNITRL_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_STXCURUNITRH    0x1a5b
+#define    RTL8367B_NIC_STXCURUNITRH_OFFSET    0
+#define    RTL8367B_NIC_STXCURUNITRH_MASK    0xFF
+
+#define    RTL8367B_REG_NIC_DROP_MODE    0x1a5c
+#define    RTL8367B_NIC_DROP_MODE_OFFSET    0
+#define    RTL8367B_NIC_DROP_MODE_MASK    0x1
+
+/* (16'h1b00)LED */
+
+#define    RTL8367B_REG_LED_SYS_CONFIG    0x1b00
+#define    RTL8367B_LED_SYS_CONFIG_DUMMY_15_OFFSET    15
+#define    RTL8367B_LED_SYS_CONFIG_DUMMY_15_MASK    0x8000
+#define    RTL8367B_LED_SERIAL_OUT_MODE_OFFSET    14
+#define    RTL8367B_LED_SERIAL_OUT_MODE_MASK    0x4000
+#define    RTL8367B_LED_EEE_LPI_MODE_OFFSET    13
+#define    RTL8367B_LED_EEE_LPI_MODE_MASK    0x2000
+#define    RTL8367B_LED_EEE_LPI_EN_OFFSET    12
+#define    RTL8367B_LED_EEE_LPI_EN_MASK    0x1000
+#define    RTL8367B_LED_EEE_LPI_10_OFFSET    11
+#define    RTL8367B_LED_EEE_LPI_10_MASK    0x800
+#define    RTL8367B_LED_EEE_CAP_10_OFFSET    10
+#define    RTL8367B_LED_EEE_CAP_10_MASK    0x400
+#define    RTL8367B_LED_LPI_SEL_OFFSET    8
+#define    RTL8367B_LED_LPI_SEL_MASK    0x300
+#define    RTL8367B_SERI_LED_ACT_LOW_OFFSET    7
+#define    RTL8367B_SERI_LED_ACT_LOW_MASK    0x80
+#define    RTL8367B_LED_POWERON_2_OFFSET    6
+#define    RTL8367B_LED_POWERON_2_MASK    0x40
+#define    RTL8367B_LED_POWERON_1_OFFSET    5
+#define    RTL8367B_LED_POWERON_1_MASK    0x20
+#define    RTL8367B_LED_POWERON_0_OFFSET    4
+#define    RTL8367B_LED_POWERON_0_MASK    0x10
+#define    RTL8367B_LED_IO_DISABLE_OFFSET    3
+#define    RTL8367B_LED_IO_DISABLE_MASK    0x8
+#define    RTL8367B_DUMMY_2_1_OFFSET    1
+#define    RTL8367B_DUMMY_2_1_MASK    0x6
+#define    RTL8367B_LED_SELECT_OFFSET    0
+#define    RTL8367B_LED_SELECT_MASK    0x1
+
+#define    RTL8367B_REG_LED_SYS_CONFIG2    0x1b01
+#define    RTL8367B_LED_SYS_CONFIG2_DUMMY_OFFSET    2
+#define    RTL8367B_LED_SYS_CONFIG2_DUMMY_MASK    0xFFFC
+#define    RTL8367B_GATE_LPTD_BYPASS_OFFSET    1
+#define    RTL8367B_GATE_LPTD_BYPASS_MASK    0x2
+#define    RTL8367B_LED_SPD_MODE_OFFSET    0
+#define    RTL8367B_LED_SPD_MODE_MASK    0x1
+
+#define    RTL8367B_REG_LED_MODE    0x1b02
+#define    RTL8367B_DLINK_TIME_OFFSET    15
+#define    RTL8367B_DLINK_TIME_MASK    0x8000
+#define    RTL8367B_LED_BUZZ_DUTY_OFFSET    14
+#define    RTL8367B_LED_BUZZ_DUTY_MASK    0x4000
+#define    RTL8367B_BUZZER_RATE_OFFSET    12
+#define    RTL8367B_BUZZER_RATE_MASK    0x3000
+#define    RTL8367B_LOOP_DETECT_MODE_OFFSET    11
+#define    RTL8367B_LOOP_DETECT_MODE_MASK    0x800
+#define    RTL8367B_SEL_PWRON_TIME_OFFSET    9
+#define    RTL8367B_SEL_PWRON_TIME_MASK    0x600
+#define    RTL8367B_EN_DLINK_LED_OFFSET    8
+#define    RTL8367B_EN_DLINK_LED_MASK    0x100
+#define    RTL8367B_LOOP_DETECT_RATE_OFFSET    6
+#define    RTL8367B_LOOP_DETECT_RATE_MASK    0xC0
+#define    RTL8367B_FORCE_RATE_OFFSET    4
+#define    RTL8367B_FORCE_RATE_MASK    0x30
+#define    RTL8367B_SEL_LEDRATE_OFFSET    1
+#define    RTL8367B_SEL_LEDRATE_MASK    0xE
+#define    RTL8367B_SPEED_UP_OFFSET    0
+#define    RTL8367B_SPEED_UP_MASK    0x1
+
+#define    RTL8367B_REG_LED_CONFIGURATION    0x1b03
+#define    RTL8367B_LED_CONFIGURATION_DUMMY_OFFSET    15
+#define    RTL8367B_LED_CONFIGURATION_DUMMY_MASK    0x8000
+#define    RTL8367B_LED_CONFIG_SEL_OFFSET    14
+#define    RTL8367B_LED_CONFIG_SEL_MASK    0x4000
+#define    RTL8367B_DATA_LED_OFFSET    12
+#define    RTL8367B_DATA_LED_MASK    0x3000
+#define    RTL8367B_LED2_CFG_OFFSET    8
+#define    RTL8367B_LED2_CFG_MASK    0xF00
+#define    RTL8367B_LED1_CFG_OFFSET    4
+#define    RTL8367B_LED1_CFG_MASK    0xF0
+#define    RTL8367B_LED0_CFG_OFFSET    0
+#define    RTL8367B_LED0_CFG_MASK    0xF
+
+#define    RTL8367B_REG_RTCT_RESULTS_CFG    0x1b04
+#define    RTL8367B_RTCT_2PAIR_FTT_OFFSET    15
+#define    RTL8367B_RTCT_2PAIR_FTT_MASK    0x8000
+#define    RTL8367B_RTCT_2PAIR_MODE_OFFSET    14
+#define    RTL8367B_RTCT_2PAIR_MODE_MASK    0x4000
+#define    RTL8367B_BLINK_EN_OFFSET    13
+#define    RTL8367B_BLINK_EN_MASK    0x2000
+#define    RTL8367B_TIMEOUT_OFFSET    12
+#define    RTL8367B_TIMEOUT_MASK    0x1000
+#define    RTL8367B_EN_CD_SAME_SHORT_OFFSET    11
+#define    RTL8367B_EN_CD_SAME_SHORT_MASK    0x800
+#define    RTL8367B_EN_CD_SAME_OPEN_OFFSET    10
+#define    RTL8367B_EN_CD_SAME_OPEN_MASK    0x400
+#define    RTL8367B_EN_CD_SAME_LINEDRIVER_OFFSET    9
+#define    RTL8367B_EN_CD_SAME_LINEDRIVER_MASK    0x200
+#define    RTL8367B_EN_CD_SAME_MISMATCH_OFFSET    8
+#define    RTL8367B_EN_CD_SAME_MISMATCH_MASK    0x100
+#define    RTL8367B_EN_CD_SHORT_OFFSET    7
+#define    RTL8367B_EN_CD_SHORT_MASK    0x80
+#define    RTL8367B_EN_AB_SHORT_OFFSET    6
+#define    RTL8367B_EN_AB_SHORT_MASK    0x40
+#define    RTL8367B_EN_CD_OPEN_OFFSET    5
+#define    RTL8367B_EN_CD_OPEN_MASK    0x20
+#define    RTL8367B_EN_AB_OPEN_OFFSET    4
+#define    RTL8367B_EN_AB_OPEN_MASK    0x10
+#define    RTL8367B_EN_CD_MISMATCH_OFFSET    3
+#define    RTL8367B_EN_CD_MISMATCH_MASK    0x8
+#define    RTL8367B_EN_AB_MISMATCH_OFFSET    2
+#define    RTL8367B_EN_AB_MISMATCH_MASK    0x4
+#define    RTL8367B_EN_CD_LINEDRIVER_OFFSET    1
+#define    RTL8367B_EN_CD_LINEDRIVER_MASK    0x2
+#define    RTL8367B_EN_AB_LINEDRIVER_OFFSET    0
+#define    RTL8367B_EN_AB_LINEDRIVER_MASK    0x1
+
+#define    RTL8367B_REG_RTCT_LED    0x1b05
+#define    RTL8367B_RTCT_LED_DUMMY_OFFSET    12
+#define    RTL8367B_RTCT_LED_DUMMY_MASK    0xF000
+#define    RTL8367B_RTCT_LED2_OFFSET    8
+#define    RTL8367B_RTCT_LED2_MASK    0xF00
+#define    RTL8367B_RTCT_LED1_OFFSET    4
+#define    RTL8367B_RTCT_LED1_MASK    0xF0
+#define    RTL8367B_RTCT_LED0_OFFSET    0
+#define    RTL8367B_RTCT_LED0_MASK    0xF
+
+#define    RTL8367B_REG_CPU_FORCE_LED_CFG    0x1b07
+#define    RTL8367B_CPU_FORCE_LED_CFG_DUMMY_OFFSET    8
+#define    RTL8367B_CPU_FORCE_LED_CFG_DUMMY_MASK    0xFF00
+#define    RTL8367B_LED_FORCE_MODE_OFFSET    2
+#define    RTL8367B_LED_FORCE_MODE_MASK    0xFC
+#define    RTL8367B_FORCE_MODE_OFFSET    0
+#define    RTL8367B_FORCE_MODE_MASK    0x3
+
+#define    RTL8367B_REG_CPU_FORCE_LED0_CFG0    0x1b08
+#define    RTL8367B_PORT7_LED0_MODE_OFFSET    14
+#define    RTL8367B_PORT7_LED0_MODE_MASK    0xC000
+#define    RTL8367B_PORT6_LED0_MODE_OFFSET    12
+#define    RTL8367B_PORT6_LED0_MODE_MASK    0x3000
+#define    RTL8367B_PORT5_LED0_MODE_OFFSET    10
+#define    RTL8367B_PORT5_LED0_MODE_MASK    0xC00
+#define    RTL8367B_PORT4_LED0_MODE_OFFSET    8
+#define    RTL8367B_PORT4_LED0_MODE_MASK    0x300
+#define    RTL8367B_PORT3_LED0_MODE_OFFSET    6
+#define    RTL8367B_PORT3_LED0_MODE_MASK    0xC0
+#define    RTL8367B_PORT2_LED0_MODE_OFFSET    4
+#define    RTL8367B_PORT2_LED0_MODE_MASK    0x30
+#define    RTL8367B_PORT1_LED0_MODE_OFFSET    2
+#define    RTL8367B_PORT1_LED0_MODE_MASK    0xC
+#define    RTL8367B_PORT0_LED0_MODE_OFFSET    0
+#define    RTL8367B_PORT0_LED0_MODE_MASK    0x3
+
+#define    RTL8367B_REG_CPU_FORCE_LED1_CFG0    0x1b0a
+#define    RTL8367B_PORT7_LED1_MODE_OFFSET    14
+#define    RTL8367B_PORT7_LED1_MODE_MASK    0xC000
+#define    RTL8367B_PORT6_LED1_MODE_OFFSET    12
+#define    RTL8367B_PORT6_LED1_MODE_MASK    0x3000
+#define    RTL8367B_PORT5_LED1_MODE_OFFSET    10
+#define    RTL8367B_PORT5_LED1_MODE_MASK    0xC00
+#define    RTL8367B_PORT4_LED1_MODE_OFFSET    8
+#define    RTL8367B_PORT4_LED1_MODE_MASK    0x300
+#define    RTL8367B_PORT3_LED1_MODE_OFFSET    6
+#define    RTL8367B_PORT3_LED1_MODE_MASK    0xC0
+#define    RTL8367B_PORT2_LED1_MODE_OFFSET    4
+#define    RTL8367B_PORT2_LED1_MODE_MASK    0x30
+#define    RTL8367B_PORT1_LED1_MODE_OFFSET    2
+#define    RTL8367B_PORT1_LED1_MODE_MASK    0xC
+#define    RTL8367B_PORT0_LED1_MODE_OFFSET    0
+#define    RTL8367B_PORT0_LED1_MODE_MASK    0x3
+
+#define    RTL8367B_REG_CPU_FORCE_LED2_CFG0    0x1b0c
+#define    RTL8367B_PORT7_LED2_MODE_OFFSET    14
+#define    RTL8367B_PORT7_LED2_MODE_MASK    0xC000
+#define    RTL8367B_PORT6_LED2_MODE_OFFSET    12
+#define    RTL8367B_PORT6_LED2_MODE_MASK    0x3000
+#define    RTL8367B_PORT5_LED2_MODE_OFFSET    10
+#define    RTL8367B_PORT5_LED2_MODE_MASK    0xC00
+#define    RTL8367B_PORT4_LED2_MODE_OFFSET    8
+#define    RTL8367B_PORT4_LED2_MODE_MASK    0x300
+#define    RTL8367B_PORT3_LED2_MODE_OFFSET    6
+#define    RTL8367B_PORT3_LED2_MODE_MASK    0xC0
+#define    RTL8367B_PORT2_LED2_MODE_OFFSET    4
+#define    RTL8367B_PORT2_LED2_MODE_MASK    0x30
+#define    RTL8367B_PORT1_LED2_MODE_OFFSET    2
+#define    RTL8367B_PORT1_LED2_MODE_MASK    0xC
+#define    RTL8367B_PORT0_LED2_MODE_OFFSET    0
+#define    RTL8367B_PORT0_LED2_MODE_MASK    0x3
+
+#define    RTL8367B_REG_LED_ACTIVE_LOW_CFG0    0x1b0e
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_15_OFFSET    15
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_15_MASK    0x8000
+#define    RTL8367B_PORT3_LED_ACTIVE_LOW_OFFSET    12
+#define    RTL8367B_PORT3_LED_ACTIVE_LOW_MASK    0x7000
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_11_OFFSET    11
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_11_MASK    0x800
+#define    RTL8367B_PORT2_LED_ACTIVE_LOW_OFFSET    8
+#define    RTL8367B_PORT2_LED_ACTIVE_LOW_MASK    0x700
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_7_OFFSET    7
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_7_MASK    0x80
+#define    RTL8367B_PORT1_LED_ACTIVE_LOW_OFFSET    4
+#define    RTL8367B_PORT1_LED_ACTIVE_LOW_MASK    0x70
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_3_OFFSET    3
+#define    RTL8367B_LED_ACTIVE_LOW_CFG0_DUMMY_3_MASK    0x8
+#define    RTL8367B_PORT0_LED_ACTIVE_LOW_OFFSET    0
+#define    RTL8367B_PORT0_LED_ACTIVE_LOW_MASK    0x7
+
+#define    RTL8367B_REG_LED_ACTIVE_LOW_CFG1    0x1b0f
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_15_OFFSET    15
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_15_MASK    0x8000
+#define    RTL8367B_PORT7_LED_ACTIVE_LOW_OFFSET    12
+#define    RTL8367B_PORT7_LED_ACTIVE_LOW_MASK    0x7000
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_11_OFFSET    11
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_11_MASK    0x800
+#define    RTL8367B_PORT6_LED_ACTIVE_LOW_OFFSET    8
+#define    RTL8367B_PORT6_LED_ACTIVE_LOW_MASK    0x700
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_7_OFFSET    7
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_7_MASK    0x80
+#define    RTL8367B_PORT5_LED_ACTIVE_LOW_OFFSET    4
+#define    RTL8367B_PORT5_LED_ACTIVE_LOW_MASK    0x70
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_3_OFFSET    3
+#define    RTL8367B_LED_ACTIVE_LOW_CFG1_DUMMY_3_MASK    0x8
+#define    RTL8367B_PORT4_LED_ACTIVE_LOW_OFFSET    0
+#define    RTL8367B_PORT4_LED_ACTIVE_LOW_MASK    0x7
+
+#define    RTL8367B_REG_SEL_RTCT_PARA    0x1b21
+#define    RTL8367B_DO_RTCT_COMMAND_OFFSET    15
+#define    RTL8367B_DO_RTCT_COMMAND_MASK    0x8000
+#define    RTL8367B_SEL_RTCT_PARA_DUMMY_OFFSET    12
+#define    RTL8367B_SEL_RTCT_PARA_DUMMY_MASK    0x7000
+#define    RTL8367B_SEL_RTCT_RLSTLED_TIME_OFFSET    10
+#define    RTL8367B_SEL_RTCT_RLSTLED_TIME_MASK    0xC00
+#define    RTL8367B_SEL_RTCT_TEST_LED_TIME_OFFSET    8
+#define    RTL8367B_SEL_RTCT_TEST_LED_TIME_MASK    0x300
+#define    RTL8367B_EN_SCAN_RTCT_OFFSET    7
+#define    RTL8367B_EN_SCAN_RTCT_MASK    0x80
+#define    RTL8367B_EN_RTCT_TIMOUT_OFFSET    6
+#define    RTL8367B_EN_RTCT_TIMOUT_MASK    0x40
+#define    RTL8367B_EN_ALL_RTCT_OFFSET    5
+#define    RTL8367B_EN_ALL_RTCT_MASK    0x20
+#define    RTL8367B_SEL_RTCT_PLE_WID_OFFSET    0
+#define    RTL8367B_SEL_RTCT_PLE_WID_MASK    0x1F
+
+#define    RTL8367B_REG_RTCT_ENABLE    0x1b22
+#define    RTL8367B_RTCT_ENABLE_DUMMY_OFFSET    5
+#define    RTL8367B_RTCT_ENABLE_DUMMY_MASK    0xFFE0
+#define    RTL8367B_RTCT_ENABLE_PORT_MASK_OFFSET    0
+#define    RTL8367B_RTCT_ENABLE_PORT_MASK_MASK    0x1F
+
+#define    RTL8367B_REG_RTCT_TIMEOUT    0x1b23
+
+#define    RTL8367B_REG_PARA_LED_IO_EN1    0x1b24
+#define    RTL8367B_DUMMY_15_13_OFFSET    13
+#define    RTL8367B_DUMMY_15_13_MASK    0xE000
+#define    RTL8367B_LED1_PARA_P04_00_OFFSET    8
+#define    RTL8367B_LED1_PARA_P04_00_MASK    0x1F00
+#define    RTL8367B_DUMMY_7_5_OFFSET    5
+#define    RTL8367B_DUMMY_7_5_MASK    0xE0
+#define    RTL8367B_LED0_PARA_P04_00_OFFSET    0
+#define    RTL8367B_LED0_PARA_P04_00_MASK    0x1F
+
+#define    RTL8367B_REG_PARA_LED_IO_EN2    0x1b25
+#define    RTL8367B_DUMMY_15_5_OFFSET    5
+#define    RTL8367B_DUMMY_15_5_MASK    0xFFE0
+#define    RTL8367B_LED2_PARA_P04_00_OFFSET    0
+#define    RTL8367B_LED2_PARA_P04_00_MASK    0x1F
+
+#define    RTL8367B_REG_SCAN0_LED_IO_EN    0x1b26
+#define    RTL8367B_SCAN0_LED_IO_EN_DUMMY_OFFSET    3
+#define    RTL8367B_SCAN0_LED_IO_EN_DUMMY_MASK    0xFFF8
+#define    RTL8367B_LED_LOOP_DET_BUZZER_EN_OFFSET    2
+#define    RTL8367B_LED_LOOP_DET_BUZZER_EN_MASK    0x4
+#define    RTL8367B_LED_SERI_DATA_EN_OFFSET    1
+#define    RTL8367B_LED_SERI_DATA_EN_MASK    0x2
+#define    RTL8367B_LED_SERI_CLK_EN_OFFSET    0
+#define    RTL8367B_LED_SERI_CLK_EN_MASK    0x1
+
+#define    RTL8367B_REG_LPI_LED_OPT1    0x1b28
+#define    RTL8367B_LPI_TAG4_OFFSET    12
+#define    RTL8367B_LPI_TAG4_MASK    0xF000
+#define    RTL8367B_LPI_TAG3_OFFSET    8
+#define    RTL8367B_LPI_TAG3_MASK    0xF00
+#define    RTL8367B_LPI_TAG2_OFFSET    4
+#define    RTL8367B_LPI_TAG2_MASK    0xF0
+#define    RTL8367B_LPI_TAG1_OFFSET    0
+#define    RTL8367B_LPI_TAG1_MASK    0xF
+
+#define    RTL8367B_REG_LPI_LED_OPT2    0x1b29
+#define    RTL8367B_LPI_LED_OPT2_DUMMY_OFFSET    15
+#define    RTL8367B_LPI_LED_OPT2_DUMMY_MASK    0x8000
+#define    RTL8367B_LPI_LED2_WEAK_OFFSET    14
+#define    RTL8367B_LPI_LED2_WEAK_MASK    0x4000
+#define    RTL8367B_LPI_LED1_WEAK_OFFSET    13
+#define    RTL8367B_LPI_LED1_WEAK_MASK    0x2000
+#define    RTL8367B_LPI_LED0_WEAK_OFFSET    12
+#define    RTL8367B_LPI_LED0_WEAK_MASK    0x1000
+#define    RTL8367B_LPI_LED2_OFFSET    11
+#define    RTL8367B_LPI_LED2_MASK    0x800
+#define    RTL8367B_LPI_LED1_OFFSET    10
+#define    RTL8367B_LPI_LED1_MASK    0x400
+#define    RTL8367B_LPI_LED0_OFFSET    9
+#define    RTL8367B_LPI_LED0_MASK    0x200
+#define    RTL8367B_LPI_TAG8_OFFSET    8
+#define    RTL8367B_LPI_TAG8_MASK    0x100
+#define    RTL8367B_LPI_TAG7_OFFSET    6
+#define    RTL8367B_LPI_TAG7_MASK    0xC0
+#define    RTL8367B_LPI_TAG6_OFFSET    4
+#define    RTL8367B_LPI_TAG6_MASK    0x30
+#define    RTL8367B_LPI_TAG5_OFFSET    0
+#define    RTL8367B_LPI_TAG5_MASK    0xF
+
+#define    RTL8367B_REG_LPI_LED_OPT3    0x1b2a
+#define    RTL8367B_LPI_LED_OPT3_DUMMY_OFFSET    3
+#define    RTL8367B_LPI_LED_OPT3_DUMMY_MASK    0xFFF8
+#define    RTL8367B_RESTORE_LED_RATE_SEL_OFFSET    1
+#define    RTL8367B_RESTORE_LED_RATE_SEL_MASK    0x6
+#define    RTL8367B_RESTORE_LED_SEL_OFFSET    0
+#define    RTL8367B_RESTORE_LED_SEL_MASK    0x1
+
+/* (16'h1c00)IGMP_EAV */
+
+#define    RTL8367B_REG_IGMP_MLD_CFG0    0x1c00
+#define    RTL8367B_IGMP_MLD_PORTISO_LEAKY_OFFSET    15
+#define    RTL8367B_IGMP_MLD_PORTISO_LEAKY_MASK    0x8000
+#define    RTL8367B_IGMP_MLD_VLAN_LEAKY_OFFSET    14
+#define    RTL8367B_IGMP_MLD_VLAN_LEAKY_MASK    0x4000
+#define    RTL8367B_IGMP_MLD_DISCARD_STORM_FILTER_OFFSET    13
+#define    RTL8367B_IGMP_MLD_DISCARD_STORM_FILTER_MASK    0x2000
+#define    RTL8367B_REPORT_FORWARD_OFFSET    12
+#define    RTL8367B_REPORT_FORWARD_MASK    0x1000
+#define    RTL8367B_ROBURSTNESS_VAR_OFFSET    9
+#define    RTL8367B_ROBURSTNESS_VAR_MASK    0xE00
+#define    RTL8367B_LEAVE_SUPPRESSION_OFFSET    8
+#define    RTL8367B_LEAVE_SUPPRESSION_MASK    0x100
+#define    RTL8367B_REPORT_SUPPRESSION_OFFSET    7
+#define    RTL8367B_REPORT_SUPPRESSION_MASK    0x80
+#define    RTL8367B_LEAVE_TIMER_OFFSET    4
+#define    RTL8367B_LEAVE_TIMER_MASK    0x70
+#define    RTL8367B_FAST_LEAVE_EN_OFFSET    3
+#define    RTL8367B_FAST_LEAVE_EN_MASK    0x8
+#define    RTL8367B_CKS_ERR_OP_OFFSET    1
+#define    RTL8367B_CKS_ERR_OP_MASK    0x6
+#define    RTL8367B_IGMP_MLD_EN_OFFSET    0
+#define    RTL8367B_IGMP_MLD_EN_MASK    0x1
+
+#define    RTL8367B_REG_IGMP_MLD_CFG1    0x1c01
+#define    RTL8367B_DROP_LEAVE_ZERO_OFFSET    2
+#define    RTL8367B_DROP_LEAVE_ZERO_MASK    0x4
+#define    RTL8367B_TABLE_FULL_OP_OFFSET    0
+#define    RTL8367B_TABLE_FULL_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_MLD_CFG2    0x1c02
+
+#define    RTL8367B_REG_IGMP_DYNAMIC_ROUTER_PORT    0x1c03
+#define    RTL8367B_D_ROUTER_PORT_2_OFFSET    11
+#define    RTL8367B_D_ROUTER_PORT_2_MASK    0x7800
+#define    RTL8367B_D_ROUTER_PORT_TMR_2_OFFSET    8
+#define    RTL8367B_D_ROUTER_PORT_TMR_2_MASK    0x700
+#define    RTL8367B_D_ROUTER_PORT_1_OFFSET    3
+#define    RTL8367B_D_ROUTER_PORT_1_MASK    0x78
+#define    RTL8367B_D_ROUTER_PORT_TMR_1_OFFSET    0
+#define    RTL8367B_D_ROUTER_PORT_TMR_1_MASK    0x7
+
+#define    RTL8367B_REG_IGMP_STATIC_ROUTER_PORT    0x1c04
+#define    RTL8367B_IGMP_STATIC_ROUTER_PORT_OFFSET    0
+#define    RTL8367B_IGMP_STATIC_ROUTER_PORT_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT0_CONTROL    0x1c05
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT0_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT0_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT0_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT0_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT0_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT0_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT1_CONTROL    0x1c06
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT1_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT1_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT1_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT1_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT1_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT1_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT2_CONTROL    0x1c07
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT2_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT2_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT2_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT2_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT2_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT2_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT3_CONTROL    0x1c08
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT3_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT3_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT3_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT3_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT3_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT3_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT4_CONTROL    0x1c09
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT4_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT4_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT4_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT4_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT4_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT4_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT5_CONTROL    0x1c0a
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT5_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT5_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT5_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT5_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT5_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT5_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT6_CONTROL    0x1c0b
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT6_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT6_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT6_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT6_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT6_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT6_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT7_CONTROL    0x1c0c
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_QUERY_OFFSET    14
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_QUERY_MASK    0x4000
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_REPORT_OFFSET    13
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_REPORT_MASK    0x2000
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_LEAVE_OFFSET    12
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_LEAVE_MASK    0x1000
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_MRP_OFFSET    11
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_MRP_MASK    0x800
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_MC_DATA_OFFSET    10
+#define    RTL8367B_IGMP_PORT7_CONTROL_ALLOW_MC_DATA_MASK    0x400
+#define    RTL8367B_IGMP_PORT7_CONTROL_MLDv2_OP_OFFSET    8
+#define    RTL8367B_IGMP_PORT7_CONTROL_MLDv2_OP_MASK    0x300
+#define    RTL8367B_IGMP_PORT7_CONTROL_MLDv1_OP_OFFSET    6
+#define    RTL8367B_IGMP_PORT7_CONTROL_MLDv1_OP_MASK    0xC0
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV3_OP_OFFSET    4
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV3_OP_MASK    0x30
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV2_OP_OFFSET    2
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV2_OP_MASK    0xC
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV1_OP_OFFSET    0
+#define    RTL8367B_IGMP_PORT7_CONTROL_IGMPV1_OP_MASK    0x3
+
+#define    RTL8367B_REG_IGMP_PORT01_MAX_GROUP    0x1c0d
+#define    RTL8367B_PORT1_MAX_GROUP_OFFSET    8
+#define    RTL8367B_PORT1_MAX_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT0_MAX_GROUP_OFFSET    0
+#define    RTL8367B_PORT0_MAX_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT23_MAX_GROUP    0x1c0e
+#define    RTL8367B_PORT3_MAX_GROUP_OFFSET    8
+#define    RTL8367B_PORT3_MAX_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT2_MAX_GROUP_OFFSET    0
+#define    RTL8367B_PORT2_MAX_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT45_MAX_GROUP    0x1c0f
+#define    RTL8367B_PORT5_MAX_GROUP_OFFSET    8
+#define    RTL8367B_PORT5_MAX_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT4_MAX_GROUP_OFFSET    0
+#define    RTL8367B_PORT4_MAX_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT67_MAX_GROUP    0x1c10
+#define    RTL8367B_PORT7_MAX_GROUP_OFFSET    8
+#define    RTL8367B_PORT7_MAX_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT6_MAX_GROUP_OFFSET    0
+#define    RTL8367B_PORT6_MAX_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT01_CURRENT_GROUP    0x1c11
+#define    RTL8367B_PORT1_CURRENT_GROUP_OFFSET    8
+#define    RTL8367B_PORT1_CURRENT_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT0_CURRENT_GROUP_OFFSET    0
+#define    RTL8367B_PORT0_CURRENT_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT23_CURRENT_GROUP    0x1c12
+#define    RTL8367B_PORT3_CURRENT_GROUP_OFFSET    8
+#define    RTL8367B_PORT3_CURRENT_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT2_CURRENT_GROUP_OFFSET    0
+#define    RTL8367B_PORT2_CURRENT_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT45_CURRENT_GROUP    0x1c13
+#define    RTL8367B_PORT5_CURRENT_GROUP_OFFSET    8
+#define    RTL8367B_PORT5_CURRENT_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT4_CURRENT_GROUP_OFFSET    0
+#define    RTL8367B_PORT4_CURRENT_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_PORT67_CURRENT_GROUP    0x1c14
+#define    RTL8367B_PORT7_CURRENT_GROUP_OFFSET    8
+#define    RTL8367B_PORT7_CURRENT_GROUP_MASK    0xFF00
+#define    RTL8367B_PORT6_CURRENT_GROUP_OFFSET    0
+#define    RTL8367B_PORT6_CURRENT_GROUP_MASK    0xFF
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST0    0x1c20
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST1    0x1c21
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST2    0x1c22
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST3    0x1c23
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST4    0x1c24
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST5    0x1c25
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST6    0x1c26
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST7    0x1c27
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST8    0x1c28
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST9    0x1c29
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST10    0x1c2a
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST11    0x1c2b
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST12    0x1c2c
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST13    0x1c2d
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST14    0x1c2e
+
+#define    RTL8367B_REG_IGMP_GROUP_USAGE_LIST15    0x1c2f
+
+#define    RTL8367B_REG_EAV_CTRL0    0x1c30
+#define    RTL8367B_EAV_CTRL0_OFFSET    0
+#define    RTL8367B_EAV_CTRL0_MASK    0xFF
+
+#define    RTL8367B_REG_EAV_CTRL1    0x1c31
+#define    RTL8367B_REMAP_EAV_PRI3_REGEN_OFFSET    9
+#define    RTL8367B_REMAP_EAV_PRI3_REGEN_MASK    0xE00
+#define    RTL8367B_REMAP_EAV_PRI2_REGEN_OFFSET    6
+#define    RTL8367B_REMAP_EAV_PRI2_REGEN_MASK    0x1C0
+#define    RTL8367B_REMAP_EAV_PRI1_REGEN_OFFSET    3
+#define    RTL8367B_REMAP_EAV_PRI1_REGEN_MASK    0x38
+#define    RTL8367B_REMAP_EAV_PRI0_REGEN_OFFSET    0
+#define    RTL8367B_REMAP_EAV_PRI0_REGEN_MASK    0x7
+
+#define    RTL8367B_REG_EAV_CTRL2    0x1c32
+#define    RTL8367B_REMAP_EAV_PRI7_REGEN_OFFSET    9
+#define    RTL8367B_REMAP_EAV_PRI7_REGEN_MASK    0xE00
+#define    RTL8367B_REMAP_EAV_PRI6_REGEN_OFFSET    6
+#define    RTL8367B_REMAP_EAV_PRI6_REGEN_MASK    0x1C0
+#define    RTL8367B_REMAP_EAV_PRI5_REGEN_OFFSET    3
+#define    RTL8367B_REMAP_EAV_PRI5_REGEN_MASK    0x38
+#define    RTL8367B_REMAP_EAV_PRI4_REGEN_OFFSET    0
+#define    RTL8367B_REMAP_EAV_PRI4_REGEN_MASK    0x7
+
+#define    RTL8367B_REG_SYS_TIME_FREQ    0x1c43
+
+#define    RTL8367B_REG_SYS_TIME_OFFSET_L    0x1c44
+
+#define    RTL8367B_REG_SYS_TIME_OFFSET_H    0x1c45
+
+#define    RTL8367B_REG_SYS_TIME_OFFSET_512NS_L    0x1c46
+
+#define    RTL8367B_REG_SYS_TIME_OFFSET_512NS_H    0x1c47
+#define    RTL8367B_SYS_TIME_OFFSET_TUNE_OFFSET    5
+#define    RTL8367B_SYS_TIME_OFFSET_TUNE_MASK    0x20
+#define    RTL8367B_SYS_TIME_OFFSET_512NS_H_SYS_TIME_OFFSET_512NS_OFFSET    0
+#define    RTL8367B_SYS_TIME_OFFSET_512NS_H_SYS_TIME_OFFSET_512NS_MASK    0x1F
+
+#define    RTL8367B_REG_SYS_TIME_SEC_TRANSIT    0x1c48
+#define    RTL8367B_SYS_TIME_SEC_TRANSIT_OFFSET    0
+#define    RTL8367B_SYS_TIME_SEC_TRANSIT_MASK    0x1
+
+#define    RTL8367B_REG_SYS_TIME_SEC_HIGH_L    0x1c49
+
+#define    RTL8367B_REG_SYS_TIME_SEC_HIGH_H    0x1c4a
+
+#define    RTL8367B_REG_SYS_TIME_512NS_L    0x1c4b
+
+#define    RTL8367B_REG_SYS_TIME_512NS_H    0x1c4c
+#define    RTL8367B_SYS_TIME_512NS_H_OFFSET    0
+#define    RTL8367B_SYS_TIME_512NS_H_MASK    0x1F
+
+#define    RTL8367B_REG_FALLBACK_CTRL    0x1c70
+#define    RTL8367B_FALLBACK_PL_DEC_EN_OFFSET    15
+#define    RTL8367B_FALLBACK_PL_DEC_EN_MASK    0x8000
+#define    RTL8367B_FALLBACK_MONITOR_TIMEOUT_IGNORE_OFFSET    14
+#define    RTL8367B_FALLBACK_MONITOR_TIMEOUT_IGNORE_MASK    0x4000
+#define    RTL8367B_FALLBACK_ERROR_RATIO_THRESHOLD_OFFSET    11
+#define    RTL8367B_FALLBACK_ERROR_RATIO_THRESHOLD_MASK    0x3800
+#define    RTL8367B_FALLBACK_MONITORMAX_OFFSET    8
+#define    RTL8367B_FALLBACK_MONITORMAX_MASK    0x700
+#define    RTL8367B_FALLBACK_MONITOR_TIMEOUT_OFFSET    0
+#define    RTL8367B_FALLBACK_MONITOR_TIMEOUT_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_PORT0_CFG0    0x1c71
+#define    RTL8367B_FALLBACK_PORT0_CFG0_RESET_POWER_LEVEL_OFFSET    15
+#define    RTL8367B_FALLBACK_PORT0_CFG0_RESET_POWER_LEVEL_MASK    0x8000
+#define    RTL8367B_FALLBACK_PORT0_CFG0_ENABLE_OFFSET    14
+#define    RTL8367B_FALLBACK_PORT0_CFG0_ENABLE_MASK    0x4000
+
+#define    RTL8367B_REG_FALLBACK_PORT0_CFG1    0x1c72
+
+#define    RTL8367B_REG_FALLBACK_PORT0_CFG2    0x1c73
+#define    RTL8367B_FALLBACK_PORT0_CFG2_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT0_CFG2_MASK    0xFFF
+
+#define    RTL8367B_REG_FALLBACK_PORT0_CFG3    0x1c74
+#define    RTL8367B_FALLBACK_PORT0_CFG3_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT0_CFG3_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_PORT1_CFG0    0x1c75
+#define    RTL8367B_FALLBACK_PORT1_CFG0_RESET_POWER_LEVEL_OFFSET    15
+#define    RTL8367B_FALLBACK_PORT1_CFG0_RESET_POWER_LEVEL_MASK    0x8000
+#define    RTL8367B_FALLBACK_PORT1_CFG0_ENABLE_OFFSET    14
+#define    RTL8367B_FALLBACK_PORT1_CFG0_ENABLE_MASK    0x4000
+
+#define    RTL8367B_REG_FALLBACK_PORT1_CFG1    0x1c76
+
+#define    RTL8367B_REG_FALLBACK_PORT1_CFG2    0x1c77
+#define    RTL8367B_FALLBACK_PORT1_CFG2_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT1_CFG2_MASK    0xFFF
+
+#define    RTL8367B_REG_FALLBACK_PORT1_CFG3    0x1c78
+#define    RTL8367B_FALLBACK_PORT1_CFG3_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT1_CFG3_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_PORT2_CFG0    0x1c79
+#define    RTL8367B_FALLBACK_PORT2_CFG0_RESET_POWER_LEVEL_OFFSET    15
+#define    RTL8367B_FALLBACK_PORT2_CFG0_RESET_POWER_LEVEL_MASK    0x8000
+#define    RTL8367B_FALLBACK_PORT2_CFG0_ENABLE_OFFSET    14
+#define    RTL8367B_FALLBACK_PORT2_CFG0_ENABLE_MASK    0x4000
+
+#define    RTL8367B_REG_FALLBACK_PORT2_CFG1    0x1c7a
+
+#define    RTL8367B_REG_FALLBACK_PORT2_CFG2    0x1c7b
+#define    RTL8367B_FALLBACK_PORT2_CFG2_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT2_CFG2_MASK    0xFFF
+
+#define    RTL8367B_REG_FALLBACK_PORT2_CFG3    0x1c7c
+#define    RTL8367B_FALLBACK_PORT2_CFG3_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT2_CFG3_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_PORT3_CFG0    0x1c7d
+#define    RTL8367B_FALLBACK_PORT3_CFG0_RESET_POWER_LEVEL_OFFSET    15
+#define    RTL8367B_FALLBACK_PORT3_CFG0_RESET_POWER_LEVEL_MASK    0x8000
+#define    RTL8367B_FALLBACK_PORT3_CFG0_ENABLE_OFFSET    14
+#define    RTL8367B_FALLBACK_PORT3_CFG0_ENABLE_MASK    0x4000
+
+#define    RTL8367B_REG_FALLBACK_PORT3_CFG1    0x1c7e
+
+#define    RTL8367B_REG_FALLBACK_PORT3_CFG2    0x1c7f
+#define    RTL8367B_FALLBACK_PORT3_CFG2_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT3_CFG2_MASK    0xFFF
+
+#define    RTL8367B_REG_FALLBACK_PORT3_CFG3    0x1c80
+#define    RTL8367B_FALLBACK_PORT3_CFG3_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT3_CFG3_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_PORT4_CFG0    0x1c81
+#define    RTL8367B_FALLBACK_PORT4_CFG0_RESET_POWER_LEVEL_OFFSET    15
+#define    RTL8367B_FALLBACK_PORT4_CFG0_RESET_POWER_LEVEL_MASK    0x8000
+#define    RTL8367B_FALLBACK_PORT4_CFG0_ENABLE_OFFSET    14
+#define    RTL8367B_FALLBACK_PORT4_CFG0_ENABLE_MASK    0x4000
+
+#define    RTL8367B_REG_FALLBACK_PORT4_CFG1    0x1c82
+
+#define    RTL8367B_REG_FALLBACK_PORT4_CFG2    0x1c83
+#define    RTL8367B_FALLBACK_PORT4_CFG2_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT4_CFG2_MASK    0xFFF
+
+#define    RTL8367B_REG_FALLBACK_PORT4_CFG3    0x1c84
+#define    RTL8367B_FALLBACK_PORT4_CFG3_OFFSET    0
+#define    RTL8367B_FALLBACK_PORT4_CFG3_MASK    0xFF
+
+#define    RTL8367B_REG_FALLBACK_CTRL1    0x1c85
+#define    RTL8367B_FALLBACK_VALIDFLOW_OFFSET    8
+#define    RTL8367B_FALLBACK_VALIDFLOW_MASK    0x1F00
+#define    RTL8367B_FALLBACK_STOP_TMR_OFFSET    0
+#define    RTL8367B_FALLBACK_STOP_TMR_MASK    0x1
+
+/* (16'h1f00)patch_reg */
+
+#define    RTL8367B_REG_INDRECT_ACCESS_CTRL    0x1f00
+#define    RTL8367B_RW_OFFSET    1
+#define    RTL8367B_RW_MASK    0x2
+#define    RTL8367B_CMD_OFFSET    0
+#define    RTL8367B_CMD_MASK    0x1
+
+#define    RTL8367B_REG_INDRECT_ACCESS_STATUS    0x1f01
+#define    RTL8367B_INDRECT_ACCESS_STATUS_OFFSET    2
+#define    RTL8367B_INDRECT_ACCESS_STATUS_MASK    0x4
+
+#define    RTL8367B_REG_INDRECT_ACCESS_ADDRESS    0x1f02
+
+#define    RTL8367B_REG_INDRECT_ACCESS_WRITE_DATA    0x1f03
+
+#define    RTL8367B_REG_INDRECT_ACCESS_READ_DATA    0x1f04
+
+/* (16'h6000)sds_page */
+
+#define    RTL8367B_REG_SDS_CFG0    0x6000
+#define    RTL8367B_DUMMY_00_OFFSET    15
+#define    RTL8367B_DUMMY_00_MASK    0x8000
+#define    RTL8367B_BYP_8B10B_OFFSET    14
+#define    RTL8367B_BYP_8B10B_MASK    0x4000
+#define    RTL8367B_CDET_OFFSET    12
+#define    RTL8367B_CDET_MASK    0x3000
+#define    RTL8367B_DIS_TMR_CMA_OFFSET    11
+#define    RTL8367B_DIS_TMR_CMA_MASK    0x800
+#define    RTL8367B_DUMMY_01_OFFSET    10
+#define    RTL8367B_DUMMY_01_MASK    0x400
+#define    RTL8367B_INV_HSI_OFFSET    9
+#define    RTL8367B_INV_HSI_MASK    0x200
+#define    RTL8367B_INV_HSO_OFFSET    8
+#define    RTL8367B_INV_HSO_MASK    0x100
+#define    RTL8367B_SDS_SDET_DEG_OFFSET    6
+#define    RTL8367B_SDS_SDET_DEG_MASK    0xC0
+#define    RTL8367B_CODEC_LPK_OFFSET    5
+#define    RTL8367B_CODEC_LPK_MASK    0x20
+#define    RTL8367B_AFE_LPK_OFFSET    4
+#define    RTL8367B_AFE_LPK_MASK    0x10
+#define    RTL8367B_REMOTE_LPK_OFFSET    3
+#define    RTL8367B_REMOTE_LPK_MASK    0x8
+#define    RTL8367B_SDS_TX_DOWN_OFFSET    2
+#define    RTL8367B_SDS_TX_DOWN_MASK    0x4
+#define    RTL8367B_SDS_EN_RX_OFFSET    1
+#define    RTL8367B_SDS_EN_RX_MASK    0x2
+#define    RTL8367B_SDS_EN_TX_OFFSET    0
+#define    RTL8367B_SDS_EN_TX_MASK    0x1
+
+#define    RTL8367B_REG_SDS_CFG1    0x6001
+#define    RTL8367B_DUMMY_02_OFFSET    12
+#define    RTL8367B_DUMMY_02_MASK    0xF000
+#define    RTL8367B_SDS_FRC_RX_OFFSET    8
+#define    RTL8367B_SDS_FRC_RX_MASK    0xF00
+#define    RTL8367B_DUMMY_03_OFFSET    4
+#define    RTL8367B_DUMMY_03_MASK    0xF0
+#define    RTL8367B_SDS_FRC_TX_OFFSET    0
+#define    RTL8367B_SDS_FRC_TX_MASK    0xF
+
+#define    RTL8367B_REG_SDS_CFG2    0x6002
+#define    RTL8367B_FRC_PREAMBLE_OFFSET    14
+#define    RTL8367B_FRC_PREAMBLE_MASK    0xC000
+#define    RTL8367B_FRC_IPG_OFFSET    12
+#define    RTL8367B_FRC_IPG_MASK    0x3000
+#define    RTL8367B_FRC_CGGOOD_OFFSET    10
+#define    RTL8367B_FRC_CGGOOD_MASK    0xC00
+#define    RTL8367B_SDS_FRC_AN_OFFSET    8
+#define    RTL8367B_SDS_FRC_AN_MASK    0x300
+#define    RTL8367B_DUMMY_04_OFFSET    4
+#define    RTL8367B_DUMMY_04_MASK    0xF0
+#define    RTL8367B_SDS_RESTART_AN_OFFSET    0
+#define    RTL8367B_SDS_RESTART_AN_MASK    0xF
+
+#define    RTL8367B_REG_SDS_CFG3    0x6003
+#define    RTL8367B_WR_SOFT_RSTB_OFFSET    15
+#define    RTL8367B_WR_SOFT_RSTB_MASK    0x8000
+#define    RTL8367B_USE_25M_CLK_OFFSET    14
+#define    RTL8367B_USE_25M_CLK_MASK    0x4000
+#define    RTL8367B_MARK_CARR_EXT_OFFSET    13
+#define    RTL8367B_MARK_CARR_EXT_MASK    0x2000
+#define    RTL8367B_SEL_DEG_OFFSET    12
+#define    RTL8367B_SEL_DEG_MASK    0x1000
+#define    RTL8367B_REG_CALIB_OK_CNT_OFFSET    8
+#define    RTL8367B_REG_CALIB_OK_CNT_MASK    0xF00
+#define    RTL8367B_EXT_PWR_CTL_OFFSET    7
+#define    RTL8367B_EXT_PWR_CTL_MASK    0x80
+#define    RTL8367B_SOFT_RST_OFFSET    6
+#define    RTL8367B_SOFT_RST_MASK    0x40
+#define    RTL8367B_CLR_SOFT_RSTB_OFFSET    5
+#define    RTL8367B_CLR_SOFT_RSTB_MASK    0x20
+#define    RTL8367B_CMA_RQ_OFFSET    0
+#define    RTL8367B_CMA_RQ_MASK    0x1F
+
+#define    RTL8367B_REG_SDS_CFG4    0x6004
+#define    RTL8367B_CFG_FRC_SDS_MODE_OFFSET    13
+#define    RTL8367B_CFG_FRC_SDS_MODE_MASK    0xE000
+#define    RTL8367B_CFG_FRC_SDS_MODE_EN_OFFSET    12
+#define    RTL8367B_CFG_FRC_SDS_MODE_EN_MASK    0x1000
+#define    RTL8367B_CFG_UPD_RXD_OFFSET    8
+#define    RTL8367B_CFG_UPD_RXD_MASK    0xF00
+#define    RTL8367B_CFG_UPD_TXD_OFFSET    4
+#define    RTL8367B_CFG_UPD_TXD_MASK    0xF0
+#define    RTL8367B_CFG_UPD_RXD_DYN_OFFSET    3
+#define    RTL8367B_CFG_UPD_RXD_DYN_MASK    0x8
+#define    RTL8367B_CFG_EN_LINK_FIB1G_OFFSET    2
+#define    RTL8367B_CFG_EN_LINK_FIB1G_MASK    0x4
+#define    RTL8367B_DUMMY_05_OFFSET    1
+#define    RTL8367B_DUMMY_05_MASK    0x2
+#define    RTL8367B_DUMMY_06_OFFSET    0
+#define    RTL8367B_DUMMY_06_MASK    0x1
+
+#define    RTL8367B_REG_SDS_CFG5    0x6005
+#define    RTL8367B_LPI_TRANSMIT_STYLE_OFFSET    15
+#define    RTL8367B_LPI_TRANSMIT_STYLE_MASK    0x8000
+#define    RTL8367B_DUMMY_07_OFFSET    12
+#define    RTL8367B_DUMMY_07_MASK    0x7000
+#define    RTL8367B_DUMMY_08_OFFSET    11
+#define    RTL8367B_DUMMY_08_MASK    0x800
+#define    RTL8367B_DUMMY_09_OFFSET    10
+#define    RTL8367B_DUMMY_09_MASK    0x400
+#define    RTL8367B_DUMMY_0A_OFFSET    9
+#define    RTL8367B_DUMMY_0A_MASK    0x200
+#define    RTL8367B_DUMMY_0B_OFFSET    8
+#define    RTL8367B_DUMMY_0B_MASK    0x100
+#define    RTL8367B_DUMMY_0C_OFFSET    4
+#define    RTL8367B_DUMMY_0C_MASK    0xF0
+#define    RTL8367B_DUMMY_0D_OFFSET    0
+#define    RTL8367B_DUMMY_0D_MASK    0xF
+
+#define    RTL8367B_REG_SDS_CFG6    0x6006
+#define    RTL8367B_DUMMY_0E_OFFSET    12
+#define    RTL8367B_DUMMY_0E_MASK    0xF000
+#define    RTL8367B_RX_BYPSCR_OFFSET    8
+#define    RTL8367B_RX_BYPSCR_MASK    0xF00
+#define    RTL8367B_DUMMY_0F_OFFSET    4
+#define    RTL8367B_DUMMY_0F_MASK    0xF0
+#define    RTL8367B_TX_BYPSCR_OFFSET    0
+#define    RTL8367B_TX_BYPSCR_MASK    0xF
+
+#define    RTL8367B_REG_SDS_CFG7    0x6007
+#define    RTL8367B_DUMMY_10_OFFSET    11
+#define    RTL8367B_DUMMY_10_MASK    0xF800
+#define    RTL8367B_CFG_LPI_CMD_MII_OFFSET    10
+#define    RTL8367B_CFG_LPI_CMD_MII_MASK    0x400
+#define    RTL8367B_CFG_MARK_RXSCR_ERR_OFFSET    9
+#define    RTL8367B_CFG_MARK_RXSCR_ERR_MASK    0x200
+#define    RTL8367B_CFG_MARK_TXSCR_ERR_OFFSET    8
+#define    RTL8367B_CFG_MARK_TXSCR_ERR_MASK    0x100
+#define    RTL8367B_BYP_START_OFFSET    4
+#define    RTL8367B_BYP_START_MASK    0xF0
+#define    RTL8367B_BYP_END_OFFSET    0
+#define    RTL8367B_BYP_END_MASK    0xF
+
+#define    RTL8367B_REG_SDS_CFG8    0x6008
+#define    RTL8367B_SDS_CFG8_DUMMY_11_OFFSET    15
+#define    RTL8367B_SDS_CFG8_DUMMY_11_MASK    0x8000
+#define    RTL8367B_DUMMY_12_OFFSET    14
+#define    RTL8367B_DUMMY_12_MASK    0x4000
+#define    RTL8367B_DUMMY_13_OFFSET    11
+#define    RTL8367B_DUMMY_13_MASK    0x3800
+#define    RTL8367B_DUMMY_14_OFFSET    8
+#define    RTL8367B_DUMMY_14_MASK    0x700
+#define    RTL8367B_SDS_CFG8_DUMMY_15_OFFSET    5
+#define    RTL8367B_SDS_CFG8_DUMMY_15_MASK    0xE0
+#define    RTL8367B_DUMMY_16_OFFSET    2
+#define    RTL8367B_DUMMY_16_MASK    0x1C
+#define    RTL8367B_DUMMY_17_OFFSET    1
+#define    RTL8367B_DUMMY_17_MASK    0x2
+#define    RTL8367B_DUMMY_18_OFFSET    0
+#define    RTL8367B_DUMMY_18_MASK    0x1
+
+#define    RTL8367B_REG_SDS_CFG9    0x6009
+
+#define    RTL8367B_REG_SDS_CFG10    0x600a
+
+#define    RTL8367B_REG_SDS_CFG11    0x600b
+
+#define    RTL8367B_REG_SDS_CFG12    0x600c
+#define    RTL8367B_DUMMY_1D_OFFSET    8
+#define    RTL8367B_DUMMY_1D_MASK    0xFF00
+#define    RTL8367B_ABILITY_OFFSET    4
+#define    RTL8367B_ABILITY_MASK    0xF0
+#define    RTL8367B_DUMMY_1E_OFFSET    3
+#define    RTL8367B_DUMMY_1E_MASK    0x8
+#define    RTL8367B_DUMMY_1F_OFFSET    2
+#define    RTL8367B_DUMMY_1F_MASK    0x4
+#define    RTL8367B_DUMMY_20_OFFSET    1
+#define    RTL8367B_DUMMY_20_MASK    0x2
+#define    RTL8367B_SEND_NP_ON_OFFSET    0
+#define    RTL8367B_SEND_NP_ON_MASK    0x1
+
+#define    RTL8367B_REG_SDS_CFG13    0x600d
+#define    RTL8367B_DUMMY_21_OFFSET    8
+#define    RTL8367B_DUMMY_21_MASK    0xFF00
+#define    RTL8367B_DUMMY_22_OFFSET    0
+#define    RTL8367B_DUMMY_22_MASK    0xFF
+
+#define    RTL8367B_REG_SDS_CFG14    0x600e
+#define    RTL8367B_CFG_SPDUP_OFFSET    15
+#define    RTL8367B_CFG_SPDUP_MASK    0x8000
+#define    RTL8367B_DUMMY_23_OFFSET    10
+#define    RTL8367B_DUMMY_23_MASK    0x7C00
+#define    RTL8367B_CFG_SEL_ODD_BIT_OFFSET    9
+#define    RTL8367B_CFG_SEL_ODD_BIT_MASK    0x200
+#define    RTL8367B_CFG_FRC_LD_VALUE_OFFSET    8
+#define    RTL8367B_CFG_FRC_LD_VALUE_MASK    0x100
+#define    RTL8367B_CFG_FRC_LD_OFFSET    7
+#define    RTL8367B_CFG_FRC_LD_MASK    0x80
+#define    RTL8367B_DUMMY_24_OFFSET    6
+#define    RTL8367B_DUMMY_24_MASK    0x40
+#define    RTL8367B_DUMMY_25_OFFSET    3
+#define    RTL8367B_DUMMY_25_MASK    0x38
+#define    RTL8367B_CFG_LINK_TMR_NORM_SEL_OFFSET    0
+#define    RTL8367B_CFG_LINK_TMR_NORM_SEL_MASK    0x7
+
+#define    RTL8367B_REG_SDS_CFG15    0x600f
+
+#define    RTL8367B_REG_SDS_CFG16    0x6010
+
+#define    RTL8367B_REG_SDS_CFG17    0x6011
+#define    RTL8367B_SDS_CFG17_OFFSET    0
+#define    RTL8367B_SDS_CFG17_MASK    0x3FFF
+
+#define    RTL8367B_REG_SDS_CFG18    0x6012
+
+#define    RTL8367B_REG_SDS_CFG19    0x6013
+
+#define    RTL8367B_REG_SDS_CFG20    0x6014
+
+#define    RTL8367B_REG_SDS_CFG21    0x6015
+
+#define    RTL8367B_REG_SDS_CFG22    0x6016
+
+#define    RTL8367B_REG_SDS_CFG23    0x6017
+
+#define    RTL8367B_REG_SDS_CFG24    0x6018
+
+#define    RTL8367B_REG_SDS_CFG25    0x6019
+
+#define    RTL8367B_REG_SDS_CFG26    0x601a
+
+#define    RTL8367B_REG_SDS_CFG27    0x601b
+
+#define    RTL8367B_REG_SDS_CFG28    0x601c
+#define    RTL8367B_DUMMY_31_OFFSET    12
+#define    RTL8367B_DUMMY_31_MASK    0xF000
+#define    RTL8367B_DUMMY_32_OFFSET    11
+#define    RTL8367B_DUMMY_32_MASK    0x800
+#define    RTL8367B_DUMMY_33_OFFSET    10
+#define    RTL8367B_DUMMY_33_MASK    0x400
+#define    RTL8367B_CFG_SDS_DBG_SEL_OFFSET    0
+#define    RTL8367B_CFG_SDS_DBG_SEL_MASK    0x3FF
+
+#define    RTL8367B_REG_SDS_CFG29    0x601d
+
+#define    RTL8367B_REG_SDS_CFG30    0x601e
+
+/* (16'h6100)sds_ext_page */
+
+#define    RTL8367B_REG_SDS_EXT_CFG0    0x6100
+
+#define    RTL8367B_REG_SDS_EXT_CFG1    0x6101
+
+#define    RTL8367B_REG_SDS_EXT_CFG2    0x6102
+
+#define    RTL8367B_REG_SDS_EXT_CFG3    0x6103
+
+#define    RTL8367B_REG_SDS_EXT_CFG4    0x6104
+
+#define    RTL8367B_REG_SDS_EXT_CFG5    0x6105
+
+#define    RTL8367B_REG_SDS_EXT_CFG6    0x6106
+
+#define    RTL8367B_REG_SDS_EXT_CFG7    0x6107
+
+#define    RTL8367B_REG_SDS_EXT_CFG8    0x6108
+
+#define    RTL8367B_REG_SDS_EXT_CFG9    0x6109
+
+#define    RTL8367B_REG_SDS_EXT_CFG10    0x610a
+
+#define    RTL8367B_REG_SDS_EXT_CFG11    0x610b
+
+#define    RTL8367B_REG_SDS_EXT_CFG12    0x610c
+
+#define    RTL8367B_REG_SDS_EXT_CFG13    0x610d
+
+#define    RTL8367B_REG_SDS_EXT_CFG14    0x610e
+
+#define    RTL8367B_REG_SDS_EXT_CFG15    0x610f
+
+#define    RTL8367B_REG_SDS_EXT_CFG16    0x6110
+
+#define    RTL8367B_REG_SDS_EXT_CFG24    0x6118
+#define    RTL8367B_CFG_RG24X153_OFFSET    3
+#define    RTL8367B_CFG_RG24X153_MASK    0xFFF8
+#define    RTL8367B_CFG_SYMBOLERR_CNT_OFFSET    0
+#define    RTL8367B_CFG_SYMBOLERR_CNT_MASK    0x7
+
+#define    RTL8367B_REG_SDS_EXT_CFG25    0x6119
+#define    RTL8367B_ALL_SYMBOLERR_CNT_OFFSET    8
+#define    RTL8367B_ALL_SYMBOLERR_CNT_MASK    0xFF00
+#define    RTL8367B_MUX_SYMBOLERR_CNT_OFFSET    0
+#define    RTL8367B_MUX_SYMBOLERR_CNT_MASK    0xFF
+
+#define    RTL8367B_REG_SDS_EXT_CFG26    0x611a
+#define    RTL8367B_P3LNKDOWNCNT_OFFSET    12
+#define    RTL8367B_P3LNKDOWNCNT_MASK    0xF000
+#define    RTL8367B_P2LNKDOWNCNT_OFFSET    8
+#define    RTL8367B_P2LNKDOWNCNT_MASK    0xF00
+#define    RTL8367B_P1LNKDOWNCNT_OFFSET    4
+#define    RTL8367B_P1LNKDOWNCNT_MASK    0xF0
+#define    RTL8367B_P0LNKDOWNCNT_OFFSET    0
+#define    RTL8367B_P0LNKDOWNCNT_MASK    0xF
+
+#define    RTL8367B_REG_SDS_EXT_CFG27    0x611b
+
+#define    RTL8367B_REG_SDS_EXT_CFG28    0x611c
+
+#define    RTL8367B_REG_SDS_EXT_CFG29    0x611d
+#define    RTL8367B_CFG_DBG_STATUS_ECO_2_OFFSET    9
+#define    RTL8367B_CFG_DBG_STATUS_ECO_2_MASK    0xFE00
+#define    RTL8367B_SIGNOK_LAT_OFFSET    8
+#define    RTL8367B_SIGNOK_LAT_MASK    0x100
+#define    RTL8367B_LINKOK_LAT_OFFSET    4
+#define    RTL8367B_LINKOK_LAT_MASK    0xF0
+#define    RTL8367B_SYNCOK_LAT_OFFSET    0
+#define    RTL8367B_SYNCOK_LAT_MASK    0xF
+
+#define    RTL8367B_REG_SDS_EXT_CFG30    0x611e
+#define    RTL8367B_CFG_DBG_STATUS_ECO_3_OFFSET    9
+#define    RTL8367B_CFG_DBG_STATUS_ECO_3_MASK    0xFE00
+#define    RTL8367B_SIGNOKLAT_OFFSET    8
+#define    RTL8367B_SIGNOKLAT_MASK    0x100
+#define    RTL8367B_LINKOKLAT_OFFSET    4
+#define    RTL8367B_LINKOKLAT_MASK    0xF0
+#define    RTL8367B_SYNCOKLAT_OFFSET    0
+#define    RTL8367B_SYNCOKLAT_MASK    0xF
+
+/* (16'h6200)fib_page */
+
+#define    RTL8367B_REG_FIB_CFG00    0x6200
+#define    RTL8367B_FIB_CFG00_CFG_FIB_RST_OFFSET    15
+#define    RTL8367B_FIB_CFG00_CFG_FIB_RST_MASK    0x8000
+#define    RTL8367B_FIB_CFG00_CFG_FIB_LPK_OFFSET    14
+#define    RTL8367B_FIB_CFG00_CFG_FIB_LPK_MASK    0x4000
+#define    RTL8367B_FIB_CFG00_CFG_FIB_SPD_RD_0_OFFSET    13
+#define    RTL8367B_FIB_CFG00_CFG_FIB_SPD_RD_0_MASK    0x2000
+#define    RTL8367B_FIB_CFG00_CFG_FIB_ANEN_OFFSET    12
+#define    RTL8367B_FIB_CFG00_CFG_FIB_ANEN_MASK    0x1000
+#define    RTL8367B_FIB_CFG00_CFG_FIB_PDOWN_OFFSET    11
+#define    RTL8367B_FIB_CFG00_CFG_FIB_PDOWN_MASK    0x800
+#define    RTL8367B_FIB_CFG00_CFG_FIB_ISO_OFFSET    10
+#define    RTL8367B_FIB_CFG00_CFG_FIB_ISO_MASK    0x400
+#define    RTL8367B_FIB_CFG00_CFG_FIB_RESTART_OFFSET    9
+#define    RTL8367B_FIB_CFG00_CFG_FIB_RESTART_MASK    0x200
+#define    RTL8367B_FIB_CFG00_CFG_FIB_FULLDUP_OFFSET    8
+#define    RTL8367B_FIB_CFG00_CFG_FIB_FULLDUP_MASK    0x100
+#define    RTL8367B_FIB_CFG00_CFG_FIB_SPD_RD_1_OFFSET    6
+#define    RTL8367B_FIB_CFG00_CFG_FIB_SPD_RD_1_MASK    0x40
+#define    RTL8367B_FIB_CFG00_CFG_FIB_FRCTX_OFFSET    5
+#define    RTL8367B_FIB_CFG00_CFG_FIB_FRCTX_MASK    0x20
+
+#define    RTL8367B_REG_FIB_CFG01    0x6201
+#define    RTL8367B_FIB_CFG01_CAPBILITY_OFFSET    6
+#define    RTL8367B_FIB_CFG01_CAPBILITY_MASK    0xFFC0
+#define    RTL8367B_FIB_CFG01_AN_COMPLETE_OFFSET    5
+#define    RTL8367B_FIB_CFG01_AN_COMPLETE_MASK    0x20
+#define    RTL8367B_FIB_CFG01_R_FAULT_OFFSET    4
+#define    RTL8367B_FIB_CFG01_R_FAULT_MASK    0x10
+#define    RTL8367B_FIB_CFG01_NWAY_ABILITY_OFFSET    3
+#define    RTL8367B_FIB_CFG01_NWAY_ABILITY_MASK    0x8
+#define    RTL8367B_FIB_CFG01_LINK_STATUS_OFFSET    2
+#define    RTL8367B_FIB_CFG01_LINK_STATUS_MASK    0x4
+#define    RTL8367B_FIB_CFG01_JABBER_DETECT_OFFSET    1
+#define    RTL8367B_FIB_CFG01_JABBER_DETECT_MASK    0x2
+#define    RTL8367B_FIB_CFG01_EXTENDED_CAPBILITY_OFFSET    0
+#define    RTL8367B_FIB_CFG01_EXTENDED_CAPBILITY_MASK    0x1
+
+#define    RTL8367B_REG_FIB_CFG02    0x6202
+
+#define    RTL8367B_REG_FIB_CFG03    0x6203
+#define    RTL8367B_FIB_CFG03_REALTEK_OUI5_0_OFFSET    10
+#define    RTL8367B_FIB_CFG03_REALTEK_OUI5_0_MASK    0xFC00
+#define    RTL8367B_FIB_CFG03_MODEL_NO_OFFSET    4
+#define    RTL8367B_FIB_CFG03_MODEL_NO_MASK    0x3F0
+#define    RTL8367B_FIB_CFG03_REVISION_NO_OFFSET    0
+#define    RTL8367B_FIB_CFG03_REVISION_NO_MASK    0xF
+
+#define    RTL8367B_REG_FIB_CFG04    0x6204
+
+#define    RTL8367B_REG_FIB_CFG05    0x6205
+
+#define    RTL8367B_REG_FIB_CFG06    0x6206
+#define    RTL8367B_FIB_CFG06_FIB_NP_EN_OFFSET    2
+#define    RTL8367B_FIB_CFG06_FIB_NP_EN_MASK    0x4
+#define    RTL8367B_FIB_CFG06_RXPAGE_OFFSET    1
+#define    RTL8367B_FIB_CFG06_RXPAGE_MASK    0x2
+
+#define    RTL8367B_REG_FIB_CFG07    0x6207
+
+#define    RTL8367B_REG_FIB_CFG08    0x6208
+
+#define    RTL8367B_REG_FIB_CFG09    0x6209
+
+#define    RTL8367B_REG_FIB_CFG10    0x620a
+
+#define    RTL8367B_REG_FIB_CFG11    0x620b
+
+#define    RTL8367B_REG_FIB_CFG12    0x620c
+
+#define    RTL8367B_REG_FIB_CFG13    0x620d
+#define    RTL8367B_FIB_CFG13_INDR_FUNC_OFFSET    14
+#define    RTL8367B_FIB_CFG13_INDR_FUNC_MASK    0xC000
+#define    RTL8367B_FIB_CFG13_DUMMY_OFFSET    5
+#define    RTL8367B_FIB_CFG13_DUMMY_MASK    0x3FE0
+#define    RTL8367B_FIB_CFG13_INDR_DEVAD_OFFSET    0
+#define    RTL8367B_FIB_CFG13_INDR_DEVAD_MASK    0x1F
+
+#define    RTL8367B_REG_FIB_CFG14    0x620e
+
+#define    RTL8367B_REG_FIB_CFG15    0x620f
+
+#define    RTL8367B_REG_FIB_CFG16    0x6210
+
+#define    RTL8367B_REG_FIB_CFG17    0x6211
+
+#define    RTL8367B_REG_FIB_CFG18    0x6212
+
+#define    RTL8367B_REG_FIB_CFG19    0x6213
+
+#define    RTL8367B_REG_FIB_CFG20    0x6214
+
+#define    RTL8367B_REG_FIB_CFG21    0x6215
+
+#define    RTL8367B_REG_FIB_CFG22    0x6216
+
+#define    RTL8367B_REG_FIB_CFG23    0x6217
+
+#define    RTL8367B_REG_FIB_CFG28    0x621c
+#define    RTL8367B_CFG_CONS1_MAX_OFFSET    12
+#define    RTL8367B_CFG_CONS1_MAX_MASK    0xF000
+#define    RTL8367B_CFG_CONS0_MAX_OFFSET    8
+#define    RTL8367B_CFG_CONS0_MAX_MASK    0xF00
+#define    RTL8367B_CFG_CNT_MIN_OFFSET    0
+#define    RTL8367B_CFG_CNT_MIN_MASK    0xFF
+
+#define    RTL8367B_REG_FIB_CFG29    0x621d
+#define    RTL8367B_CFG_AUTO_DET_ON_OFFSET    15
+#define    RTL8367B_CFG_AUTO_DET_ON_MASK    0x8000
+#define    RTL8367B_CFG_TOUT_MAX_OFFSET    9
+#define    RTL8367B_CFG_TOUT_MAX_MASK    0x7E00
+#define    RTL8367B_CFG_STATE_TMR_OFFSET    5
+#define    RTL8367B_CFG_STATE_TMR_MASK    0x1E0
+#define    RTL8367B_CFG_TEST_TMR_OFFSET    0
+#define    RTL8367B_CFG_TEST_TMR_MASK    0x1F
+
+#define    RTL8367B_REG_FIB_CFG30    0x621e
+#define    RTL8367B_CFG_RG30X1508_OFFSET    8
+#define    RTL8367B_CFG_RG30X1508_MASK    0xFF00
+#define    RTL8367B_CFG_LNK_ON_TMR_OFFSET    0
+#define    RTL8367B_CFG_LNK_ON_TMR_MASK    0xFF
+
+/* (16'h6300)fib_ext_page */
+
+#define    RTL8367B_REG_FIB_EXT_CFG00    0x6300
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_RST_OFFSET    15
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_RST_MASK    0x8000
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_LPK_OFFSET    14
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_LPK_MASK    0x4000
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_SPD_RD_0_OFFSET    13
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_SPD_RD_0_MASK    0x2000
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_ANEN_OFFSET    12
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_ANEN_MASK    0x1000
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_PDOWN_OFFSET    11
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_PDOWN_MASK    0x800
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_ISO_OFFSET    10
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_ISO_MASK    0x400
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_RESTART_OFFSET    9
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_RESTART_MASK    0x200
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_FULLDUP_OFFSET    8
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_FULLDUP_MASK    0x100
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_SPD_RD_1_OFFSET    6
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_SPD_RD_1_MASK    0x40
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_FRCTX_OFFSET    5
+#define    RTL8367B_FIB_EXT_CFG00_CFG_FIB_FRCTX_MASK    0x20
+
+#define    RTL8367B_REG_FIB_EXT_CFG01    0x6301
+#define    RTL8367B_FIB_EXT_CFG01_CAPBILITY_OFFSET    6
+#define    RTL8367B_FIB_EXT_CFG01_CAPBILITY_MASK    0xFFC0
+#define    RTL8367B_FIB_EXT_CFG01_AN_COMPLETE_OFFSET    5
+#define    RTL8367B_FIB_EXT_CFG01_AN_COMPLETE_MASK    0x20
+#define    RTL8367B_FIB_EXT_CFG01_R_FAULT_OFFSET    4
+#define    RTL8367B_FIB_EXT_CFG01_R_FAULT_MASK    0x10
+#define    RTL8367B_FIB_EXT_CFG01_NWAY_ABILITY_OFFSET    3
+#define    RTL8367B_FIB_EXT_CFG01_NWAY_ABILITY_MASK    0x8
+#define    RTL8367B_FIB_EXT_CFG01_LINK_STATUS_OFFSET    2
+#define    RTL8367B_FIB_EXT_CFG01_LINK_STATUS_MASK    0x4
+#define    RTL8367B_FIB_EXT_CFG01_JABBER_DETECT_OFFSET    1
+#define    RTL8367B_FIB_EXT_CFG01_JABBER_DETECT_MASK    0x2
+#define    RTL8367B_FIB_EXT_CFG01_EXTENDED_CAPBILITY_OFFSET    0
+#define    RTL8367B_FIB_EXT_CFG01_EXTENDED_CAPBILITY_MASK    0x1
+
+#define    RTL8367B_REG_FIB_EXT_CFG02    0x6302
+
+#define    RTL8367B_REG_FIB_EXT_CFG03    0x6303
+#define    RTL8367B_FIB_EXT_CFG03_REALTEK_OUI5_0_OFFSET    10
+#define    RTL8367B_FIB_EXT_CFG03_REALTEK_OUI5_0_MASK    0xFC00
+#define    RTL8367B_FIB_EXT_CFG03_MODEL_NO_OFFSET    4
+#define    RTL8367B_FIB_EXT_CFG03_MODEL_NO_MASK    0x3F0
+#define    RTL8367B_FIB_EXT_CFG03_REVISION_NO_OFFSET    0
+#define    RTL8367B_FIB_EXT_CFG03_REVISION_NO_MASK    0xF
+
+#define    RTL8367B_REG_FIB_EXT_CFG04    0x6304
+
+#define    RTL8367B_REG_FIB_EXT_CFG05    0x6305
+
+#define    RTL8367B_REG_FIB_EXT_CFG06    0x6306
+#define    RTL8367B_FIB_EXT_CFG06_FIB_NP_EN_OFFSET    2
+#define    RTL8367B_FIB_EXT_CFG06_FIB_NP_EN_MASK    0x4
+#define    RTL8367B_FIB_EXT_CFG06_RXPAGE_OFFSET    1
+#define    RTL8367B_FIB_EXT_CFG06_RXPAGE_MASK    0x2
+
+#define    RTL8367B_REG_FIB_EXT_CFG07    0x6307
+
+#define    RTL8367B_REG_FIB_EXT_CFG08    0x6308
+
+#define    RTL8367B_REG_FIB_EXT_CFG09    0x6309
+
+#define    RTL8367B_REG_FIB_EXT_CFG10    0x630a
+
+#define    RTL8367B_REG_FIB_EXT_CFG11    0x630b
+
+#define    RTL8367B_REG_FIB_EXT_CFG12    0x630c
+
+#define    RTL8367B_REG_FIB_EXT_CFG13    0x630d
+#define    RTL8367B_FIB_EXT_CFG13_INDR_FUNC_OFFSET    14
+#define    RTL8367B_FIB_EXT_CFG13_INDR_FUNC_MASK    0xC000
+#define    RTL8367B_FIB_EXT_CFG13_DUMMY_OFFSET    5
+#define    RTL8367B_FIB_EXT_CFG13_DUMMY_MASK    0x3FE0
+#define    RTL8367B_FIB_EXT_CFG13_INDR_DEVAD_OFFSET    0
+#define    RTL8367B_FIB_EXT_CFG13_INDR_DEVAD_MASK    0x1F
+
+#define    RTL8367B_REG_FIB_EXT_CFG14    0x630e
+
+#define    RTL8367B_REG_FIB_EXT_CFG15    0x630f
+
+#define    RTL8367B_REG_FIB_EXT_CFG16    0x6310
+
+#define    RTL8367B_REG_FIB_EXT_CFG17    0x6311
+
+#define    RTL8367B_REG_FIB_EXT_CFG18    0x6312
+
+#define    RTL8367B_REG_FIB_EXT_CFG19    0x6313
+
+#define    RTL8367B_REG_FIB_EXT_CFG20    0x6314
+
+#define    RTL8367B_REG_FIB_EXT_CFG21    0x6315
+#define    RTL8367B_FIB_STS_0_OFFSET    13
+#define    RTL8367B_FIB_STS_0_MASK    0xE000
+#define    RTL8367B_FIB_EXT_CFG21_ANA_RG7X_OFFSET    4
+#define    RTL8367B_FIB_EXT_CFG21_ANA_RG7X_MASK    0x1FF0
+#define    RTL8367B_FIB_STS_1_OFFSET    0
+#define    RTL8367B_FIB_STS_1_MASK    0xF
+
+#define    RTL8367B_REG_FIB_EXT_CFG22    0x6316
+#define    RTL8367B_FIB_EXT_CFG22_ANA_RG8X_OFFSET    2
+#define    RTL8367B_FIB_EXT_CFG22_ANA_RG8X_MASK    0xFFFC
+#define    RTL8367B_FIB_STS_2_OFFSET    0
+#define    RTL8367B_FIB_STS_2_MASK    0x3
+
+#define    RTL8367B_REG_FIB_EXT_CFG23    0x6317
+
+#define    RTL8367B_REG_FIB_EXT_CFG24    0x6318
+
+#define    RTL8367B_REG_FIB_EXT_CFG25    0x6319
+
+#define    RTL8367B_REG_FIB_EXT_CFG26    0x631a
+
+#define    RTL8367B_REG_FIB_EXT_CFG27    0x631b
+
+#define    RTL8367B_REG_FIB_EXT_CFG28    0x631c
+
+#define    RTL8367B_REG_FIB_EXT_CFG29    0x631d
+
+#define    RTL8367B_REG_FIB_EXT_CFG30    0x631e
+#define    RTL8367B_SIGNSTAT_OFFSET    8
+#define    RTL8367B_SIGNSTAT_MASK    0x100
+#define    RTL8367B_LINKSTAT_OFFSET    4
+#define    RTL8367B_LINKSTAT_MASK    0xF0
+#define    RTL8367B_SYNCSTAT_OFFSET    0
+#define    RTL8367B_SYNCSTAT_MASK    0xF
+
+
+#endif /*#ifndef _RTL8367B_REG_H_*/
+
diff --git a/nand_spl/board/lantiq/start.S b/nand_spl/board/lantiq/start.S
new file mode 100755
index 0000000..0b43be0
--- /dev/null
+++ b/nand_spl/board/lantiq/start.S
@@ -0,0 +1,552 @@
+/*
+ *  Startup Code for MIPS32 CPU-core
+ *
+ *  Copyright (c) 2003	Wolfgang Denk <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+
+#include <config.h>
+#include <version.h>
+#include <asm/regdef.h>
+#include <asm/mipsregs.h>
+#include <asm/cacheops.h>
+#include <asm/addrspace.h>
+#include <asm/yamon.h>
+
+/*****************************************************************************
+ * Local assembler register definitions
+ *****************************************************************************/
+#define C0_EBASe     $15,1
+
+#define CFG_BOOTSTRAP_CODE
+
+#define S_EBASeExpBase     12       /* Exception Base */
+#define M_EBASeExpBase     (0x3ffff << S_EBASeExpBase)
+#define S_EBASeCPUNum      0        /* CPU Number */
+#define M_EBASeCPUNum      (0x1ff << S_EBASeCPUNum)
+
+/*
+ * Values in the CPU Number field
+ */
+#define K_EBASeCPUNum_Host 0
+#define K_EBASeCPUNum_Voice 1
+
+/* C0_EBASE register encoding */
+#define CO_EBASE_EXPBASE_SHF     S_EBASeExpBase
+#define CO_EBASE_EXPBASE_MSK     M_EBASeExpBase
+
+#define CO_EBASE_CPUNUM_SHF      S_EBASeCPUNum
+#define CO_EBASE_CPUNUM_MSK      M_EBASeCPUNum
+
+#define CO_EBASE_CPU_HOST     K_EBASeCPUNum_Host
+#define CO_EBASE_CPU_VOICE    K_EBASeCPUNum_Voice
+
+#define CFG_EBU_BOOTWORD              0x688c688c
+/* lcd back light gpio define */
+#define BSP_MIPS_GPIO_P1_ALTSEL0     0xBE100B4C
+#define BSP_MIPS_GPIO_P1_ALTSEL1     0xBE100B50
+#define BSP_MIPS_GPIO_P1_DIR         0xBE100B48
+#define BSP_MIPS_GPIO_P1_OUT         0xBE100B40
+#define BSP_MIPS_GPIO_P1_OD          0xBE100B54
+
+/* FixMe: Adresses not defined... */
+#define RST_STAT   0xbf203014
+/* POR,SRST, WDT0, WDT1,HRST*/
+#define HARD_RST 0xE8000001
+    .set noreorder
+	.globl _start
+   	.globl __exception_vector_tlb_refill
+   	.globl __exception_vector_xtlb_refill
+   	.globl __exception_vector_general
+   	.globl __exception_vector_int
+   	.text
+
+_start:
+	/* RESET entry */
+   	b     reset
+   	nop
+   	nop
+   	nop
+   .org 0x10
+   .word CFG_EBU_BOOTWORD     /* EBU init code, fetched during booting */
+   .word 0x00000000           /* phase of the flash                    */
+
+   .org 0x18
+   .string "1.1.0"            /* version 1.1.0                         */
+   .word 0x00000000
+   .align 4
+
+reset:
+        /* turn off led back light */
+	li      t0, 0x000091f8
+	sw      t0, BSP_MIPS_GPIO_P1_DIR
+
+	li      t0, 0x000085c0
+	sw      t0, BSP_MIPS_GPIO_P1_ALTSEL0
+
+	li      t0, 0x00000000
+	sw      t0, BSP_MIPS_GPIO_P1_ALTSEL1
+
+	li      t0, 0x000091f8
+	sw      t0, BSP_MIPS_GPIO_P1_OD
+
+	li      t0, 0x00000000
+	sw      t0, BSP_MIPS_GPIO_P1_OUT
+
+  mtc0    zero, CP0_WATCHLO
+	mtc0    zero, CP0_WATCHHI
+	mtc0    zero, CP0_CAUSE
+
+       /* Determine processor */
+	mfc0    k1, C0_PRId
+	li	t0, M_PRIdImp | M_PRIdCoID
+	and     k1, t0
+
+/* Check if it is a MIPS 34K processor */
+	li	t0, MIPS_34K
+	bne	k1, t0, 2f
+	nop
+
+	/* Setup MIPS34K specifics (implementation dependent fields) */
+	MFC0(   t0, C0_Config )
+	li	t1, CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS34K
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+	MFC0(   t0, C0_Status )
+	li	t1, STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS34K
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+2:
+	/* Check if it is a MIPS 4K/5K family processor */
+	li	t0, MIPS_4Kc
+	beq	k1, t0, 1f
+	nop
+	li	t0, MIPS_4KEc
+	beq	k1, t0, 1f
+	nop
+
+	b	mips32_64
+	nop
+
+1:
+	/* Setup MIPS 4K/5K specifics (implementation dependent fields) */
+	MFC0(   t0, C0_Config )
+	li	t1, CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS4K5K
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+	MFC0(   t0, C0_Status )
+	li	t1, STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS4K5K
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+/************************************************************************
+ *  MIPS32/MIPS64 specific cpu initialisation
+ ************************************************************************/
+mips32_64:
+
+	/* Setup generic MIPS32/MIPS64 fields of STATUS register */
+	MFC0(   t0, C0_Status )
+	li	t1, ~STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS32_64
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+	/* Setup generic MIPS32 fields of CONFIG0 register */
+	MFC0(   t0, C0_Config )
+	li	t1, ~CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS32_64
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+
+	/* Initialize GOT pointer.
+	*/
+	bal     1f
+	nop
+	.word   _GLOBAL_OFFSET_TABLE_
+1:
+	move    gp, ra
+	lw      t1, 0(ra)
+	move	gp, t1
+
+
+   	/* Initialize any external memory.
+	 */
+	la      t9, lowlevel_init
+	jalr    t9
+	nop
+lowlevel_init_done:
+
+sys_init_cache:
+
+#define RA                      t4
+#define icache_size             t3
+#define icache_linesize         t2
+#define dcache_size             t1
+#define dcache_linesize         t0
+        move    RA, ra
+        move    a0, k1
+        bal     sys_determine_icache_linesize_flash
+        nop
+	move    icache_linesize, v0 /*icache_linesize=0x20 for amazon_s*/
+
+        bal     sys_determine_icache_lines_flash /*icache lines=0x400 for amazon_s*/
+        nop
+        multu   icache_linesize, v0
+        mflo    icache_size /*icache_size=0x8000 for amazon_s*/
+
+        bal             sys_determine_dcache_linesize_flash
+        nop
+        move    dcache_linesize, v0 /*dcache_linesize=0x20 for amazon_s*/
+
+        bal         sys_determine_dcache_lines_flash /*dcache lines=0x200 for amazon_s*/
+        nop
+        multu   dcache_linesize, v0
+        mflo    dcache_size  /*dcache_size=0x4000 for amazon_s*/
+
+        /* Initialise instruction cache */
+        move    a0, icache_size
+        move    a1, icache_linesize
+        bal             sys_init_icache
+        nop
+
+        /* Initialise data cache */
+        move    a0, dcache_size
+        move    a1, dcache_linesize
+        bal         sys_init_dcache
+        move    a2, k1
+
+#if 1
+change_got_table:
+        bal     1f
+	      nop
+        .word   got_size
+1:
+        move    t1, ra
+	      lw      t1, 0(t1)
+
+        move    t0, gp
+        add     t1, t0, t1
+        addi    t0, 8 /*skip first 2 entries*/
+2:
+        lw      t2, 0(t0)
+        subu    t2, 0x20000000
+        sw      t2, 0(t0)
+        bne     t0, t1, 2b
+        addi    t0, t0, 4
+
+      	subu    gp, 0x20000000
+#endif
+    	li	t0, 0xBE22FF00
+	    la	sp, 0(t0)
+	    //la	t9, nand_boot
+	    la  t9, nand_spl_init
+		j	t9
+	    nop
+
+
+	/* Exception handlers.
+	 */
+romReserved:
+	b romReserved
+
+romExcHandle:
+	b romExcHandle
+
+
+
+
+/* icache init */
+
+sys_init_icache:
+	li	 a3, MIPS_34K
+	beq	 a3, a2, 2f
+	nop
+
+1:
+	/* 20Kc/25Kf : Clear ITagLo/ITagHi */
+	/* Note: Use the default case because ITagLo==TagLo and ITagHI=TagHi */
+
+	/* default: Clear TagLo/TagHi */
+	MTC0( zero, C0_TagLo )
+	MTC0( zero, C0_TagHi )
+	b	0f
+	 nop
+
+2:
+	/* 24K/24KE/34K : Clear ITagLo */
+	MTC0_SEL_OPCODE( R_zero, R_C0_ITagLo, R_C0_SelITagLo )
+
+0:
+	/* Calc an address that will correspond to the first cache line */
+	// li	a2, KSEG0BASE
+	li 		a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	ICACHE_INDEX_STORE_TAG, 0(a2)	/* clear tag */
+	bne	a2, a3, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+
+
+/* dcache init */
+
+sys_init_dcache:
+	li	 a3, MIPS_34K
+	beq	 a3, a2, 2f
+	nop
+
+	/* default: Clear TagLo/TagHi */
+	MTC0( zero, C0_TagLo )
+	MTC0( zero, C0_TagHi )
+	b	0f
+	 nop
+
+1:
+	/* 20Kc/25Kf : Clear DTagLo and DTagHi */
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagLo, R_C0_SelDTagLo )
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagHi, R_C0_SelDTagHi )
+	b	0f
+	 nop
+2:
+	/* 24K/24KE/34K : Clear DTagLo */
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagLo, R_C0_SelDTagLo )
+
+
+/************************************************************************
+ *  invalidating all dcache lines
+ ************************************************************************/
+0:
+	/* Calc an address that will correspond to the first cache line */
+//	li	a2, KSEG0BASE
+	li	a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	DCACHE_INDEX_STORE_TAG, 0(a2)	/* clear tag */
+	bne		a2, a3, 1b
+	addu	a2, a1
+#if 0
+/************************************************************************
+ *  fetch and lock all dcache lines
+ ************************************************************************/
+	/* Calc an address that will correspond to the first cache line */
+//	li	a2, KSEG0BASE
+	li	a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	DCACHE_ADDR_FETCH_LOCK, 0(a2)	/* clear tag */
+        //cache   DCACHE_ADDR_HIT_WRITEBACK_INVALIDATE, 0(a2)  /* invalidate */
+	bne		a2, a3, 1b
+	addu	a2, a1
+
+9:
+
+#endif
+	jr	ra
+	 nop
+
+
+
+
+
+/* Subroutine : Determine icache line size */
+
+sys_determine_icache_linesize_flash:
+icache_linesize_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* I-cache line size */
+	li	t8, M_Config1IL
+	and	t8, config1
+	//beq	t8, zero, icache_linesize_zero
+	li	t7, S_Config1IL
+	srl	t8, t7
+	li	t7, 0x2
+	sll	v0, t7, t8
+
+	jr	ra
+	nop
+
+/* Subroutine : Determine icache line */
+
+sys_determine_icache_lines_flash:
+icache_lines_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* I-cache lines
+	 * Calculated as associativity * sets per way
+	 */
+	li	t8, M_Config1IA
+	and	t8, config1
+	li	t7, S_Config1IA
+	srl	t8, t7
+	addiu	t8,1				/* t8 = associativity	*/
+
+	li	t7, M_Config1IS
+	and	t7, config1
+	li	t9, S_Config1IS
+	srl	t7, t9
+	li	t9, 0x40
+	sll	t7, t9, t7			/* t7 = sets per way	*/
+
+	multu	t8, t7
+	mflo    v0
+
+	jr	ra
+	nop
+
+
+/* Subroutine : Determine dcache line size */
+
+sys_determine_dcache_linesize_flash:
+dcache_linesize_mips32:
+.globl   dcache_linesize_mips32
+.ent     dcache_linesize_mips32
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* D-cache line size */
+	li	t8, M_Config1DL
+	and	t8, config1
+	//beq	t8, zero, dcache_linesize_zero
+	li	t7, S_Config1DL
+	srl	t8, t7
+	li	t7, 0x2
+	sll	v0, t7, t8
+
+	jr	ra
+	nop
+.end    dcache_linesize_mips32
+/* Subroutine : Determine dcache line */
+
+sys_determine_dcache_lines_flash:
+dcache_lines_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* D-cache lines
+	 * Calculated as associativity * sets per way
+	 */
+	li	t8, M_Config1DA
+	and	t8, config1
+	li	t7, S_Config1DA
+	srl	t8, t7
+	addiu	t8,1				/* t8 = associativity	*/
+
+	li	t7, M_Config1DS
+	and	t7, config1
+	li	t9, S_Config1DS
+	srl	t7, t9
+	li	t9, 0x40
+	sll	t7, t9, t7			/* t7 = sets per way	*/
+
+	multu	t8, t7
+	mflo    v0
+
+	jr	ra
+	nop
+
+dcache_writeback_invalidate:
+//    a0 : size
+//    a1 : dcache_line_size
+//    a2 : start addr
+.globl   dcache_writeback_invalidate
+.ent     dcache_writeback_invalidate
+
+	addu	t8, a2, a0
+	subu  t8, a1
+	/* Loop through all address */
+1:
+	cache	DCACHE_ADDR_HIT_WRITEBACK_INVALIDATE, 0(a2)	/* clear tag */
+//	bne		a2, t8, 1b
+	sub	t9, a2, t8
+	blez	t9, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+        .end    dcache_writeback_invalidate
+
+dcache_hit_invalidate:
+//    a0 : size
+//    a1 : dcache_line_size
+//    a2 : start addr
+.globl   dcache_hit_invalidate
+.ent     dcache_hit_invalidate
+
+	addu	t8, a2, a0
+	subu  t8, a1
+	/* Loop through all address */
+1:
+	cache	DCACHE_ADDR_HIT_INVALIDATE, 0(a2)	/* clear tag */
+	bne		a2, t8, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+        .end dcache_hit_invalidate
+
