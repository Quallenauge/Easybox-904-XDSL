From f27ef8941ca29b2d10428754be51e8ee06bb1263 Mon Sep 17 00:00:00 2001
From: Mathew McBride <matt@traverse.com.au>
Date: Mon, 7 Aug 2017 10:19:48 +1000
Subject: [PATCH] Recognize when an RGMII Link is set as fixed (in the device
 tree) and set up the MAC accordingly

---
 drivers/net/ethernet/freescale/sdk_dpaa/mac.c                      |    1 
 drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/memac.c |   13 ++++++++++
 2 files changed, 14 insertions(+)

--- a/drivers/net/ethernet/freescale/sdk_dpaa/mac.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/mac.c
@@ -386,6 +386,7 @@ static int __cold mac_probe(struct platf
 		mac_dev->fixed_link->duplex = phy->duplex;
 		mac_dev->fixed_link->pause = phy->pause;
 		mac_dev->fixed_link->asym_pause = phy->asym_pause;
+		printk(KERN_INFO "Setting up fixed link, speed %d duplex %d\n", mac_dev->fixed_link->speed, mac_dev->fixed_link->duplex);
 	}
 
 	_errno = mac_dev->init(mac_dev);
--- a/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/memac.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/memac.c
@@ -36,6 +36,8 @@
 
  @Description   FM mEMAC driver
 *//***************************************************************************/
+#include <../../../../sdk_dpaa/mac.h>
+#include <linux/phy_fixed.h>
 
 #include "std_ext.h"
 #include "string_ext.h"
@@ -48,6 +50,8 @@
 #include "memac.h"
 
 
+static t_Error MemacAdjustLink(t_Handle h_Memac, e_EnetSpeed speed, bool fullDuplex);
+
 /*****************************************************************************/
 /*                      Internal routines                                    */
 /*****************************************************************************/
@@ -276,11 +280,20 @@ static t_Error MemacEnable(t_Handle h_Me
 {
     t_Memac     *p_Memac = (t_Memac *)h_Memac;
 
+    struct mac_device *mac_dev = (struct mac_device *)p_Memac->h_App;
+
     SANITY_CHECK_RETURN_ERROR(p_Memac, E_INVALID_HANDLE);
     SANITY_CHECK_RETURN_ERROR(!p_Memac->p_MemacDriverParam, E_INVALID_STATE);
 
     fman_memac_enable(p_Memac->p_MemMap, (mode & e_COMM_MODE_RX), (mode & e_COMM_MODE_TX));
 
+    if (ENET_INTERFACE_FROM_MODE(p_Memac->enetMode) == e_ENET_IF_RGMII) {
+	if (mac_dev->fixed_link) {
+		printk(KERN_INFO "This is a fixed-link, forcing speed %d duplex %d\n",mac_dev->fixed_link->speed,mac_dev->fixed_link->duplex);
+		MemacAdjustLink(h_Memac,mac_dev->fixed_link->speed,mac_dev->fixed_link->duplex);
+	}
+    }
+
     return E_OK;
 }
 
